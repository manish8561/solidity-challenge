{
	"id": "20333e4314c8fc6ca67512403019e586",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/BiddingWar.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.24;\n\n// Import Ownable from the OpenZeppelin Contracts library\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\n\n// Uncomment this line to use console.log\n// import \"hardhat/console.sol\";\n\ncontract BiddingWar is Ownable, ReentrancyGuard {\n    uint public commission = 5;\n    uint128 public bidCounter = 0;\n    uint64 public gameEndTime;\n    uint public highestBid;\n    address public highestBidder;\n    bool public gameStatus = false;\n\n    struct Bid {\n        uint amount;\n        address user;\n        uint64 when;\n    }\n\n    mapping(uint => Bid) public bids;\n\n    event BidEvent(\n        uint128 indexed bid,\n        uint amount,\n        uint64 when,\n        address indexed user\n    );\n\n    event WinEvent(\n        uint128 indexed bid,\n        uint highestBid,\n        uint winAmount,\n        uint64 when,\n        address indexed winner\n    );\n\n    constructor() Ownable(msg.sender) {\n        startGame();\n    }\n\n    /**\n     * start the game\n     */\n    function startGame() private {\n        require(gameEndTime < block.timestamp, \"Last game is still running!\");\n        require(!gameStatus, \"Last game is still waiting for result!\");\n\n        gameEndTime = uint64(block.timestamp + 3600); //adding hour\n        gameStatus = true; // start/restart the game status\n        highestBidder = address(0);\n        highestBid = 0;\n    }\n\n    /**\n     * place the bid\n     */\n    function placeBid() external payable nonReentrant {\n        require(msg.value > 0, \"Bid amount should be greater than zero!\");\n        require(\n            msg.value > highestBid,\n            \"Bid amount should be greater than last bid amount!\"\n        );\n        require(gameEndTime > block.timestamp, \"Game over wait for new game!\");\n        // require(gameStatus, \"Wait for new game!\");\n        bidCounter++;\n        bids[bidCounter].amount = msg.value;\n        bids[bidCounter].when = uint64(block.timestamp);\n        bids[bidCounter].user = msg.sender;\n\n        emit BidEvent(\n            bidCounter,\n            msg.value,\n            uint64(block.timestamp),\n            msg.sender\n        );\n        // changing values in the game\n        gameEndTime = gameEndTime + 600; // increase by 10 minutes\n        highestBid = msg.value;\n        highestBidder = msg.sender;\n\n        //sending the commission\n        uint commissionValue = (msg.value * commission) / 100;\n        payable(owner()).transfer(commissionValue);\n    }\n\n    /**\n     * declare result and restart the game\n     */\n    function declareResult() public onlyOwner {\n        require(gameEndTime < block.timestamp, \"Last game is still running!\");\n        gameStatus = false;\n        //send funds only highet bidder have address\n        if (highestBidder != address(0)) {\n            // uint winAmt = address(this).balance;\n            uint winAmt = 0;\n            assembly {\n                winAmt := balance(address())\n            }\n            payable(highestBidder).transfer(winAmt);\n            emit WinEvent(\n                bidCounter,\n                highestBid,\n                winAmt,\n                uint64(block.timestamp),\n                highestBidder\n            );\n        }\n        // restart the games\n        startGame();\n    }\n\n    /**\n     * common function to transfer fund to owner\n     */\n    function fundsTransferToOwner() private {\n        payable(owner()).transfer(msg.value);\n    }\n\n    receive() external payable {\n        fundsTransferToOwner();\n    }\n\n    fallback() external payable {\n        fundsTransferToOwner();\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 188,
								"contract": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/BiddingWar.sol": {
				"BiddingWar": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint128",
									"name": "bid",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "when",
									"type": "uint64"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "BidEvent",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint128",
									"name": "bid",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "highestBid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "winAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "when",
									"type": "uint64"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "winner",
									"type": "address"
								}
							],
							"name": "WinEvent",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "bidCounter",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "bids",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint64",
									"name": "when",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "commission",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "declareResult",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "gameEndTime",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "gameStatus",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "highestBid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "highestBidder",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "placeBid",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/BiddingWar.sol\":313:3627  contract BiddingWar is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/BiddingWar.sol\":392:393  5 */\n  0x05\n    /* \"contracts/BiddingWar.sol\":367:393  uint public commission = 5 */\n  0x02\n  dup2\n  swap1\n  sstore\n    /* \"contracts/BiddingWar.sol\":399:428  uint128 public bidCounter = 0 */\n  0x03\n  dup1\n  sload\n  not(sub(shl(0x80, 0x01), 0x01))\n  and\n  swap1\n  sstore\n    /* \"contracts/BiddingWar.sol\":527:557  bool public gameStatus = false */\n  dup1\n  sload\n  not(shl(0xa0, 0xff))\n  and\n  swap1\n  sstore\n    /* \"contracts/BiddingWar.sol\":977:1039  constructor() Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/BiddingWar.sol\":999:1009  msg.sender */\n  caller\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_6\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":160:211   */\n  mstore\n    /* \"#utility.yul\":133:151   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\ntag_7:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_9\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1713:1714  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1917:1938  _status = NOT_ENTERED */\n  dup1\n  sstore\n    /* \"contracts/BiddingWar.sol\":1021:1032  startGame() */\n  tag_13\n    /* \"contracts/BiddingWar.sol\":1021:1030  startGame */\n  tag_14\n    /* \"contracts/BiddingWar.sol\":1021:1032  startGame() */\n  jump\t// in\ntag_13:\n    /* \"contracts/BiddingWar.sol\":313:3627  contract BiddingWar is Ownable, ReentrancyGuard {... */\n  jump(tag_26)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/BiddingWar.sol\":1083:1459  function startGame() private {... */\ntag_14:\n    /* \"contracts/BiddingWar.sol\":1130:1141  gameEndTime */\n  sload(0x03)\n    /* \"contracts/BiddingWar.sol\":1144:1159  block.timestamp */\n  timestamp\n  shl(0x80, 0x01)\n    /* \"contracts/BiddingWar.sol\":1130:1141  gameEndTime */\n  swap1\n  swap2\n  div\n  sub(shl(0x40, 0x01), 0x01)\n  and\n    /* \"contracts/BiddingWar.sol\":1130:1159  gameEndTime < block.timestamp */\n  lt\n    /* \"contracts/BiddingWar.sol\":1122:1191  require(gameEndTime < block.timestamp, \"Last game is still running!\") */\n  tag_18\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":424:426   */\n  0x20\n    /* \"contracts/BiddingWar.sol\":1122:1191  require(gameEndTime < block.timestamp, \"Last game is still running!\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":406:427   */\n  mstore\n    /* \"#utility.yul\":463:465   */\n  0x1b\n    /* \"#utility.yul\":443:461   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":436:466   */\n  mstore\n    /* \"#utility.yul\":502:531   */\n  0x4c6173742067616d65206973207374696c6c2072756e6e696e67210000000000\n    /* \"#utility.yul\":482:500   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":475:532   */\n  mstore\n    /* \"#utility.yul\":549:567   */\n  0x64\n  add\n    /* \"contracts/BiddingWar.sol\":1122:1191  require(gameEndTime < block.timestamp, \"Last game is still running!\") */\n  tag_7\n    /* \"#utility.yul\":222:573   */\n  jump\n    /* \"contracts/BiddingWar.sol\":1122:1191  require(gameEndTime < block.timestamp, \"Last game is still running!\") */\ntag_18:\n    /* \"contracts/BiddingWar.sol\":1210:1220  gameStatus */\n  sload(0x05)\n  shl(0xa0, 0x01)\n  swap1\n  div\n  0xff\n  and\n    /* \"contracts/BiddingWar.sol\":1209:1220  !gameStatus */\n  iszero\n    /* \"contracts/BiddingWar.sol\":1201:1263  require(!gameStatus, \"Last game is still waiting for result!\") */\n  tag_21\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":780:782   */\n  0x20\n    /* \"contracts/BiddingWar.sol\":1201:1263  require(!gameStatus, \"Last game is still waiting for result!\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":762:783   */\n  mstore\n    /* \"#utility.yul\":819:821   */\n  0x26\n    /* \"#utility.yul\":799:817   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":792:822   */\n  mstore\n    /* \"#utility.yul\":858:892   */\n  0x4c6173742067616d65206973207374696c6c2077616974696e6720666f722072\n    /* \"#utility.yul\":838:856   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":831:893   */\n  mstore\n  shl(0xd0, 0x6573756c7421)\n    /* \"#utility.yul\":909:927   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":902:938   */\n  mstore\n    /* \"#utility.yul\":955:974   */\n  0x84\n  add\n    /* \"contracts/BiddingWar.sol\":1201:1263  require(!gameStatus, \"Last game is still waiting for result!\") */\n  tag_7\n    /* \"#utility.yul\":578:980   */\n  jump\n    /* \"contracts/BiddingWar.sol\":1201:1263  require(!gameStatus, \"Last game is still waiting for result!\") */\ntag_21:\n    /* \"contracts/BiddingWar.sol\":1295:1317  block.timestamp + 3600 */\n  tag_24\n    /* \"contracts/BiddingWar.sol\":1295:1310  block.timestamp */\n  timestamp\n    /* \"contracts/BiddingWar.sol\":1313:1317  3600 */\n  0x0e10\n    /* \"contracts/BiddingWar.sol\":1295:1317  block.timestamp + 3600 */\n  tag_25\n  jump\t// in\ntag_24:\n    /* \"contracts/BiddingWar.sol\":1274:1285  gameEndTime */\n  0x03\n    /* \"contracts/BiddingWar.sol\":1274:1318  gameEndTime = uint64(block.timestamp + 3600) */\n  dup1\n  sload\n  sub(shl(0x40, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  shl(0x80, 0x01)\n  mul\n  not(sub(shl(0xc0, 0x01), shl(0x80, 0x01)))\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/BiddingWar.sol\":1342:1352  gameStatus */\n  0x05\n    /* \"contracts/BiddingWar.sol\":1342:1359  gameStatus = true */\n  dup1\n  sload\n  not(sub(shl(0xa8, 0x01), 0x01))\n    /* \"contracts/BiddingWar.sol\":1402:1428  highestBidder = address(0) */\n  and\n  shl(0xa0, 0x01)\n  or\n  swap1\n  sstore\n  0x00\n    /* \"contracts/BiddingWar.sol\":1438:1448  highestBid */\n  0x04\n    /* \"contracts/BiddingWar.sol\":1438:1452  highestBid = 0 */\n  sstore\n    /* \"contracts/BiddingWar.sol\":1083:1459  function startGame() private {... */\n  jump\t// out\n    /* \"#utility.yul\":985:1207   */\ntag_25:\n    /* \"#utility.yul\":1050:1059   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":1071:1081   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1068:1201   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":1123:1133   */\n  0x4e487b71\n    /* \"#utility.yul\":1118:1121   */\n  0xe0\n    /* \"#utility.yul\":1114:1134   */\n  shl\n    /* \"#utility.yul\":1111:1112   */\n  0x00\n    /* \"#utility.yul\":1104:1135   */\n  mstore\n    /* \"#utility.yul\":1158:1162   */\n  0x11\n    /* \"#utility.yul\":1155:1156   */\n  0x04\n    /* \"#utility.yul\":1148:1163   */\n  mstore\n    /* \"#utility.yul\":1186:1190   */\n  0x24\n    /* \"#utility.yul\":1183:1184   */\n  0x00\n    /* \"#utility.yul\":1176:1191   */\n  revert\n    /* \"#utility.yul\":1068:1201   */\ntag_31:\n    /* \"#utility.yul\":985:1207   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\ntag_26:\n    /* \"contracts/BiddingWar.sol\":313:3627  contract BiddingWar is Ownable, ReentrancyGuard {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/BiddingWar.sol\":313:3627  contract BiddingWar is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x91f90157\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xd57bde79\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xe1489191\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xecfc7ecc\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x03f69354\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4423c5f1\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x44d9bc5f\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x722fed7e\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8574c296\n      eq\n      tag_8\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/BiddingWar.sol\":3523:3545  fundsTransferToOwner() */\n      tag_18\n        /* \"contracts/BiddingWar.sol\":3523:3543  fundsTransferToOwner */\n      tag_19\n        /* \"contracts/BiddingWar.sol\":3523:3545  fundsTransferToOwner() */\n      jump\t// in\n    tag_18:\n        /* \"contracts/BiddingWar.sol\":313:3627  contract BiddingWar is Ownable, ReentrancyGuard {... */\n      stop\n    tag_2:\n        /* \"contracts/BiddingWar.sol\":3596:3618  fundsTransferToOwner() */\n      tag_18\n        /* \"contracts/BiddingWar.sol\":3596:3616  fundsTransferToOwner */\n      tag_19\n        /* \"contracts/BiddingWar.sol\":3596:3618  fundsTransferToOwner() */\n      jump\t// in\n        /* \"contracts/BiddingWar.sol\":399:428  uint128 public bidCounter = 0 */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      sload(0x03)\n      tag_24\n      swap1\n      sub(shl(0x80, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_24:\n      mload(0x40)\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":178:225   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":160:226   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/BiddingWar.sol\":399:428  uint128 public bidCounter = 0 */\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BiddingWar.sol\":652:684  mapping(uint => Bid) public bids */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_29\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      mstore(0x20, 0x06)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      swap1\n      shl(0xa0, 0x01)\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup4\n      jump\n    tag_29:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":622:647   */\n      swap4\n      dup5\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":683:715   */\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":678:680   */\n      0x20\n        /* \"#utility.yul\":663:681   */\n      dup5\n      add\n        /* \"#utility.yul\":656:716   */\n      mstore\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":752:783   */\n      and\n        /* \"#utility.yul\":732:750   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":725:784   */\n      mstore\n        /* \"#utility.yul\":610:612   */\n      0x60\n        /* \"#utility.yul\":595:613   */\n      add\n        /* \"contracts/BiddingWar.sol\":652:684  mapping(uint => Bid) public bids */\n      tag_26\n        /* \"#utility.yul\":422:790   */\n      jump\n        /* \"contracts/BiddingWar.sol\":434:459  uint64 public gameEndTime */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      sload(0x03)\n      tag_36\n      swap1\n      shl(0x80, 0x01)\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_36:\n      mload(0x40)\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":957:988   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":939:989   */\n      dup2\n      mstore\n        /* \"#utility.yul\":927:929   */\n      0x20\n        /* \"#utility.yul\":912:930   */\n      add\n        /* \"contracts/BiddingWar.sol\":434:459  uint64 public gameEndTime */\n      tag_26\n        /* \"#utility.yul\":795:995   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_18\n      tag_42\n      jump\t// in\n        /* \"contracts/BiddingWar.sol\":527:557  bool public gameStatus = false */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      sload(0x05)\n      tag_44\n      swap1\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n    tag_44:\n      mload(0x40)\n        /* \"#utility.yul\":1165:1179   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1158:1180   */\n      iszero\n        /* \"#utility.yul\":1140:1181   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1128:1130   */\n      0x20\n        /* \"#utility.yul\":1113:1131   */\n      add\n        /* \"contracts/BiddingWar.sol\":527:557  bool public gameStatus = false */\n      tag_26\n        /* \"#utility.yul\":1000:1187   */\n      jump\n        /* \"contracts/BiddingWar.sol\":2595:3316  function declareResult() public onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      tag_18\n      tag_50\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_52:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1356:1388   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1338:1389   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1326:1328   */\n      0x20\n        /* \"#utility.yul\":1311:1329   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      tag_26\n        /* \"#utility.yul\":1192:1395   */\n      jump\n        /* \"contracts/BiddingWar.sol\":493:521  address public highestBidder */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      sload(0x05)\n      tag_52\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/BiddingWar.sol\":465:487  uint public highestBid */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_61\n      sload(0x04)\n      dup2\n      jump\n    tag_61:\n      mload(0x40)\n        /* \"#utility.yul\":1546:1571   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1534:1536   */\n      0x20\n        /* \"#utility.yul\":1519:1537   */\n      add\n        /* \"contracts/BiddingWar.sol\":465:487  uint public highestBid */\n      tag_26\n        /* \"#utility.yul\":1400:1577   */\n      jump\n        /* \"contracts/BiddingWar.sol\":367:393  uint public commission = 5 */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_61\n      sload(0x02)\n      dup2\n      jump\n        /* \"contracts/BiddingWar.sol\":1502:2530  function placeBid() external payable nonReentrant {... */\n    tag_13:\n      tag_18\n      tag_70\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      tag_18\n      tag_73\n      calldatasize\n      0x04\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n        /* \"contracts/BiddingWar.sol\":3387:3480  function fundsTransferToOwner() private {... */\n    tag_19:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      sload\n        /* \"contracts/BiddingWar.sol\":3437:3473  payable(owner()).transfer(msg.value) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"contracts/BiddingWar.sol\":3463:3472  msg.value */\n      callvalue\n        /* \"contracts/BiddingWar.sol\":3437:3473  payable(owner()).transfer(msg.value) */\n      dup1\n      iszero\n      0x08fc\n      mul\n      swap3\n        /* \"contracts/BiddingWar.sol\":3463:3472  msg.value */\n      swap1\n      swap2\n        /* \"contracts/BiddingWar.sol\":3437:3473  payable(owner()).transfer(msg.value) */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      dup2\n        /* \"contracts/BiddingWar.sol\":3437:3473  payable(owner()).transfer(msg.value) */\n      dup2\n        /* \"contracts/BiddingWar.sol\":3463:3472  msg.value */\n      dup6\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup9\n        /* \"contracts/BiddingWar.sol\":3437:3473  payable(owner()).transfer(msg.value) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_79\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_79:\n      pop\n        /* \"contracts/BiddingWar.sol\":3387:3480  function fundsTransferToOwner() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_81\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_84\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/BiddingWar.sol\":2595:3316  function declareResult() public onlyOwner {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_87\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_87:\n        /* \"contracts/BiddingWar.sol\":2655:2666  gameEndTime */\n      sload(0x03)\n        /* \"contracts/BiddingWar.sol\":2669:2684  block.timestamp */\n      timestamp\n      shl(0x80, 0x01)\n        /* \"contracts/BiddingWar.sol\":2655:2666  gameEndTime */\n      swap1\n      swap2\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n        /* \"contracts/BiddingWar.sol\":2655:2684  gameEndTime < block.timestamp */\n      lt\n        /* \"contracts/BiddingWar.sol\":2647:2716  require(gameEndTime < block.timestamp, \"Last game is still running!\") */\n      tag_89\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2075:2077   */\n      0x20\n        /* \"contracts/BiddingWar.sol\":2647:2716  require(gameEndTime < block.timestamp, \"Last game is still running!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2057:2078   */\n      mstore\n        /* \"#utility.yul\":2114:2116   */\n      0x1b\n        /* \"#utility.yul\":2094:2112   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2087:2117   */\n      mstore\n        /* \"#utility.yul\":2153:2182   */\n      0x4c6173742067616d65206973207374696c6c2072756e6e696e67210000000000\n        /* \"#utility.yul\":2133:2151   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2126:2183   */\n      mstore\n        /* \"#utility.yul\":2200:2218   */\n      0x64\n      add\n        /* \"contracts/BiddingWar.sol\":2647:2716  require(gameEndTime < block.timestamp, \"Last game is still running!\") */\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_89:\n        /* \"contracts/BiddingWar.sol\":2726:2736  gameStatus */\n      0x05\n        /* \"contracts/BiddingWar.sol\":2726:2744  gameStatus = false */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      dup2\n      and\n      swap1\n      swap2\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BiddingWar.sol\":2811:2824  highestBidder */\n      and\n        /* \"contracts/BiddingWar.sol\":2811:2838  highestBidder != address(0) */\n      iszero\n        /* \"contracts/BiddingWar.sol\":2807:3260  if (highestBidder != address(0)) {... */\n      tag_92\n      jumpi\n        /* \"contracts/BiddingWar.sol\":3025:3038  highestBidder */\n      sload(0x05)\n        /* \"contracts/BiddingWar.sol\":3017:3056  payable(highestBidder).transfer(winAmt) */\n      mload(0x40)\n        /* \"contracts/BiddingWar.sol\":2980:2989  address() */\n      address\n        /* \"contracts/BiddingWar.sol\":2972:2990  balance(address()) */\n      balance\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BiddingWar.sol\":3025:3038  highestBidder */\n      and\n      swap1\n        /* \"contracts/BiddingWar.sol\":3017:3056  payable(highestBidder).transfer(winAmt) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"contracts/BiddingWar.sol\":2972:2990  balance(address()) */\n      dup4\n      swap1\n        /* \"contracts/BiddingWar.sol\":2906:2917  uint winAmt */\n      0x00\n        /* \"contracts/BiddingWar.sol\":3017:3056  payable(highestBidder).transfer(winAmt) */\n      dup2\n        /* \"contracts/BiddingWar.sol\":2906:2917  uint winAmt */\n      dup2\n        /* \"contracts/BiddingWar.sol\":3017:3056  payable(highestBidder).transfer(winAmt) */\n      dup2\n        /* \"contracts/BiddingWar.sol\":2972:2990  balance(address()) */\n      dup6\n        /* \"contracts/BiddingWar.sol\":3025:3038  highestBidder */\n      dup9\n        /* \"contracts/BiddingWar.sol\":3017:3056  payable(highestBidder).transfer(winAmt) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_94\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_94:\n      pop\n        /* \"contracts/BiddingWar.sol\":3222:3235  highestBidder */\n      sload(0x05)\n        /* \"contracts/BiddingWar.sol\":3101:3111  bidCounter */\n      sload(0x03)\n        /* \"contracts/BiddingWar.sol\":3129:3139  highestBid */\n      sload(0x04)\n        /* \"contracts/BiddingWar.sol\":3075:3249  WinEvent(... */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2429:2454   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":2485:2487   */\n      0x20\n        /* \"#utility.yul\":2470:2488   */\n      dup3\n      add\n        /* \"#utility.yul\":2463:2497   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/BiddingWar.sol\":3188:3203  block.timestamp */\n      timestamp\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":2533:2564   */\n      and\n        /* \"#utility.yul\":2513:2531   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":2506:2565   */\n      mstore\n        /* \"contracts/BiddingWar.sol\":3075:3249  WinEvent(... */\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BiddingWar.sol\":3222:3235  highestBidder */\n      swap1\n      swap4\n      and\n      swap3\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"contracts/BiddingWar.sol\":3101:3111  bidCounter */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/BiddingWar.sol\":3075:3249  WinEvent(... */\n      0xe900abebb29da21b2ce54f9bf92ace3e1f761a0a9a918473570dd7166057bc1f\n      swap2\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":2417:2419   */\n      0x60\n        /* \"contracts/BiddingWar.sol\":3075:3249  WinEvent(... */\n      add\n      swap1\n      log3\n        /* \"contracts/BiddingWar.sol\":2840:3260  {... */\n      pop\n        /* \"contracts/BiddingWar.sol\":2807:3260  if (highestBidder != address(0)) {... */\n    tag_92:\n        /* \"contracts/BiddingWar.sol\":3298:3309  startGame() */\n      tag_84\n        /* \"contracts/BiddingWar.sol\":3298:3307  startGame */\n      tag_98\n        /* \"contracts/BiddingWar.sol\":3298:3309  startGame() */\n      jump\t// in\n        /* \"contracts/BiddingWar.sol\":1502:2530  function placeBid() external payable nonReentrant {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      tag_101\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2375  _nonReentrantBefore */\n      tag_102\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      jump\t// in\n    tag_101:\n        /* \"contracts/BiddingWar.sol\":1582:1583  0 */\n      0x00\n        /* \"contracts/BiddingWar.sol\":1570:1579  msg.value */\n      callvalue\n        /* \"contracts/BiddingWar.sol\":1570:1583  msg.value > 0 */\n      gt\n        /* \"contracts/BiddingWar.sol\":1562:1627  require(msg.value > 0, \"Bid amount should be greater than zero!\") */\n      tag_104\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2778:2780   */\n      0x20\n        /* \"contracts/BiddingWar.sol\":1562:1627  require(msg.value > 0, \"Bid amount should be greater than zero!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2760:2781   */\n      mstore\n        /* \"#utility.yul\":2817:2819   */\n      0x27\n        /* \"#utility.yul\":2797:2815   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2790:2820   */\n      mstore\n        /* \"#utility.yul\":2856:2890   */\n      0x42696420616d6f756e742073686f756c64206265206772656174657220746861\n        /* \"#utility.yul\":2836:2854   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2829:2891   */\n      mstore\n      shl(0xc8, 0x6e207a65726f21)\n        /* \"#utility.yul\":2907:2925   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2900:2937   */\n      mstore\n        /* \"#utility.yul\":2954:2973   */\n      0x84\n      add\n        /* \"contracts/BiddingWar.sol\":1562:1627  require(msg.value > 0, \"Bid amount should be greater than zero!\") */\n      tag_90\n        /* \"#utility.yul\":2576:2979   */\n      jump\n        /* \"contracts/BiddingWar.sol\":1562:1627  require(msg.value > 0, \"Bid amount should be greater than zero!\") */\n    tag_104:\n        /* \"contracts/BiddingWar.sol\":1670:1680  highestBid */\n      sload(0x04)\n        /* \"contracts/BiddingWar.sol\":1658:1667  msg.value */\n      callvalue\n        /* \"contracts/BiddingWar.sol\":1658:1680  msg.value > highestBid */\n      gt\n        /* \"contracts/BiddingWar.sol\":1637:1756  require(... */\n      tag_107\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3186:3188   */\n      0x20\n        /* \"contracts/BiddingWar.sol\":1637:1756  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3168:3189   */\n      mstore\n        /* \"#utility.yul\":3225:3227   */\n      0x32\n        /* \"#utility.yul\":3205:3223   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3198:3228   */\n      mstore\n        /* \"#utility.yul\":3264:3298   */\n      0x42696420616d6f756e742073686f756c64206265206772656174657220746861\n        /* \"#utility.yul\":3244:3262   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3237:3299   */\n      mstore\n      shl(0x70, 0x6e206c6173742062696420616d6f756e7421)\n        /* \"#utility.yul\":3315:3333   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3308:3356   */\n      mstore\n        /* \"#utility.yul\":3373:3392   */\n      0x84\n      add\n        /* \"contracts/BiddingWar.sol\":1637:1756  require(... */\n      tag_90\n        /* \"#utility.yul\":2984:3398   */\n      jump\n        /* \"contracts/BiddingWar.sol\":1637:1756  require(... */\n    tag_107:\n        /* \"contracts/BiddingWar.sol\":1774:1785  gameEndTime */\n      sload(0x03)\n        /* \"contracts/BiddingWar.sol\":1788:1803  block.timestamp */\n      timestamp\n      shl(0x80, 0x01)\n        /* \"contracts/BiddingWar.sol\":1774:1785  gameEndTime */\n      swap1\n      swap2\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n        /* \"contracts/BiddingWar.sol\":1774:1803  gameEndTime > block.timestamp */\n      gt\n        /* \"contracts/BiddingWar.sol\":1766:1836  require(gameEndTime > block.timestamp, \"Game over wait for new game!\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3605:3607   */\n      0x20\n        /* \"contracts/BiddingWar.sol\":1766:1836  require(gameEndTime > block.timestamp, \"Game over wait for new game!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3587:3608   */\n      mstore\n        /* \"#utility.yul\":3644:3646   */\n      0x1c\n        /* \"#utility.yul\":3624:3642   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3617:3647   */\n      mstore\n        /* \"#utility.yul\":3683:3713   */\n      0x47616d65206f766572207761697420666f72206e65772067616d652100000000\n        /* \"#utility.yul\":3663:3681   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3656:3714   */\n      mstore\n        /* \"#utility.yul\":3731:3749   */\n      0x64\n      add\n        /* \"contracts/BiddingWar.sol\":1766:1836  require(gameEndTime > block.timestamp, \"Game over wait for new game!\") */\n      tag_90\n        /* \"#utility.yul\":3403:3755   */\n      jump\n        /* \"contracts/BiddingWar.sol\":1766:1836  require(gameEndTime > block.timestamp, \"Game over wait for new game!\") */\n    tag_110:\n        /* \"contracts/BiddingWar.sol\":1900:1910  bidCounter */\n      0x03\n        /* \"contracts/BiddingWar.sol\":1900:1912  bidCounter++ */\n      dup1\n      sload\n      sub(shl(0x80, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/BiddingWar.sol\":1900:1910  bidCounter */\n      0x00\n        /* \"contracts/BiddingWar.sol\":1900:1912  bidCounter++ */\n      tag_113\n      dup4\n      tag_114\n      jump\t// in\n    tag_113:\n      dup3\n      sload\n      0x0100\n      swap3\n      swap1\n      swap3\n      exp\n      sub(shl(0x80, 0x01), 0x01)\n      dup2\n      dup2\n      mul\n      not\n      swap1\n      swap4\n      and\n      swap2\n      dup4\n      and\n      mul\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/BiddingWar.sol\":1927:1937  bidCounter */\n      0x03\n      dup1\n      sload\n      dup3\n      and\n      0x00\n        /* \"contracts/BiddingWar.sol\":1922:1938  bids[bidCounter] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/BiddingWar.sol\":1922:1926  bids */\n      0x06\n        /* \"contracts/BiddingWar.sol\":1922:1938  bids[bidCounter] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/BiddingWar.sol\":1948:1957  msg.value */\n      callvalue\n        /* \"contracts/BiddingWar.sol\":1922:1957  bids[bidCounter].amount = msg.value */\n      swap1\n      dup2\n      swap1\n      sstore\n        /* \"contracts/BiddingWar.sol\":1972:1982  bidCounter */\n      dup5\n      sload\n      dup7\n      and\n        /* \"contracts/BiddingWar.sol\":1967:1983  bids[bidCounter] */\n      dup5\n      mstore\n      dup2\n      dup5\n      keccak256\n      0x01\n        /* \"contracts/BiddingWar.sol\":1967:1988  bids[bidCounter].when */\n      swap1\n      dup2\n      add\n        /* \"contracts/BiddingWar.sol\":1967:2014  bids[bidCounter].when = uint64(block.timestamp) */\n      dup1\n      sload\n      not(shl(0xa0, 0xffffffffffffffff))\n      and\n      shl(0xa0, 0x01)\n        /* \"contracts/BiddingWar.sol\":1998:2013  block.timestamp */\n      timestamp\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/BiddingWar.sol\":1967:2014  bids[bidCounter].when = uint64(block.timestamp) */\n      and\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/BiddingWar.sol\":2029:2039  bidCounter */\n      dup7\n      sload\n      dup9\n      and\n        /* \"contracts/BiddingWar.sol\":2024:2040  bids[bidCounter] */\n      dup7\n      mstore\n      swap5\n      dup4\n      swap1\n      keccak256\n        /* \"contracts/BiddingWar.sol\":2024:2045  bids[bidCounter].user */\n      add\n        /* \"contracts/BiddingWar.sol\":2024:2058  bids[bidCounter].user = msg.sender */\n      dup1\n      sload\n        /* \"contracts/BiddingWar.sol\":2048:2058  msg.sender */\n      caller\n      not(sub(shl(0xa0, 0x01), 0x01))\n        /* \"contracts/BiddingWar.sol\":2024:2058  bids[bidCounter].user = msg.sender */\n      swap1\n      swap2\n      and\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/BiddingWar.sol\":2096:2106  bidCounter */\n      swap5\n      sload\n        /* \"contracts/BiddingWar.sol\":2074:2200  BidEvent(... */\n      dup3\n      mload\n        /* \"#utility.yul\":4295:4320   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":4336:4354   */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":4329:4388   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"contracts/BiddingWar.sol\":2048:2058  msg.sender */\n      swap3\n      swap5\n      pop\n        /* \"contracts/BiddingWar.sol\":2096:2106  bidCounter */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/BiddingWar.sol\":2074:2200  BidEvent(... */\n      0x042ced85334596236356fb01034b15f35a1abbc3c7c51ba1b8d3ad152bfeda79\n      swap2\n        /* \"#utility.yul\":4268:4286   */\n      add\n        /* \"contracts/BiddingWar.sol\":2074:2200  BidEvent(... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BiddingWar.sol\":2263:2274  gameEndTime */\n      sload(0x03)\n        /* \"contracts/BiddingWar.sol\":2263:2280  gameEndTime + 600 */\n      tag_117\n      swap1\n      shl(0x80, 0x01)\n        /* \"contracts/BiddingWar.sol\":2263:2274  gameEndTime */\n      swap1\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n        /* \"contracts/BiddingWar.sol\":2277:2280  600 */\n      0x0258\n        /* \"contracts/BiddingWar.sol\":2263:2280  gameEndTime + 600 */\n      tag_118\n      jump\t// in\n    tag_117:\n        /* \"contracts/BiddingWar.sol\":2249:2260  gameEndTime */\n      0x03\n        /* \"contracts/BiddingWar.sol\":2249:2280  gameEndTime = gameEndTime + 600 */\n      dup1\n      sload\n      sub(shl(0x40, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      shl(0x80, 0x01)\n      mul\n      not(shl(0x80, 0xffffffffffffffff))\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/BiddingWar.sol\":2329:2338  msg.value */\n      callvalue\n        /* \"contracts/BiddingWar.sol\":2316:2326  highestBid */\n      0x04\n        /* \"contracts/BiddingWar.sol\":2316:2338  highestBid = msg.value */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/BiddingWar.sol\":2348:2361  highestBidder */\n      0x05\n        /* \"contracts/BiddingWar.sol\":2348:2374  highestBidder = msg.sender */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n        /* \"contracts/BiddingWar.sol\":2364:2374  msg.sender */\n      caller\n        /* \"contracts/BiddingWar.sol\":2348:2374  highestBidder = msg.sender */\n      or\n      swap1\n      sstore\n        /* \"contracts/BiddingWar.sol\":2454:2464  commission */\n      sload(0x02)\n      0x00\n      swap2\n        /* \"contracts/BiddingWar.sol\":2468:2471  100 */\n      0x64\n      swap2\n        /* \"contracts/BiddingWar.sol\":2442:2464  msg.value * commission */\n      tag_119\n      swap2\n      tag_120\n      jump\t// in\n    tag_119:\n        /* \"contracts/BiddingWar.sol\":2441:2471  (msg.value * commission) / 100 */\n      tag_121\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n        /* \"contracts/BiddingWar.sol\":2418:2471  uint commissionValue = (msg.value * commission) / 100 */\n      swap1\n      pop\n        /* \"contracts/BiddingWar.sol\":2489:2496  owner() */\n      tag_123\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"contracts/BiddingWar.sol\":2489:2496  owner() */\n    tag_123:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BiddingWar.sol\":2481:2506  payable(owner()).transfer */\n      and\n        /* \"contracts/BiddingWar.sol\":2481:2523  payable(owner()).transfer(commissionValue) */\n      0x08fc\n        /* \"contracts/BiddingWar.sol\":2507:2522  commissionValue */\n      dup3\n        /* \"contracts/BiddingWar.sol\":2481:2523  payable(owner()).transfer(commissionValue) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_125\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_125:\n      pop\n        /* \"contracts/BiddingWar.sol\":1552:2530  {... */\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n      tag_84\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1713:1714  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2924:2945  _status = NOT_ENTERED */\n      dup1\n      sstore\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2744:2952  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_129:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_131\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1338:1389   */\n      mstore\n        /* \"#utility.yul\":1311:1329   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_90\n        /* \"#utility.yul\":1192:1395   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_79\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_84\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1338:1389   */\n      mstore\n        /* \"#utility.yul\":1311:1329   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_90\n        /* \"#utility.yul\":1192:1395   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/BiddingWar.sol\":1083:1459  function startGame() private {... */\n    tag_98:\n        /* \"contracts/BiddingWar.sol\":1130:1141  gameEndTime */\n      sload(0x03)\n        /* \"contracts/BiddingWar.sol\":1144:1159  block.timestamp */\n      timestamp\n      shl(0x80, 0x01)\n        /* \"contracts/BiddingWar.sol\":1130:1141  gameEndTime */\n      swap1\n      swap2\n      div\n      sub(shl(0x40, 0x01), 0x01)\n      and\n        /* \"contracts/BiddingWar.sol\":1130:1159  gameEndTime < block.timestamp */\n      lt\n        /* \"contracts/BiddingWar.sol\":1122:1191  require(gameEndTime < block.timestamp, \"Last game is still running!\") */\n      tag_143\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2075:2077   */\n      0x20\n        /* \"contracts/BiddingWar.sol\":1122:1191  require(gameEndTime < block.timestamp, \"Last game is still running!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2057:2078   */\n      mstore\n        /* \"#utility.yul\":2114:2116   */\n      0x1b\n        /* \"#utility.yul\":2094:2112   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2087:2117   */\n      mstore\n        /* \"#utility.yul\":2153:2182   */\n      0x4c6173742067616d65206973207374696c6c2072756e6e696e67210000000000\n        /* \"#utility.yul\":2133:2151   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2126:2183   */\n      mstore\n        /* \"#utility.yul\":2200:2218   */\n      0x64\n      add\n        /* \"contracts/BiddingWar.sol\":1122:1191  require(gameEndTime < block.timestamp, \"Last game is still running!\") */\n      tag_90\n        /* \"#utility.yul\":1873:2224   */\n      jump\n        /* \"contracts/BiddingWar.sol\":1122:1191  require(gameEndTime < block.timestamp, \"Last game is still running!\") */\n    tag_143:\n        /* \"contracts/BiddingWar.sol\":1210:1220  gameStatus */\n      sload(0x05)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BiddingWar.sol\":1209:1220  !gameStatus */\n      iszero\n        /* \"contracts/BiddingWar.sol\":1201:1263  require(!gameStatus, \"Last game is still waiting for result!\") */\n      tag_145\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5181:5183   */\n      0x20\n        /* \"contracts/BiddingWar.sol\":1201:1263  require(!gameStatus, \"Last game is still waiting for result!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5163:5184   */\n      mstore\n        /* \"#utility.yul\":5220:5222   */\n      0x26\n        /* \"#utility.yul\":5200:5218   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5193:5223   */\n      mstore\n        /* \"#utility.yul\":5259:5293   */\n      0x4c6173742067616d65206973207374696c6c2077616974696e6720666f722072\n        /* \"#utility.yul\":5239:5257   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5232:5294   */\n      mstore\n      shl(0xd0, 0x6573756c7421)\n        /* \"#utility.yul\":5310:5328   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5303:5339   */\n      mstore\n        /* \"#utility.yul\":5356:5375   */\n      0x84\n      add\n        /* \"contracts/BiddingWar.sol\":1201:1263  require(!gameStatus, \"Last game is still waiting for result!\") */\n      tag_90\n        /* \"#utility.yul\":4979:5381   */\n      jump\n        /* \"contracts/BiddingWar.sol\":1201:1263  require(!gameStatus, \"Last game is still waiting for result!\") */\n    tag_145:\n        /* \"contracts/BiddingWar.sol\":1295:1317  block.timestamp + 3600 */\n      tag_148\n        /* \"contracts/BiddingWar.sol\":1295:1310  block.timestamp */\n      timestamp\n        /* \"contracts/BiddingWar.sol\":1313:1317  3600 */\n      0x0e10\n        /* \"contracts/BiddingWar.sol\":1295:1317  block.timestamp + 3600 */\n      tag_149\n      jump\t// in\n    tag_148:\n        /* \"contracts/BiddingWar.sol\":1274:1285  gameEndTime */\n      0x03\n        /* \"contracts/BiddingWar.sol\":1274:1318  gameEndTime = uint64(block.timestamp + 3600) */\n      dup1\n      sload\n      sub(shl(0x40, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      shl(0x80, 0x01)\n      mul\n      not(shl(0x80, 0xffffffffffffffff))\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/BiddingWar.sol\":1342:1352  gameStatus */\n      0x05\n        /* \"contracts/BiddingWar.sol\":1342:1359  gameStatus = true */\n      dup1\n      sload\n      not(sub(shl(0xa8, 0x01), 0x01))\n        /* \"contracts/BiddingWar.sol\":1402:1428  highestBidder = address(0) */\n      and\n      shl(0xa0, 0x01)\n      or\n      swap1\n      sstore\n      0x00\n        /* \"contracts/BiddingWar.sol\":1438:1448  highestBid */\n      0x04\n        /* \"contracts/BiddingWar.sol\":1438:1452  highestBid = 0 */\n      sstore\n        /* \"contracts/BiddingWar.sol\":1083:1459  function startGame() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2431:2738  function _nonReentrantBefore() private {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1755:1756  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2558:2565  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2558:2576  _status == ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2554:2640  if (_status == ENTERED) {... */\n      tag_151\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2599:2629  ReentrancyGuardReentrantCall() */\n      mload(0x40)\n      shl(0xe0, 0x3ee5aeb5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2554:2640  if (_status == ENTERED) {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1755:1756  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2714:2721  _status */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2714:2731  _status = ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2431:2738  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"#utility.yul\":237:417   */\n    tag_31:\n        /* \"#utility.yul\":296:302   */\n      0x00\n        /* \"#utility.yul\":349:351   */\n      0x20\n        /* \"#utility.yul\":337:346   */\n      dup3\n        /* \"#utility.yul\":328:335   */\n      dup5\n        /* \"#utility.yul\":324:347   */\n      sub\n        /* \"#utility.yul\":320:352   */\n      slt\n        /* \"#utility.yul\":317:369   */\n      iszero\n      tag_158\n      jumpi\n        /* \"#utility.yul\":365:366   */\n      0x00\n        /* \"#utility.yul\":362:363   */\n      dup1\n        /* \"#utility.yul\":355:367   */\n      revert\n        /* \"#utility.yul\":317:369   */\n    tag_158:\n      pop\n        /* \"#utility.yul\":388:411   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":237:417   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1582:1868   */\n    tag_74:\n        /* \"#utility.yul\":1641:1647   */\n      0x00\n        /* \"#utility.yul\":1694:1696   */\n      0x20\n        /* \"#utility.yul\":1682:1691   */\n      dup3\n        /* \"#utility.yul\":1673:1680   */\n      dup5\n        /* \"#utility.yul\":1669:1692   */\n      sub\n        /* \"#utility.yul\":1665:1697   */\n      slt\n        /* \"#utility.yul\":1662:1714   */\n      iszero\n      tag_165\n      jumpi\n        /* \"#utility.yul\":1710:1711   */\n      0x00\n        /* \"#utility.yul\":1707:1708   */\n      dup1\n        /* \"#utility.yul\":1700:1712   */\n      revert\n        /* \"#utility.yul\":1662:1714   */\n    tag_165:\n        /* \"#utility.yul\":1736:1759   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1788:1819   */\n      dup2\n      and\n        /* \"#utility.yul\":1778:1820   */\n      dup2\n      eq\n        /* \"#utility.yul\":1768:1838   */\n      tag_166\n      jumpi\n        /* \"#utility.yul\":1834:1835   */\n      0x00\n        /* \"#utility.yul\":1831:1832   */\n      dup1\n        /* \"#utility.yul\":1824:1836   */\n      revert\n        /* \"#utility.yul\":1768:1838   */\n    tag_166:\n        /* \"#utility.yul\":1857:1862   */\n      swap4\n        /* \"#utility.yul\":1582:1868   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3760:3887   */\n    tag_154:\n        /* \"#utility.yul\":3821:3831   */\n      0x4e487b71\n        /* \"#utility.yul\":3816:3819   */\n      0xe0\n        /* \"#utility.yul\":3812:3832   */\n      shl\n        /* \"#utility.yul\":3809:3810   */\n      0x00\n        /* \"#utility.yul\":3802:3833   */\n      mstore\n        /* \"#utility.yul\":3852:3856   */\n      0x11\n        /* \"#utility.yul\":3849:3850   */\n      0x04\n        /* \"#utility.yul\":3842:3857   */\n      mstore\n        /* \"#utility.yul\":3876:3880   */\n      0x24\n        /* \"#utility.yul\":3873:3874   */\n      0x00\n        /* \"#utility.yul\":3866:3881   */\n      revert\n        /* \"#utility.yul\":3892:4118   */\n    tag_114:\n        /* \"#utility.yul\":3931:3934   */\n      0x00\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":4028:4030   */\n      dup1\n        /* \"#utility.yul\":4021:4026   */\n      dup4\n        /* \"#utility.yul\":4017:4031   */\n      and\n        /* \"#utility.yul\":4055:4057   */\n      dup2\n        /* \"#utility.yul\":4046:4053   */\n      dup2\n        /* \"#utility.yul\":4043:4058   */\n      sub\n        /* \"#utility.yul\":4040:4081   */\n      tag_175\n      jumpi\n        /* \"#utility.yul\":4061:4079   */\n      tag_175\n      tag_154\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":4110:4111   */\n      0x01\n        /* \"#utility.yul\":4097:4112   */\n      add\n      swap4\n        /* \"#utility.yul\":3892:4118   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4399:4579   */\n    tag_118:\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":4504:4514   */\n      dup2\n      dup2\n      and\n        /* \"#utility.yul\":4516:4526   */\n      dup4\n      dup3\n      and\n        /* \"#utility.yul\":4500:4527   */\n      add\n      swap1\n        /* \"#utility.yul\":4539:4550   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4536:4573   */\n      iszero\n      tag_179\n      jumpi\n        /* \"#utility.yul\":4553:4571   */\n      tag_179\n      tag_154\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":4536:4573   */\n      pop\n        /* \"#utility.yul\":4399:4579   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4584:4752   */\n    tag_120:\n        /* \"#utility.yul\":4657:4666   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":4688:4697   */\n      dup2\n      iszero\n        /* \"#utility.yul\":4705:4720   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":4699:4721   */\n      dup5\n      eq\n        /* \"#utility.yul\":4685:4722   */\n      or\n        /* \"#utility.yul\":4675:4746   */\n      tag_182\n      jumpi\n        /* \"#utility.yul\":4726:4744   */\n      tag_182\n      tag_154\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":4584:4752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4757:4974   */\n    tag_122:\n        /* \"#utility.yul\":4797:4798   */\n      0x00\n        /* \"#utility.yul\":4823:4824   */\n      dup3\n        /* \"#utility.yul\":4813:4945   */\n      tag_184\n      jumpi\n        /* \"#utility.yul\":4867:4877   */\n      0x4e487b71\n        /* \"#utility.yul\":4862:4865   */\n      0xe0\n        /* \"#utility.yul\":4858:4878   */\n      shl\n        /* \"#utility.yul\":4855:4856   */\n      0x00\n        /* \"#utility.yul\":4848:4879   */\n      mstore\n        /* \"#utility.yul\":4902:4906   */\n      0x12\n        /* \"#utility.yul\":4899:4900   */\n      0x04\n        /* \"#utility.yul\":4892:4907   */\n      mstore\n        /* \"#utility.yul\":4930:4934   */\n      0x24\n        /* \"#utility.yul\":4927:4928   */\n      0x00\n        /* \"#utility.yul\":4920:4935   */\n      revert\n        /* \"#utility.yul\":4813:4945   */\n    tag_184:\n      pop\n        /* \"#utility.yul\":4959:4968   */\n      div\n      swap1\n        /* \"#utility.yul\":4757:4974   */\n      jump\t// out\n        /* \"#utility.yul\":5386:5511   */\n    tag_149:\n        /* \"#utility.yul\":5451:5460   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5472:5482   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5469:5505   */\n      iszero\n      tag_182\n      jumpi\n        /* \"#utility.yul\":5485:5503   */\n      tag_182\n      tag_154\n      jump\t// in\n\n    auxdata: 0xa26469706673582212201bdc321e2fc4fdc2a2b95ce99dd370a0b25eab9d37baa73ebca1ceda6ca9127664736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_199": {
									"entryPoint": null,
									"id": 199,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_314": {
									"entryPoint": null,
									"id": 314,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 115,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@startGame_358": {
									"entryPoint": 194,
									"id": 358,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_13cbd6cd63292023c9c4f6c179a19b06f21ee11c3198ccc79c54de96059b6cda__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6be4648f1cbdd4ad144a891ed8126b3fbd155bb5160130ead8b7dd53741d04fb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 480,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1209:4",
										"nodeType": "YulBlock",
										"src": "0:1209:4",
										"statements": [
											{
												"nativeSrc": "6:3:4",
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:102:4",
													"nodeType": "YulBlock",
													"src": "115:102:4",
													"statements": [
														{
															"nativeSrc": "125:26:4",
															"nodeType": "YulAssignment",
															"src": "125:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:4",
																		"nodeType": "YulLiteral",
																		"src": "148:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:4"
																},
																"nativeSrc": "133:18:4",
																"nodeType": "YulFunctionCall",
																"src": "133:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "182:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "198:3:4",
																								"nodeType": "YulLiteral",
																								"src": "198:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "203:1:4",
																								"nodeType": "YulLiteral",
																								"src": "203:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "194:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:4"
																						},
																						"nativeSrc": "194:11:4",
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "207:1:4",
																						"nodeType": "YulLiteral",
																						"src": "207:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "190:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:4"
																				},
																				"nativeSrc": "190:19:4",
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "178:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:4"
																		},
																		"nativeSrc": "178:32:4",
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:4"
																},
																"nativeSrc": "160:51:4",
																"nodeType": "YulFunctionCall",
																"src": "160:51:4"
															},
															"nativeSrc": "160:51:4",
															"nodeType": "YulExpressionStatement",
															"src": "160:51:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "14:203:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:4",
														"nodeType": "YulTypedName",
														"src": "84:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:4",
														"nodeType": "YulTypedName",
														"src": "95:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:4",
														"nodeType": "YulTypedName",
														"src": "106:4:4",
														"type": ""
													}
												],
												"src": "14:203:4"
											},
											{
												"body": {
													"nativeSrc": "396:177:4",
													"nodeType": "YulBlock",
													"src": "396:177:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "413:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "413:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "424:2:4",
																		"nodeType": "YulLiteral",
																		"src": "424:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "406:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "406:6:4"
																},
																"nativeSrc": "406:21:4",
																"nodeType": "YulFunctionCall",
																"src": "406:21:4"
															},
															"nativeSrc": "406:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "406:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "447:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "447:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "458:2:4",
																				"nodeType": "YulLiteral",
																				"src": "458:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "443:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "443:3:4"
																		},
																		"nativeSrc": "443:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "443:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "463:2:4",
																		"nodeType": "YulLiteral",
																		"src": "463:2:4",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "436:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "436:6:4"
																},
																"nativeSrc": "436:30:4",
																"nodeType": "YulFunctionCall",
																"src": "436:30:4"
															},
															"nativeSrc": "436:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "436:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "486:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "486:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "497:2:4",
																				"nodeType": "YulLiteral",
																				"src": "497:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "482:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "482:3:4"
																		},
																		"nativeSrc": "482:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "482:18:4"
																	},
																	{
																		"hexValue": "4c6173742067616d65206973207374696c6c2072756e6e696e6721",
																		"kind": "string",
																		"nativeSrc": "502:29:4",
																		"nodeType": "YulLiteral",
																		"src": "502:29:4",
																		"type": "",
																		"value": "Last game is still running!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "475:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "475:6:4"
																},
																"nativeSrc": "475:57:4",
																"nodeType": "YulFunctionCall",
																"src": "475:57:4"
															},
															"nativeSrc": "475:57:4",
															"nodeType": "YulExpressionStatement",
															"src": "475:57:4"
														},
														{
															"nativeSrc": "541:26:4",
															"nodeType": "YulAssignment",
															"src": "541:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "553:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "553:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "564:2:4",
																		"nodeType": "YulLiteral",
																		"src": "564:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "549:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "549:3:4"
																},
																"nativeSrc": "549:18:4",
																"nodeType": "YulFunctionCall",
																"src": "549:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "541:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "541:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6be4648f1cbdd4ad144a891ed8126b3fbd155bb5160130ead8b7dd53741d04fb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "222:351:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "373:9:4",
														"nodeType": "YulTypedName",
														"src": "373:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "387:4:4",
														"nodeType": "YulTypedName",
														"src": "387:4:4",
														"type": ""
													}
												],
												"src": "222:351:4"
											},
											{
												"body": {
													"nativeSrc": "752:228:4",
													"nodeType": "YulBlock",
													"src": "752:228:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "769:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "769:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "780:2:4",
																		"nodeType": "YulLiteral",
																		"src": "780:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "762:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "762:6:4"
																},
																"nativeSrc": "762:21:4",
																"nodeType": "YulFunctionCall",
																"src": "762:21:4"
															},
															"nativeSrc": "762:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "762:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "803:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "803:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "814:2:4",
																				"nodeType": "YulLiteral",
																				"src": "814:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "799:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "799:3:4"
																		},
																		"nativeSrc": "799:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "799:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "819:2:4",
																		"nodeType": "YulLiteral",
																		"src": "819:2:4",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "792:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "792:6:4"
																},
																"nativeSrc": "792:30:4",
																"nodeType": "YulFunctionCall",
																"src": "792:30:4"
															},
															"nativeSrc": "792:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "792:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "842:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "842:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "853:2:4",
																				"nodeType": "YulLiteral",
																				"src": "853:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "838:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "838:3:4"
																		},
																		"nativeSrc": "838:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "838:18:4"
																	},
																	{
																		"hexValue": "4c6173742067616d65206973207374696c6c2077616974696e6720666f722072",
																		"kind": "string",
																		"nativeSrc": "858:34:4",
																		"nodeType": "YulLiteral",
																		"src": "858:34:4",
																		"type": "",
																		"value": "Last game is still waiting for r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "831:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "831:6:4"
																},
																"nativeSrc": "831:62:4",
																"nodeType": "YulFunctionCall",
																"src": "831:62:4"
															},
															"nativeSrc": "831:62:4",
															"nodeType": "YulExpressionStatement",
															"src": "831:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "913:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "913:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "924:2:4",
																				"nodeType": "YulLiteral",
																				"src": "924:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "909:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "909:3:4"
																		},
																		"nativeSrc": "909:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "909:18:4"
																	},
																	{
																		"hexValue": "6573756c7421",
																		"kind": "string",
																		"nativeSrc": "929:8:4",
																		"nodeType": "YulLiteral",
																		"src": "929:8:4",
																		"type": "",
																		"value": "esult!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "902:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "902:6:4"
																},
																"nativeSrc": "902:36:4",
																"nodeType": "YulFunctionCall",
																"src": "902:36:4"
															},
															"nativeSrc": "902:36:4",
															"nodeType": "YulExpressionStatement",
															"src": "902:36:4"
														},
														{
															"nativeSrc": "947:27:4",
															"nodeType": "YulAssignment",
															"src": "947:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "959:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "959:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "970:3:4",
																		"nodeType": "YulLiteral",
																		"src": "970:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "955:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "955:3:4"
																},
																"nativeSrc": "955:19:4",
																"nodeType": "YulFunctionCall",
																"src": "955:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "947:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "947:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_13cbd6cd63292023c9c4f6c179a19b06f21ee11c3198ccc79c54de96059b6cda__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "578:402:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "729:9:4",
														"nodeType": "YulTypedName",
														"src": "729:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "743:4:4",
														"nodeType": "YulTypedName",
														"src": "743:4:4",
														"type": ""
													}
												],
												"src": "578:402:4"
											},
											{
												"body": {
													"nativeSrc": "1033:174:4",
													"nodeType": "YulBlock",
													"src": "1033:174:4",
													"statements": [
														{
															"nativeSrc": "1043:16:4",
															"nodeType": "YulAssignment",
															"src": "1043:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1054:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "1054:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "1057:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "1057:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1050:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1050:3:4"
																},
																"nativeSrc": "1050:9:4",
																"nodeType": "YulFunctionCall",
																"src": "1050:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "1043:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1043:3:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1090:111:4",
																"nodeType": "YulBlock",
																"src": "1090:111:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1111:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1111:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1118:3:4",
																							"nodeType": "YulLiteral",
																							"src": "1118:3:4",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1123:10:4",
																							"nodeType": "YulLiteral",
																							"src": "1123:10:4",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1114:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "1114:3:4"
																					},
																					"nativeSrc": "1114:20:4",
																					"nodeType": "YulFunctionCall",
																					"src": "1114:20:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1104:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1104:6:4"
																			},
																			"nativeSrc": "1104:31:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1104:31:4"
																		},
																		"nativeSrc": "1104:31:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1104:31:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1155:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1155:1:4",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1158:4:4",
																					"nodeType": "YulLiteral",
																					"src": "1158:4:4",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1148:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1148:6:4"
																			},
																			"nativeSrc": "1148:15:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1148:15:4"
																		},
																		"nativeSrc": "1148:15:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1148:15:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1183:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1183:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1186:4:4",
																					"nodeType": "YulLiteral",
																					"src": "1186:4:4",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1176:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1176:6:4"
																			},
																			"nativeSrc": "1176:15:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1176:15:4"
																		},
																		"nativeSrc": "1176:15:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1176:15:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1074:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "1074:1:4"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "1077:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1077:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1071:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "1071:2:4"
																},
																"nativeSrc": "1071:10:4",
																"nodeType": "YulFunctionCall",
																"src": "1071:10:4"
															},
															"nativeSrc": "1068:133:4",
															"nodeType": "YulIf",
															"src": "1068:133:4"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "985:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "1016:1:4",
														"nodeType": "YulTypedName",
														"src": "1016:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "1019:1:4",
														"nodeType": "YulTypedName",
														"src": "1019:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "1025:3:4",
														"nodeType": "YulTypedName",
														"src": "1025:3:4",
														"type": ""
													}
												],
												"src": "985:222:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_6be4648f1cbdd4ad144a891ed8126b3fbd155bb5160130ead8b7dd53741d04fb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Last game is still running!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_13cbd6cd63292023c9c4f6c179a19b06f21ee11c3198ccc79c54de96059b6cda__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Last game is still waiting for r\")\n        mstore(add(headStart, 96), \"esult!\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405260056002819055600380546001600160801b0319169055805460ff60a01b19169055348015610031575f80fd5b50338061005857604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61006181610073565b506001805561006e6100c2565b610205565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60035442600160801b9091046001600160401b0316106101245760405162461bcd60e51b815260206004820152601b60248201527f4c6173742067616d65206973207374696c6c2072756e6e696e67210000000000604482015260640161004f565b600554600160a01b900460ff161561018d5760405162461bcd60e51b815260206004820152602660248201527f4c6173742067616d65206973207374696c6c2077616974696e6720666f7220726044820152656573756c742160d01b606482015260840161004f565b61019942610e106101e0565b600380546001600160401b0392909216600160801b02600160801b600160c01b0319909216919091179055600580546001600160a81b031916600160a01b1790555f600455565b808201808211156101ff57634e487b7160e01b5f52601160045260245ffd5b92915050565b610a54806102125f395ff3fe6080604052600436106100aa575f3560e01c80638da5cb5b116100635780638da5cb5b1461020c57806391f901571461023c578063d57bde791461025b578063e14891911461027e578063ecfc7ecc14610293578063f2fde38b1461029b576100b9565b806303f69354146100c15780634423c5f1146100fd57806344d9bc5f14610176578063715018a6146101b4578063722fed7e146101c85780638574c296146101f8576100b9565b366100b9576100b76102ba565b005b6100b76102ba565b3480156100cc575f80fd5b506003546100e0906001600160801b031681565b6040516001600160801b0390911681526020015b60405180910390f35b348015610108575f80fd5b5061014a61011736600461092b565b60066020525f9081526040902080546001909101546001600160a01b03811690600160a01b90046001600160401b031683565b604080519384526001600160a01b0390921660208401526001600160401b0316908201526060016100f4565b348015610181575f80fd5b5060035461019c90600160801b90046001600160401b031681565b6040516001600160401b0390911681526020016100f4565b3480156101bf575f80fd5b506100b76102f4565b3480156101d3575f80fd5b506005546101e890600160a01b900460ff1681565b60405190151581526020016100f4565b348015610203575f80fd5b506100b7610307565b348015610217575f80fd5b505f546001600160a01b03165b6040516001600160a01b0390911681526020016100f4565b348015610247575f80fd5b50600554610224906001600160a01b031681565b348015610266575f80fd5b5061027060045481565b6040519081526020016100f4565b348015610289575f80fd5b5061027060025481565b6100b761043e565b3480156102a6575f80fd5b506100b76102b5366004610942565b61072d565b5f80546040516001600160a01b03909116913480156108fc02929091818181858888f193505050501580156102f1573d5f803e3d5ffd5b50565b6102fc610767565b6103055f610793565b565b61030f610767565b60035442600160801b9091046001600160401b0316106103765760405162461bcd60e51b815260206004820152601b60248201527f4c6173742067616d65206973207374696c6c2072756e6e696e6721000000000060448201526064015b60405180910390fd5b6005805460ff60a01b1981169091556001600160a01b031615610436576005546040513031916001600160a01b03169082156108fc029083905f818181858888f193505050501580156103cb573d5f803e3d5ffd5b506005546003546004546040805191825260208201859052426001600160401b031682820152516001600160a01b03909316926001600160801b03909216917fe900abebb29da21b2ce54f9bf92ace3e1f761a0a9a918473570dd7166057bc1f9181900360600190a3505b6103056107e2565b610446610901565b5f34116104a55760405162461bcd60e51b815260206004820152602760248201527f42696420616d6f756e742073686f756c642062652067726561746572207468616044820152666e207a65726f2160c81b606482015260840161036d565b60045434116105115760405162461bcd60e51b815260206004820152603260248201527f42696420616d6f756e742073686f756c642062652067726561746572207468616044820152716e206c6173742062696420616d6f756e742160701b606482015260840161036d565b60035442600160801b9091046001600160401b0316116105735760405162461bcd60e51b815260206004820152601c60248201527f47616d65206f766572207761697420666f72206e65772067616d652100000000604482015260640161036d565b600380546001600160801b0316905f61058b83610983565b82546101009290920a6001600160801b038181021990931691831602179091556003805482165f90815260066020908152604080832034908190558454861684528184206001908101805467ffffffffffffffff60a01b1916600160a01b426001600160401b03169081029190911790915586548816865294839020018054336001600160a01b031990911681179091559454825191825292810193909352929450909216917f042ced85334596236356fb01034b15f35a1abbc3c7c51ba1b8d3ad152bfeda79910160405180910390a360035461067b90600160801b90046001600160401b03166102586109a8565b600380546001600160401b0392909216600160801b0267ffffffffffffffff60801b19909216919091179055346004819055600580546001600160a01b031916331790556002545f916064916106d0916109cf565b6106da91906109ec565b90506106ed5f546001600160a01b031690565b6001600160a01b03166108fc8290811502906040515f60405180830381858888f19350505050158015610722573d5f803e3d5ffd5b505061030560018055565b610735610767565b6001600160a01b03811661075e57604051631e4fbdf760e01b81525f600482015260240161036d565b6102f181610793565b5f546001600160a01b031633146103055760405163118cdaa760e01b815233600482015260240161036d565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60035442600160801b9091046001600160401b0316106108445760405162461bcd60e51b815260206004820152601b60248201527f4c6173742067616d65206973207374696c6c2072756e6e696e67210000000000604482015260640161036d565b600554600160a01b900460ff16156108ad5760405162461bcd60e51b815260206004820152602660248201527f4c6173742067616d65206973207374696c6c2077616974696e6720666f7220726044820152656573756c742160d01b606482015260840161036d565b6108b942610e10610a0b565b600380546001600160401b0392909216600160801b0267ffffffffffffffff60801b19909216919091179055600580546001600160a81b031916600160a01b1790555f600455565b60026001540361092457604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b5f6020828403121561093b575f80fd5b5035919050565b5f60208284031215610952575f80fd5b81356001600160a01b0381168114610968575f80fd5b9392505050565b634e487b7160e01b5f52601160045260245ffd5b5f6001600160801b0380831681810361099e5761099e61096f565b6001019392505050565b6001600160401b038181168382160190808211156109c8576109c861096f565b5092915050565b80820281158282048414176109e6576109e661096f565b92915050565b5f82610a0657634e487b7160e01b5f52601260045260245ffd5b500490565b808201808211156109e6576109e661096f56fea26469706673582212201bdc321e2fc4fdc2a2b95ce99dd370a0b25eab9d37baa73ebca1ceda6ca9127664736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x5 PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND SWAP1 SSTORE DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x31 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER DUP1 PUSH2 0x58 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x61 DUP2 PUSH2 0x73 JUMP JUMPDEST POP PUSH1 0x1 DUP1 SSTORE PUSH2 0x6E PUSH2 0xC2 JUMP JUMPDEST PUSH2 0x205 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD TIMESTAMP PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND LT PUSH2 0x124 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C6173742067616D65206973207374696C6C2072756E6E696E67210000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x18D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C6173742067616D65206973207374696C6C2077616974696E6720666F722072 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x6573756C7421 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F JUMP JUMPDEST PUSH2 0x199 TIMESTAMP PUSH2 0xE10 PUSH2 0x1E0 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x80 SHL MUL PUSH1 0x1 PUSH1 0x80 SHL PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH0 PUSH1 0x4 SSTORE JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1FF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA54 DUP1 PUSH2 0x212 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xAA JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x91F90157 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xD57BDE79 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0xE1489191 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0xECFC7ECC EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x29B JUMPI PUSH2 0xB9 JUMP JUMPDEST DUP1 PUSH4 0x3F69354 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x4423C5F1 EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x44D9BC5F EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x722FED7E EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x8574C296 EQ PUSH2 0x1F8 JUMPI PUSH2 0xB9 JUMP JUMPDEST CALLDATASIZE PUSH2 0xB9 JUMPI PUSH2 0xB7 PUSH2 0x2BA JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB7 PUSH2 0x2BA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0xE0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x108 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14A PUSH2 0x117 CALLDATASIZE PUSH1 0x4 PUSH2 0x92B JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0xF4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x181 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x19C SWAP1 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB7 PUSH2 0x2F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x1E8 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x203 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB7 PUSH2 0x307 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x217 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x247 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x224 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x266 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x270 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x289 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x270 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xB7 PUSH2 0x43E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB7 PUSH2 0x2B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x942 JUMP JUMPDEST PUSH2 0x72D JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP3 SWAP1 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2F1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2FC PUSH2 0x767 JUMP JUMPDEST PUSH2 0x305 PUSH0 PUSH2 0x793 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x30F PUSH2 0x767 JUMP JUMPDEST PUSH1 0x3 SLOAD TIMESTAMP PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND LT PUSH2 0x376 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C6173742067616D65206973207374696C6C2072756E6E696E67210000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x436 JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD ADDRESS BALANCE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3CB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP6 SWAP1 MSTORE TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP3 DUP3 ADD MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH32 0xE900ABEBB29DA21B2CE54F9BF92ACE3E1F761A0A9A918473570DD7166057BC1F SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG3 POP JUMPDEST PUSH2 0x305 PUSH2 0x7E2 JUMP JUMPDEST PUSH2 0x446 PUSH2 0x901 JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x4A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42696420616D6F756E742073686F756C64206265206772656174657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x6E207A65726F21 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x36D JUMP JUMPDEST PUSH1 0x4 SLOAD CALLVALUE GT PUSH2 0x511 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42696420616D6F756E742073686F756C64206265206772656174657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x6E206C6173742062696420616D6F756E7421 PUSH1 0x70 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x36D JUMP JUMPDEST PUSH1 0x3 SLOAD TIMESTAMP PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT PUSH2 0x573 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x47616D65206F766572207761697420666F72206E65772067616D652100000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x36D JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 PUSH0 PUSH2 0x58B DUP4 PUSH2 0x983 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x100 SWAP3 SWAP1 SWAP3 EXP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 DUP2 MUL NOT SWAP1 SWAP4 AND SWAP2 DUP4 AND MUL OR SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP1 SLOAD DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLVALUE SWAP1 DUP2 SWAP1 SSTORE DUP5 SLOAD DUP7 AND DUP5 MSTORE DUP2 DUP5 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE DUP7 SLOAD DUP9 AND DUP7 MSTORE SWAP5 DUP4 SWAP1 KECCAK256 ADD DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE SWAP5 SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE SWAP3 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP3 SWAP5 POP SWAP1 SWAP3 AND SWAP2 PUSH32 0x42CED85334596236356FB01034B15F35A1ABBC3C7C51BA1B8D3AD152BFEDA79 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x3 SLOAD PUSH2 0x67B SWAP1 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x258 PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x80 SHL MUL PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE CALLVALUE PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH0 SWAP2 PUSH1 0x64 SWAP2 PUSH2 0x6D0 SWAP2 PUSH2 0x9CF JUMP JUMPDEST PUSH2 0x6DA SWAP2 SWAP1 PUSH2 0x9EC JUMP JUMPDEST SWAP1 POP PUSH2 0x6ED PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x722 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH2 0x305 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH2 0x735 PUSH2 0x767 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x75E JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x36D JUMP JUMPDEST PUSH2 0x2F1 DUP2 PUSH2 0x793 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x36D JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD TIMESTAMP PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND LT PUSH2 0x844 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C6173742067616D65206973207374696C6C2072756E6E696E67210000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x36D JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x8AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C6173742067616D65206973207374696C6C2077616974696E6720666F722072 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x6573756C7421 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x36D JUMP JUMPDEST PUSH2 0x8B9 TIMESTAMP PUSH2 0xE10 PUSH2 0xA0B JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x80 SHL MUL PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH0 PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x924 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x93B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x952 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x968 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP4 AND DUP2 DUP2 SUB PUSH2 0x99E JUMPI PUSH2 0x99E PUSH2 0x96F JUMP JUMPDEST PUSH1 0x1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x9C8 JUMPI PUSH2 0x9C8 PUSH2 0x96F JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x9E6 JUMPI PUSH2 0x9E6 PUSH2 0x96F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xA06 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x9E6 JUMPI PUSH2 0x9E6 PUSH2 0x96F JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL 0xDC ORIGIN 0x1E 0x2F 0xC4 REVERT 0xC2 LOG2 0xB9 TLOAD 0xE9 SWAP14 0xD3 PUSH17 0xA0B25EAB9D37BAA73EBCA1CEDA6CA91276 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "313:3314:3:-:0;;;392:1;367:26;;;;399:29;;;-1:-1:-1;;;;;;399:29:3;;;527:30;;-1:-1:-1;;;;527:30:3;;;977:62;;;;;;;;;-1:-1:-1;999:10:3;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;160:51:4;133:18;;1322:31:0;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1713:1:2;1917:21;;1021:11:3::1;:9;:11::i;:::-;313:3314:::0;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;1083:376:3:-;1130:11;;1144:15;-1:-1:-1;;;1130:11:3;;;-1:-1:-1;;;;;1130:11:3;:29;1122:69;;;;-1:-1:-1;;;1122:69:3;;424:2:4;1122:69:3;;;406:21:4;463:2;443:18;;;436:30;502:29;482:18;;;475:57;549:18;;1122:69:3;222:351:4;1122:69:3;1210:10;;-1:-1:-1;;;1210:10:3;;;;1209:11;1201:62;;;;-1:-1:-1;;;1201:62:3;;780:2:4;1201:62:3;;;762:21:4;819:2;799:18;;;792:30;858:34;838:18;;;831:62;-1:-1:-1;;;909:18:4;;;902:36;955:19;;1201:62:3;578:402:4;1201:62:3;1295:22;:15;1313:4;1295:22;:::i;:::-;1274:11;:44;;-1:-1:-1;;;;;1274:44:3;;;;-1:-1:-1;;;1274:44:3;-1:-1:-1;;;;;;;;1274:44:3;;;;;;;;;1342:10;:17;;-1:-1:-1;;;;;;1402:26:3;-1:-1:-1;;;1402:26:3;;;-1:-1:-1;1438:10:3;:14;1083:376::o;985:222:4:-;1050:9;;;1071:10;;;1068:133;;;1123:10;1118:3;1114:20;1111:1;1104:31;1158:4;1155:1;1148:15;1186:4;1183:1;1176:15;1068:133;985:222;;;;:::o;:::-;313:3314:3;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_544": {
									"entryPoint": null,
									"id": 544,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_551": {
									"entryPoint": null,
									"id": 551,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 1895,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_159": {
									"entryPoint": null,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_234": {
									"entryPoint": null,
									"id": 234,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_226": {
									"entryPoint": 2305,
									"id": 226,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 1939,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@bidCounter_260": {
									"entryPoint": null,
									"id": 260,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@bids_281": {
									"entryPoint": null,
									"id": 281,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@commission_257": {
									"entryPoint": null,
									"id": 257,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@declareResult_522": {
									"entryPoint": 775,
									"id": 522,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@fundsTransferToOwner_537": {
									"entryPoint": 698,
									"id": 537,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@gameEndTime_262": {
									"entryPoint": null,
									"id": 262,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@gameStatus_269": {
									"entryPoint": null,
									"id": 269,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@highestBid_264": {
									"entryPoint": null,
									"id": 264,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@highestBidder_266": {
									"entryPoint": null,
									"id": 266,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@placeBid_467": {
									"entryPoint": 1086,
									"id": 467,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 756,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startGame_358": {
									"entryPoint": 2018,
									"id": 358,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1837,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2370,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_13cbd6cd63292023c9c4f6c179a19b06f21ee11c3198ccc79c54de96059b6cda__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2f3d24c2b0b779cda737103feb7342650c0519e7617aba5c0c9d5cae191dbedd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4cfa8905255b6a91c075f72e388cefbf94d53fe7f5658a1c78a1b88470cc018f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6be4648f1cbdd4ad144a891ed8126b3fbd155bb5160130ead8b7dd53741d04fb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e0ac64d64e096a8e0fe140ce12c154a30c281323fa269566ccce5788e6f7253d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_uint64__to_t_uint256_t_address_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint64__to_t_uint256_t_uint256_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint64__to_t_uint256_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint64": {
									"entryPoint": 2472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2511,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint128": {
									"entryPoint": 2435,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2415,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5513:4",
										"nodeType": "YulBlock",
										"src": "0:5513:4",
										"statements": [
											{
												"nativeSrc": "6:3:4",
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:117:4",
													"nodeType": "YulBlock",
													"src": "115:117:4",
													"statements": [
														{
															"nativeSrc": "125:26:4",
															"nodeType": "YulAssignment",
															"src": "125:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:4",
																		"nodeType": "YulLiteral",
																		"src": "148:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:4"
																},
																"nativeSrc": "133:18:4",
																"nodeType": "YulFunctionCall",
																"src": "133:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "182:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "190:34:4",
																				"nodeType": "YulLiteral",
																				"src": "190:34:4",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "178:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:4"
																		},
																		"nativeSrc": "178:47:4",
																		"nodeType": "YulFunctionCall",
																		"src": "178:47:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:4"
																},
																"nativeSrc": "160:66:4",
																"nodeType": "YulFunctionCall",
																"src": "160:66:4"
															},
															"nativeSrc": "160:66:4",
															"nodeType": "YulExpressionStatement",
															"src": "160:66:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed",
												"nativeSrc": "14:218:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:4",
														"nodeType": "YulTypedName",
														"src": "84:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:4",
														"nodeType": "YulTypedName",
														"src": "95:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:4",
														"nodeType": "YulTypedName",
														"src": "106:4:4",
														"type": ""
													}
												],
												"src": "14:218:4"
											},
											{
												"body": {
													"nativeSrc": "307:110:4",
													"nodeType": "YulBlock",
													"src": "307:110:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "353:16:4",
																"nodeType": "YulBlock",
																"src": "353:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "362:1:4",
																					"nodeType": "YulLiteral",
																					"src": "362:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "365:1:4",
																					"nodeType": "YulLiteral",
																					"src": "365:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "355:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "355:6:4"
																			},
																			"nativeSrc": "355:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "355:12:4"
																		},
																		"nativeSrc": "355:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "355:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "328:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "328:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "337:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "337:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "324:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "324:3:4"
																		},
																		"nativeSrc": "324:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "324:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "349:2:4",
																		"nodeType": "YulLiteral",
																		"src": "349:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "320:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "320:3:4"
																},
																"nativeSrc": "320:32:4",
																"nodeType": "YulFunctionCall",
																"src": "320:32:4"
															},
															"nativeSrc": "317:52:4",
															"nodeType": "YulIf",
															"src": "317:52:4"
														},
														{
															"nativeSrc": "378:33:4",
															"nodeType": "YulAssignment",
															"src": "378:33:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "401:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "401:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "388:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "388:12:4"
																},
																"nativeSrc": "388:23:4",
																"nodeType": "YulFunctionCall",
																"src": "388:23:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "378:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "378:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "237:180:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "273:9:4",
														"nodeType": "YulTypedName",
														"src": "273:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "284:7:4",
														"nodeType": "YulTypedName",
														"src": "284:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "296:6:4",
														"nodeType": "YulTypedName",
														"src": "296:6:4",
														"type": ""
													}
												],
												"src": "237:180:4"
											},
											{
												"body": {
													"nativeSrc": "577:213:4",
													"nodeType": "YulBlock",
													"src": "577:213:4",
													"statements": [
														{
															"nativeSrc": "587:26:4",
															"nodeType": "YulAssignment",
															"src": "587:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "599:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "599:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "610:2:4",
																		"nodeType": "YulLiteral",
																		"src": "610:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "595:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "595:3:4"
																},
																"nativeSrc": "595:18:4",
																"nodeType": "YulFunctionCall",
																"src": "595:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "587:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "587:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "629:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "629:9:4"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "640:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "640:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "622:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:4"
																},
																"nativeSrc": "622:25:4",
																"nodeType": "YulFunctionCall",
																"src": "622:25:4"
															},
															"nativeSrc": "622:25:4",
															"nodeType": "YulExpressionStatement",
															"src": "622:25:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "667:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "667:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "678:2:4",
																				"nodeType": "YulLiteral",
																				"src": "678:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "663:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "663:3:4"
																		},
																		"nativeSrc": "663:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "663:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "687:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "687:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "703:3:4",
																								"nodeType": "YulLiteral",
																								"src": "703:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "708:1:4",
																								"nodeType": "YulLiteral",
																								"src": "708:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "699:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "699:3:4"
																						},
																						"nativeSrc": "699:11:4",
																						"nodeType": "YulFunctionCall",
																						"src": "699:11:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "712:1:4",
																						"nodeType": "YulLiteral",
																						"src": "712:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "695:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "695:3:4"
																				},
																				"nativeSrc": "695:19:4",
																				"nodeType": "YulFunctionCall",
																				"src": "695:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "683:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "683:3:4"
																		},
																		"nativeSrc": "683:32:4",
																		"nodeType": "YulFunctionCall",
																		"src": "683:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "656:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "656:6:4"
																},
																"nativeSrc": "656:60:4",
																"nodeType": "YulFunctionCall",
																"src": "656:60:4"
															},
															"nativeSrc": "656:60:4",
															"nodeType": "YulExpressionStatement",
															"src": "656:60:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "736:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "736:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "747:2:4",
																				"nodeType": "YulLiteral",
																				"src": "747:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "732:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "732:3:4"
																		},
																		"nativeSrc": "732:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "732:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "756:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "756:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "764:18:4",
																				"nodeType": "YulLiteral",
																				"src": "764:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "752:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "752:3:4"
																		},
																		"nativeSrc": "752:31:4",
																		"nodeType": "YulFunctionCall",
																		"src": "752:31:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "725:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "725:6:4"
																},
																"nativeSrc": "725:59:4",
																"nodeType": "YulFunctionCall",
																"src": "725:59:4"
															},
															"nativeSrc": "725:59:4",
															"nodeType": "YulExpressionStatement",
															"src": "725:59:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_uint64__to_t_uint256_t_address_t_uint64__fromStack_reversed",
												"nativeSrc": "422:368:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "530:9:4",
														"nodeType": "YulTypedName",
														"src": "530:9:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "541:6:4",
														"nodeType": "YulTypedName",
														"src": "541:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "549:6:4",
														"nodeType": "YulTypedName",
														"src": "549:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "557:6:4",
														"nodeType": "YulTypedName",
														"src": "557:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "568:4:4",
														"nodeType": "YulTypedName",
														"src": "568:4:4",
														"type": ""
													}
												],
												"src": "422:368:4"
											},
											{
												"body": {
													"nativeSrc": "894:101:4",
													"nodeType": "YulBlock",
													"src": "894:101:4",
													"statements": [
														{
															"nativeSrc": "904:26:4",
															"nodeType": "YulAssignment",
															"src": "904:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "916:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "916:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "927:2:4",
																		"nodeType": "YulLiteral",
																		"src": "927:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "912:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "912:3:4"
																},
																"nativeSrc": "912:18:4",
																"nodeType": "YulFunctionCall",
																"src": "912:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "904:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "904:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "946:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "946:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "961:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "961:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "969:18:4",
																				"nodeType": "YulLiteral",
																				"src": "969:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "957:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "957:3:4"
																		},
																		"nativeSrc": "957:31:4",
																		"nodeType": "YulFunctionCall",
																		"src": "957:31:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "939:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "939:6:4"
																},
																"nativeSrc": "939:50:4",
																"nodeType": "YulFunctionCall",
																"src": "939:50:4"
															},
															"nativeSrc": "939:50:4",
															"nodeType": "YulExpressionStatement",
															"src": "939:50:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed",
												"nativeSrc": "795:200:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "863:9:4",
														"nodeType": "YulTypedName",
														"src": "863:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "874:6:4",
														"nodeType": "YulTypedName",
														"src": "874:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "885:4:4",
														"nodeType": "YulTypedName",
														"src": "885:4:4",
														"type": ""
													}
												],
												"src": "795:200:4"
											},
											{
												"body": {
													"nativeSrc": "1095:92:4",
													"nodeType": "YulBlock",
													"src": "1095:92:4",
													"statements": [
														{
															"nativeSrc": "1105:26:4",
															"nodeType": "YulAssignment",
															"src": "1105:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1117:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1117:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1128:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1128:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1113:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1113:3:4"
																},
																"nativeSrc": "1113:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1113:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1105:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1105:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1147:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1147:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1172:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1172:6:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1165:6:4",
																					"nodeType": "YulIdentifier",
																					"src": "1165:6:4"
																				},
																				"nativeSrc": "1165:14:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1165:14:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1158:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1158:6:4"
																		},
																		"nativeSrc": "1158:22:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1158:22:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1140:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1140:6:4"
																},
																"nativeSrc": "1140:41:4",
																"nodeType": "YulFunctionCall",
																"src": "1140:41:4"
															},
															"nativeSrc": "1140:41:4",
															"nodeType": "YulExpressionStatement",
															"src": "1140:41:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1000:187:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1064:9:4",
														"nodeType": "YulTypedName",
														"src": "1064:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1075:6:4",
														"nodeType": "YulTypedName",
														"src": "1075:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1086:4:4",
														"nodeType": "YulTypedName",
														"src": "1086:4:4",
														"type": ""
													}
												],
												"src": "1000:187:4"
											},
											{
												"body": {
													"nativeSrc": "1293:102:4",
													"nodeType": "YulBlock",
													"src": "1293:102:4",
													"statements": [
														{
															"nativeSrc": "1303:26:4",
															"nodeType": "YulAssignment",
															"src": "1303:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1315:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1315:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1326:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1326:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1311:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1311:3:4"
																},
																"nativeSrc": "1311:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1311:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1303:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1303:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1345:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1345:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1360:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1360:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1376:3:4",
																								"nodeType": "YulLiteral",
																								"src": "1376:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1381:1:4",
																								"nodeType": "YulLiteral",
																								"src": "1381:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1372:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "1372:3:4"
																						},
																						"nativeSrc": "1372:11:4",
																						"nodeType": "YulFunctionCall",
																						"src": "1372:11:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1385:1:4",
																						"nodeType": "YulLiteral",
																						"src": "1385:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1368:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1368:3:4"
																				},
																				"nativeSrc": "1368:19:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1368:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1356:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1356:3:4"
																		},
																		"nativeSrc": "1356:32:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1356:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1338:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1338:6:4"
																},
																"nativeSrc": "1338:51:4",
																"nodeType": "YulFunctionCall",
																"src": "1338:51:4"
															},
															"nativeSrc": "1338:51:4",
															"nodeType": "YulExpressionStatement",
															"src": "1338:51:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1192:203:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1262:9:4",
														"nodeType": "YulTypedName",
														"src": "1262:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1273:6:4",
														"nodeType": "YulTypedName",
														"src": "1273:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1284:4:4",
														"nodeType": "YulTypedName",
														"src": "1284:4:4",
														"type": ""
													}
												],
												"src": "1192:203:4"
											},
											{
												"body": {
													"nativeSrc": "1501:76:4",
													"nodeType": "YulBlock",
													"src": "1501:76:4",
													"statements": [
														{
															"nativeSrc": "1511:26:4",
															"nodeType": "YulAssignment",
															"src": "1511:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1523:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1523:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1534:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1534:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1519:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1519:3:4"
																},
																"nativeSrc": "1519:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1519:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1511:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1511:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1553:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1553:9:4"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1564:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1564:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1546:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1546:6:4"
																},
																"nativeSrc": "1546:25:4",
																"nodeType": "YulFunctionCall",
																"src": "1546:25:4"
															},
															"nativeSrc": "1546:25:4",
															"nodeType": "YulExpressionStatement",
															"src": "1546:25:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1400:177:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1470:9:4",
														"nodeType": "YulTypedName",
														"src": "1470:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1481:6:4",
														"nodeType": "YulTypedName",
														"src": "1481:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1492:4:4",
														"nodeType": "YulTypedName",
														"src": "1492:4:4",
														"type": ""
													}
												],
												"src": "1400:177:4"
											},
											{
												"body": {
													"nativeSrc": "1652:216:4",
													"nodeType": "YulBlock",
													"src": "1652:216:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1698:16:4",
																"nodeType": "YulBlock",
																"src": "1698:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1707:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1707:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1710:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1710:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1700:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1700:6:4"
																			},
																			"nativeSrc": "1700:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1700:12:4"
																		},
																		"nativeSrc": "1700:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1700:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1673:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1673:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1682:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1682:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1669:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1669:3:4"
																		},
																		"nativeSrc": "1669:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1669:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1694:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1694:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1665:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1665:3:4"
																},
																"nativeSrc": "1665:32:4",
																"nodeType": "YulFunctionCall",
																"src": "1665:32:4"
															},
															"nativeSrc": "1662:52:4",
															"nodeType": "YulIf",
															"src": "1662:52:4"
														},
														{
															"nativeSrc": "1723:36:4",
															"nodeType": "YulVariableDeclaration",
															"src": "1723:36:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1749:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1749:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1736:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "1736:12:4"
																},
																"nativeSrc": "1736:23:4",
																"nodeType": "YulFunctionCall",
																"src": "1736:23:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1727:5:4",
																	"nodeType": "YulTypedName",
																	"src": "1727:5:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1822:16:4",
																"nodeType": "YulBlock",
																"src": "1822:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1831:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1831:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1834:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1834:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1824:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1824:6:4"
																			},
																			"nativeSrc": "1824:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1824:12:4"
																		},
																		"nativeSrc": "1824:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1824:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1781:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1781:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1792:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "1792:5:4"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1807:3:4",
																										"nodeType": "YulLiteral",
																										"src": "1807:3:4",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1812:1:4",
																										"nodeType": "YulLiteral",
																										"src": "1812:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1803:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "1803:3:4"
																								},
																								"nativeSrc": "1803:11:4",
																								"nodeType": "YulFunctionCall",
																								"src": "1803:11:4"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1816:1:4",
																								"nodeType": "YulLiteral",
																								"src": "1816:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1799:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "1799:3:4"
																						},
																						"nativeSrc": "1799:19:4",
																						"nodeType": "YulFunctionCall",
																						"src": "1799:19:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1788:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1788:3:4"
																				},
																				"nativeSrc": "1788:31:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1788:31:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1778:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "1778:2:4"
																		},
																		"nativeSrc": "1778:42:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1778:42:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1771:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1771:6:4"
																},
																"nativeSrc": "1771:50:4",
																"nodeType": "YulFunctionCall",
																"src": "1771:50:4"
															},
															"nativeSrc": "1768:70:4",
															"nodeType": "YulIf",
															"src": "1768:70:4"
														},
														{
															"nativeSrc": "1847:15:4",
															"nodeType": "YulAssignment",
															"src": "1847:15:4",
															"value": {
																"name": "value",
																"nativeSrc": "1857:5:4",
																"nodeType": "YulIdentifier",
																"src": "1857:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1847:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1847:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1582:286:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1618:9:4",
														"nodeType": "YulTypedName",
														"src": "1618:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1629:7:4",
														"nodeType": "YulTypedName",
														"src": "1629:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1641:6:4",
														"nodeType": "YulTypedName",
														"src": "1641:6:4",
														"type": ""
													}
												],
												"src": "1582:286:4"
											},
											{
												"body": {
													"nativeSrc": "2047:177:4",
													"nodeType": "YulBlock",
													"src": "2047:177:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2064:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2064:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2075:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2075:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2057:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2057:6:4"
																},
																"nativeSrc": "2057:21:4",
																"nodeType": "YulFunctionCall",
																"src": "2057:21:4"
															},
															"nativeSrc": "2057:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "2057:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2098:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2098:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2109:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2109:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2094:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2094:3:4"
																		},
																		"nativeSrc": "2094:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2094:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2114:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2114:2:4",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2087:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2087:6:4"
																},
																"nativeSrc": "2087:30:4",
																"nodeType": "YulFunctionCall",
																"src": "2087:30:4"
															},
															"nativeSrc": "2087:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "2087:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2137:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2137:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2148:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2148:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2133:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2133:3:4"
																		},
																		"nativeSrc": "2133:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2133:18:4"
																	},
																	{
																		"hexValue": "4c6173742067616d65206973207374696c6c2072756e6e696e6721",
																		"kind": "string",
																		"nativeSrc": "2153:29:4",
																		"nodeType": "YulLiteral",
																		"src": "2153:29:4",
																		"type": "",
																		"value": "Last game is still running!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2126:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2126:6:4"
																},
																"nativeSrc": "2126:57:4",
																"nodeType": "YulFunctionCall",
																"src": "2126:57:4"
															},
															"nativeSrc": "2126:57:4",
															"nodeType": "YulExpressionStatement",
															"src": "2126:57:4"
														},
														{
															"nativeSrc": "2192:26:4",
															"nodeType": "YulAssignment",
															"src": "2192:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2204:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2204:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2215:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2215:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2200:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2200:3:4"
																},
																"nativeSrc": "2200:18:4",
																"nodeType": "YulFunctionCall",
																"src": "2200:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2192:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2192:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6be4648f1cbdd4ad144a891ed8126b3fbd155bb5160130ead8b7dd53741d04fb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1873:351:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2024:9:4",
														"nodeType": "YulTypedName",
														"src": "2024:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2038:4:4",
														"nodeType": "YulTypedName",
														"src": "2038:4:4",
														"type": ""
													}
												],
												"src": "1873:351:4"
											},
											{
												"body": {
													"nativeSrc": "2384:187:4",
													"nodeType": "YulBlock",
													"src": "2384:187:4",
													"statements": [
														{
															"nativeSrc": "2394:26:4",
															"nodeType": "YulAssignment",
															"src": "2394:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2406:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2406:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2417:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2417:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2402:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2402:3:4"
																},
																"nativeSrc": "2402:18:4",
																"nodeType": "YulFunctionCall",
																"src": "2402:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2394:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2394:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2436:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2436:9:4"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2447:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2447:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2429:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2429:6:4"
																},
																"nativeSrc": "2429:25:4",
																"nodeType": "YulFunctionCall",
																"src": "2429:25:4"
															},
															"nativeSrc": "2429:25:4",
															"nodeType": "YulExpressionStatement",
															"src": "2429:25:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2474:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2474:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2485:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2485:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2470:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2470:3:4"
																		},
																		"nativeSrc": "2470:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2470:18:4"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "2490:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2490:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2463:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2463:6:4"
																},
																"nativeSrc": "2463:34:4",
																"nodeType": "YulFunctionCall",
																"src": "2463:34:4"
															},
															"nativeSrc": "2463:34:4",
															"nodeType": "YulExpressionStatement",
															"src": "2463:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2517:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2517:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2528:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2528:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2513:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2513:3:4"
																		},
																		"nativeSrc": "2513:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2513:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "2537:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2537:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2545:18:4",
																				"nodeType": "YulLiteral",
																				"src": "2545:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2533:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2533:3:4"
																		},
																		"nativeSrc": "2533:31:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2533:31:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2506:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2506:6:4"
																},
																"nativeSrc": "2506:59:4",
																"nodeType": "YulFunctionCall",
																"src": "2506:59:4"
															},
															"nativeSrc": "2506:59:4",
															"nodeType": "YulExpressionStatement",
															"src": "2506:59:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint64__to_t_uint256_t_uint256_t_uint64__fromStack_reversed",
												"nativeSrc": "2229:342:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2337:9:4",
														"nodeType": "YulTypedName",
														"src": "2337:9:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2348:6:4",
														"nodeType": "YulTypedName",
														"src": "2348:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2356:6:4",
														"nodeType": "YulTypedName",
														"src": "2356:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2364:6:4",
														"nodeType": "YulTypedName",
														"src": "2364:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2375:4:4",
														"nodeType": "YulTypedName",
														"src": "2375:4:4",
														"type": ""
													}
												],
												"src": "2229:342:4"
											},
											{
												"body": {
													"nativeSrc": "2750:229:4",
													"nodeType": "YulBlock",
													"src": "2750:229:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2767:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2767:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2778:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2778:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2760:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2760:6:4"
																},
																"nativeSrc": "2760:21:4",
																"nodeType": "YulFunctionCall",
																"src": "2760:21:4"
															},
															"nativeSrc": "2760:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "2760:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2801:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2801:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2812:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2812:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2797:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2797:3:4"
																		},
																		"nativeSrc": "2797:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2797:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2817:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2817:2:4",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2790:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2790:6:4"
																},
																"nativeSrc": "2790:30:4",
																"nodeType": "YulFunctionCall",
																"src": "2790:30:4"
															},
															"nativeSrc": "2790:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "2790:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2840:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2840:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2851:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2851:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2836:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2836:3:4"
																		},
																		"nativeSrc": "2836:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:18:4"
																	},
																	{
																		"hexValue": "42696420616d6f756e742073686f756c64206265206772656174657220746861",
																		"kind": "string",
																		"nativeSrc": "2856:34:4",
																		"nodeType": "YulLiteral",
																		"src": "2856:34:4",
																		"type": "",
																		"value": "Bid amount should be greater tha"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2829:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2829:6:4"
																},
																"nativeSrc": "2829:62:4",
																"nodeType": "YulFunctionCall",
																"src": "2829:62:4"
															},
															"nativeSrc": "2829:62:4",
															"nodeType": "YulExpressionStatement",
															"src": "2829:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2911:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2911:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2922:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2922:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2907:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2907:3:4"
																		},
																		"nativeSrc": "2907:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2907:18:4"
																	},
																	{
																		"hexValue": "6e207a65726f21",
																		"kind": "string",
																		"nativeSrc": "2927:9:4",
																		"nodeType": "YulLiteral",
																		"src": "2927:9:4",
																		"type": "",
																		"value": "n zero!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2900:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2900:6:4"
																},
																"nativeSrc": "2900:37:4",
																"nodeType": "YulFunctionCall",
																"src": "2900:37:4"
															},
															"nativeSrc": "2900:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "2900:37:4"
														},
														{
															"nativeSrc": "2946:27:4",
															"nodeType": "YulAssignment",
															"src": "2946:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2958:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2958:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2969:3:4",
																		"nodeType": "YulLiteral",
																		"src": "2969:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2954:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2954:3:4"
																},
																"nativeSrc": "2954:19:4",
																"nodeType": "YulFunctionCall",
																"src": "2954:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2946:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2946:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2f3d24c2b0b779cda737103feb7342650c0519e7617aba5c0c9d5cae191dbedd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2576:403:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2727:9:4",
														"nodeType": "YulTypedName",
														"src": "2727:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2741:4:4",
														"nodeType": "YulTypedName",
														"src": "2741:4:4",
														"type": ""
													}
												],
												"src": "2576:403:4"
											},
											{
												"body": {
													"nativeSrc": "3158:240:4",
													"nodeType": "YulBlock",
													"src": "3158:240:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3175:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3175:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3186:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3186:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3168:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3168:6:4"
																},
																"nativeSrc": "3168:21:4",
																"nodeType": "YulFunctionCall",
																"src": "3168:21:4"
															},
															"nativeSrc": "3168:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "3168:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3209:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3209:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3220:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3220:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3205:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3205:3:4"
																		},
																		"nativeSrc": "3205:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3205:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3225:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3225:2:4",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3198:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3198:6:4"
																},
																"nativeSrc": "3198:30:4",
																"nodeType": "YulFunctionCall",
																"src": "3198:30:4"
															},
															"nativeSrc": "3198:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "3198:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3248:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3248:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3259:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3259:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3244:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3244:3:4"
																		},
																		"nativeSrc": "3244:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3244:18:4"
																	},
																	{
																		"hexValue": "42696420616d6f756e742073686f756c64206265206772656174657220746861",
																		"kind": "string",
																		"nativeSrc": "3264:34:4",
																		"nodeType": "YulLiteral",
																		"src": "3264:34:4",
																		"type": "",
																		"value": "Bid amount should be greater tha"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3237:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3237:6:4"
																},
																"nativeSrc": "3237:62:4",
																"nodeType": "YulFunctionCall",
																"src": "3237:62:4"
															},
															"nativeSrc": "3237:62:4",
															"nodeType": "YulExpressionStatement",
															"src": "3237:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3319:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3319:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3330:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3330:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3315:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3315:3:4"
																		},
																		"nativeSrc": "3315:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3315:18:4"
																	},
																	{
																		"hexValue": "6e206c6173742062696420616d6f756e7421",
																		"kind": "string",
																		"nativeSrc": "3335:20:4",
																		"nodeType": "YulLiteral",
																		"src": "3335:20:4",
																		"type": "",
																		"value": "n last bid amount!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3308:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3308:6:4"
																},
																"nativeSrc": "3308:48:4",
																"nodeType": "YulFunctionCall",
																"src": "3308:48:4"
															},
															"nativeSrc": "3308:48:4",
															"nodeType": "YulExpressionStatement",
															"src": "3308:48:4"
														},
														{
															"nativeSrc": "3365:27:4",
															"nodeType": "YulAssignment",
															"src": "3365:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3377:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3377:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3388:3:4",
																		"nodeType": "YulLiteral",
																		"src": "3388:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3373:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3373:3:4"
																},
																"nativeSrc": "3373:19:4",
																"nodeType": "YulFunctionCall",
																"src": "3373:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3365:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "3365:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4cfa8905255b6a91c075f72e388cefbf94d53fe7f5658a1c78a1b88470cc018f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2984:414:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3135:9:4",
														"nodeType": "YulTypedName",
														"src": "3135:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3149:4:4",
														"nodeType": "YulTypedName",
														"src": "3149:4:4",
														"type": ""
													}
												],
												"src": "2984:414:4"
											},
											{
												"body": {
													"nativeSrc": "3577:178:4",
													"nodeType": "YulBlock",
													"src": "3577:178:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3594:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3594:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3605:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3605:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3587:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3587:6:4"
																},
																"nativeSrc": "3587:21:4",
																"nodeType": "YulFunctionCall",
																"src": "3587:21:4"
															},
															"nativeSrc": "3587:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "3587:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3628:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3628:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3639:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3639:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3624:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3624:3:4"
																		},
																		"nativeSrc": "3624:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3624:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3644:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3644:2:4",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3617:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3617:6:4"
																},
																"nativeSrc": "3617:30:4",
																"nodeType": "YulFunctionCall",
																"src": "3617:30:4"
															},
															"nativeSrc": "3617:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "3617:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3667:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3667:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3678:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3678:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3663:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3663:3:4"
																		},
																		"nativeSrc": "3663:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3663:18:4"
																	},
																	{
																		"hexValue": "47616d65206f766572207761697420666f72206e65772067616d6521",
																		"kind": "string",
																		"nativeSrc": "3683:30:4",
																		"nodeType": "YulLiteral",
																		"src": "3683:30:4",
																		"type": "",
																		"value": "Game over wait for new game!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3656:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3656:6:4"
																},
																"nativeSrc": "3656:58:4",
																"nodeType": "YulFunctionCall",
																"src": "3656:58:4"
															},
															"nativeSrc": "3656:58:4",
															"nodeType": "YulExpressionStatement",
															"src": "3656:58:4"
														},
														{
															"nativeSrc": "3723:26:4",
															"nodeType": "YulAssignment",
															"src": "3723:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3735:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3735:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3746:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3746:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3731:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3731:3:4"
																},
																"nativeSrc": "3731:18:4",
																"nodeType": "YulFunctionCall",
																"src": "3731:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3723:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "3723:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e0ac64d64e096a8e0fe140ce12c154a30c281323fa269566ccce5788e6f7253d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3403:352:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3554:9:4",
														"nodeType": "YulTypedName",
														"src": "3554:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3568:4:4",
														"nodeType": "YulTypedName",
														"src": "3568:4:4",
														"type": ""
													}
												],
												"src": "3403:352:4"
											},
											{
												"body": {
													"nativeSrc": "3792:95:4",
													"nodeType": "YulBlock",
													"src": "3792:95:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3809:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3809:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3816:3:4",
																				"nodeType": "YulLiteral",
																				"src": "3816:3:4",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3821:10:4",
																				"nodeType": "YulLiteral",
																				"src": "3821:10:4",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3812:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3812:3:4"
																		},
																		"nativeSrc": "3812:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3812:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3802:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3802:6:4"
																},
																"nativeSrc": "3802:31:4",
																"nodeType": "YulFunctionCall",
																"src": "3802:31:4"
															},
															"nativeSrc": "3802:31:4",
															"nodeType": "YulExpressionStatement",
															"src": "3802:31:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3849:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3849:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3852:4:4",
																		"nodeType": "YulLiteral",
																		"src": "3852:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3842:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3842:6:4"
																},
																"nativeSrc": "3842:15:4",
																"nodeType": "YulFunctionCall",
																"src": "3842:15:4"
															},
															"nativeSrc": "3842:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "3842:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3873:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3873:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3876:4:4",
																		"nodeType": "YulLiteral",
																		"src": "3876:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3866:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3866:6:4"
																},
																"nativeSrc": "3866:15:4",
																"nodeType": "YulFunctionCall",
																"src": "3866:15:4"
															},
															"nativeSrc": "3866:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "3866:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3760:127:4",
												"nodeType": "YulFunctionDefinition",
												"src": "3760:127:4"
											},
											{
												"body": {
													"nativeSrc": "3939:179:4",
													"nodeType": "YulBlock",
													"src": "3939:179:4",
													"statements": [
														{
															"nativeSrc": "3949:44:4",
															"nodeType": "YulVariableDeclaration",
															"src": "3949:44:4",
															"value": {
																"kind": "number",
																"nativeSrc": "3959:34:4",
																"nodeType": "YulLiteral",
																"src": "3959:34:4",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3953:2:4",
																	"nodeType": "YulTypedName",
																	"src": "3953:2:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4002:29:4",
															"nodeType": "YulVariableDeclaration",
															"src": "4002:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4021:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "4021:5:4"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "4028:2:4",
																		"nodeType": "YulIdentifier",
																		"src": "4028:2:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4017:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4017:3:4"
																},
																"nativeSrc": "4017:14:4",
																"nodeType": "YulFunctionCall",
																"src": "4017:14:4"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "4006:7:4",
																	"nodeType": "YulTypedName",
																	"src": "4006:7:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4059:22:4",
																"nodeType": "YulBlock",
																"src": "4059:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4061:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "4061:16:4"
																			},
																			"nativeSrc": "4061:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4061:18:4"
																		},
																		"nativeSrc": "4061:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "4061:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "4046:7:4",
																		"nodeType": "YulIdentifier",
																		"src": "4046:7:4"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "4055:2:4",
																		"nodeType": "YulIdentifier",
																		"src": "4055:2:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4043:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "4043:2:4"
																},
																"nativeSrc": "4043:15:4",
																"nodeType": "YulFunctionCall",
																"src": "4043:15:4"
															},
															"nativeSrc": "4040:41:4",
															"nodeType": "YulIf",
															"src": "4040:41:4"
														},
														{
															"nativeSrc": "4090:22:4",
															"nodeType": "YulAssignment",
															"src": "4090:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "4101:7:4",
																		"nodeType": "YulIdentifier",
																		"src": "4101:7:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4110:1:4",
																		"nodeType": "YulLiteral",
																		"src": "4110:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4097:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4097:3:4"
																},
																"nativeSrc": "4097:15:4",
																"nodeType": "YulFunctionCall",
																"src": "4097:15:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4090:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4090:3:4"
																}
															]
														}
													]
												},
												"name": "increment_t_uint128",
												"nativeSrc": "3892:226:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3921:5:4",
														"nodeType": "YulTypedName",
														"src": "3921:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3931:3:4",
														"nodeType": "YulTypedName",
														"src": "3931:3:4",
														"type": ""
													}
												],
												"src": "3892:226:4"
											},
											{
												"body": {
													"nativeSrc": "4250:144:4",
													"nodeType": "YulBlock",
													"src": "4250:144:4",
													"statements": [
														{
															"nativeSrc": "4260:26:4",
															"nodeType": "YulAssignment",
															"src": "4260:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4272:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "4272:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4283:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4283:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4268:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4268:3:4"
																},
																"nativeSrc": "4268:18:4",
																"nodeType": "YulFunctionCall",
																"src": "4268:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4260:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "4260:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4302:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "4302:9:4"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "4313:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4313:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4295:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4295:6:4"
																},
																"nativeSrc": "4295:25:4",
																"nodeType": "YulFunctionCall",
																"src": "4295:25:4"
															},
															"nativeSrc": "4295:25:4",
															"nodeType": "YulExpressionStatement",
															"src": "4295:25:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4340:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4340:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4351:2:4",
																				"nodeType": "YulLiteral",
																				"src": "4351:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4336:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4336:3:4"
																		},
																		"nativeSrc": "4336:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4336:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "4360:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "4360:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4368:18:4",
																				"nodeType": "YulLiteral",
																				"src": "4368:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4356:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4356:3:4"
																		},
																		"nativeSrc": "4356:31:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4356:31:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4329:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4329:6:4"
																},
																"nativeSrc": "4329:59:4",
																"nodeType": "YulFunctionCall",
																"src": "4329:59:4"
															},
															"nativeSrc": "4329:59:4",
															"nodeType": "YulExpressionStatement",
															"src": "4329:59:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint64__to_t_uint256_t_uint64__fromStack_reversed",
												"nativeSrc": "4123:271:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4211:9:4",
														"nodeType": "YulTypedName",
														"src": "4211:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4222:6:4",
														"nodeType": "YulTypedName",
														"src": "4222:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4230:6:4",
														"nodeType": "YulTypedName",
														"src": "4230:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4241:4:4",
														"nodeType": "YulTypedName",
														"src": "4241:4:4",
														"type": ""
													}
												],
												"src": "4123:271:4"
											},
											{
												"body": {
													"nativeSrc": "4446:133:4",
													"nodeType": "YulBlock",
													"src": "4446:133:4",
													"statements": [
														{
															"nativeSrc": "4456:28:4",
															"nodeType": "YulVariableDeclaration",
															"src": "4456:28:4",
															"value": {
																"kind": "number",
																"nativeSrc": "4466:18:4",
																"nodeType": "YulLiteral",
																"src": "4466:18:4",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "4460:2:4",
																	"nodeType": "YulTypedName",
																	"src": "4460:2:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4493:34:4",
															"nodeType": "YulAssignment",
															"src": "4493:34:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4508:1:4",
																				"nodeType": "YulIdentifier",
																				"src": "4508:1:4"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "4511:2:4",
																				"nodeType": "YulIdentifier",
																				"src": "4511:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4504:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4504:3:4"
																		},
																		"nativeSrc": "4504:10:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4504:10:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "4520:1:4",
																				"nodeType": "YulIdentifier",
																				"src": "4520:1:4"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "4523:2:4",
																				"nodeType": "YulIdentifier",
																				"src": "4523:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4516:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4516:3:4"
																		},
																		"nativeSrc": "4516:10:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4516:10:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4500:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4500:3:4"
																},
																"nativeSrc": "4500:27:4",
																"nodeType": "YulFunctionCall",
																"src": "4500:27:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4493:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4493:3:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4551:22:4",
																"nodeType": "YulBlock",
																"src": "4551:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4553:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "4553:16:4"
																			},
																			"nativeSrc": "4553:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4553:18:4"
																		},
																		"nativeSrc": "4553:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "4553:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "sum",
																		"nativeSrc": "4542:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4542:3:4"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "4547:2:4",
																		"nodeType": "YulIdentifier",
																		"src": "4547:2:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4539:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "4539:2:4"
																},
																"nativeSrc": "4539:11:4",
																"nodeType": "YulFunctionCall",
																"src": "4539:11:4"
															},
															"nativeSrc": "4536:37:4",
															"nodeType": "YulIf",
															"src": "4536:37:4"
														}
													]
												},
												"name": "checked_add_t_uint64",
												"nativeSrc": "4399:180:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4429:1:4",
														"nodeType": "YulTypedName",
														"src": "4429:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4432:1:4",
														"nodeType": "YulTypedName",
														"src": "4432:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4438:3:4",
														"nodeType": "YulTypedName",
														"src": "4438:3:4",
														"type": ""
													}
												],
												"src": "4399:180:4"
											},
											{
												"body": {
													"nativeSrc": "4636:116:4",
													"nodeType": "YulBlock",
													"src": "4636:116:4",
													"statements": [
														{
															"nativeSrc": "4646:20:4",
															"nodeType": "YulAssignment",
															"src": "4646:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4661:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "4661:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4664:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "4664:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4657:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4657:3:4"
																},
																"nativeSrc": "4657:9:4",
																"nodeType": "YulFunctionCall",
																"src": "4657:9:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "4646:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "4646:7:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4724:22:4",
																"nodeType": "YulBlock",
																"src": "4724:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4726:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "4726:16:4"
																			},
																			"nativeSrc": "4726:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4726:18:4"
																		},
																		"nativeSrc": "4726:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "4726:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "4695:1:4",
																						"nodeType": "YulIdentifier",
																						"src": "4695:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4688:6:4",
																					"nodeType": "YulIdentifier",
																					"src": "4688:6:4"
																				},
																				"nativeSrc": "4688:9:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4688:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "4702:1:4",
																						"nodeType": "YulIdentifier",
																						"src": "4702:1:4"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "4709:7:4",
																								"nodeType": "YulIdentifier",
																								"src": "4709:7:4"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "4718:1:4",
																								"nodeType": "YulIdentifier",
																								"src": "4718:1:4"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "4705:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "4705:3:4"
																						},
																						"nativeSrc": "4705:15:4",
																						"nodeType": "YulFunctionCall",
																						"src": "4705:15:4"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "4699:2:4",
																					"nodeType": "YulIdentifier",
																					"src": "4699:2:4"
																				},
																				"nativeSrc": "4699:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4699:22:4"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4685:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "4685:2:4"
																		},
																		"nativeSrc": "4685:37:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4685:37:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4678:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4678:6:4"
																},
																"nativeSrc": "4678:45:4",
																"nodeType": "YulFunctionCall",
																"src": "4678:45:4"
															},
															"nativeSrc": "4675:71:4",
															"nodeType": "YulIf",
															"src": "4675:71:4"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "4584:168:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4615:1:4",
														"nodeType": "YulTypedName",
														"src": "4615:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4618:1:4",
														"nodeType": "YulTypedName",
														"src": "4618:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4624:7:4",
														"nodeType": "YulTypedName",
														"src": "4624:7:4",
														"type": ""
													}
												],
												"src": "4584:168:4"
											},
											{
												"body": {
													"nativeSrc": "4803:171:4",
													"nodeType": "YulBlock",
													"src": "4803:171:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "4834:111:4",
																"nodeType": "YulBlock",
																"src": "4834:111:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4855:1:4",
																					"nodeType": "YulLiteral",
																					"src": "4855:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4862:3:4",
																							"nodeType": "YulLiteral",
																							"src": "4862:3:4",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4867:10:4",
																							"nodeType": "YulLiteral",
																							"src": "4867:10:4",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4858:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "4858:3:4"
																					},
																					"nativeSrc": "4858:20:4",
																					"nodeType": "YulFunctionCall",
																					"src": "4858:20:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4848:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "4848:6:4"
																			},
																			"nativeSrc": "4848:31:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4848:31:4"
																		},
																		"nativeSrc": "4848:31:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "4848:31:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4899:1:4",
																					"nodeType": "YulLiteral",
																					"src": "4899:1:4",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4902:4:4",
																					"nodeType": "YulLiteral",
																					"src": "4902:4:4",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4892:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "4892:6:4"
																			},
																			"nativeSrc": "4892:15:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4892:15:4"
																		},
																		"nativeSrc": "4892:15:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "4892:15:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4927:1:4",
																					"nodeType": "YulLiteral",
																					"src": "4927:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4930:4:4",
																					"nodeType": "YulLiteral",
																					"src": "4930:4:4",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4920:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "4920:6:4"
																			},
																			"nativeSrc": "4920:15:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4920:15:4"
																		},
																		"nativeSrc": "4920:15:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "4920:15:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4823:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "4823:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4816:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4816:6:4"
																},
																"nativeSrc": "4816:9:4",
																"nodeType": "YulFunctionCall",
																"src": "4816:9:4"
															},
															"nativeSrc": "4813:132:4",
															"nodeType": "YulIf",
															"src": "4813:132:4"
														},
														{
															"nativeSrc": "4954:14:4",
															"nodeType": "YulAssignment",
															"src": "4954:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4963:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "4963:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4966:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "4966:1:4"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4959:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4959:3:4"
																},
																"nativeSrc": "4959:9:4",
																"nodeType": "YulFunctionCall",
																"src": "4959:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "4954:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "4954:1:4"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "4757:217:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4788:1:4",
														"nodeType": "YulTypedName",
														"src": "4788:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4791:1:4",
														"nodeType": "YulTypedName",
														"src": "4791:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "4797:1:4",
														"nodeType": "YulTypedName",
														"src": "4797:1:4",
														"type": ""
													}
												],
												"src": "4757:217:4"
											},
											{
												"body": {
													"nativeSrc": "5153:228:4",
													"nodeType": "YulBlock",
													"src": "5153:228:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5170:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "5170:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5181:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5181:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5163:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5163:6:4"
																},
																"nativeSrc": "5163:21:4",
																"nodeType": "YulFunctionCall",
																"src": "5163:21:4"
															},
															"nativeSrc": "5163:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "5163:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5204:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5204:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5215:2:4",
																				"nodeType": "YulLiteral",
																				"src": "5215:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5200:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5200:3:4"
																		},
																		"nativeSrc": "5200:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5200:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5220:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5220:2:4",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5193:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5193:6:4"
																},
																"nativeSrc": "5193:30:4",
																"nodeType": "YulFunctionCall",
																"src": "5193:30:4"
															},
															"nativeSrc": "5193:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "5193:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5243:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5243:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5254:2:4",
																				"nodeType": "YulLiteral",
																				"src": "5254:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5239:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5239:3:4"
																		},
																		"nativeSrc": "5239:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5239:18:4"
																	},
																	{
																		"hexValue": "4c6173742067616d65206973207374696c6c2077616974696e6720666f722072",
																		"kind": "string",
																		"nativeSrc": "5259:34:4",
																		"nodeType": "YulLiteral",
																		"src": "5259:34:4",
																		"type": "",
																		"value": "Last game is still waiting for r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5232:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5232:6:4"
																},
																"nativeSrc": "5232:62:4",
																"nodeType": "YulFunctionCall",
																"src": "5232:62:4"
															},
															"nativeSrc": "5232:62:4",
															"nodeType": "YulExpressionStatement",
															"src": "5232:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5314:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5314:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5325:2:4",
																				"nodeType": "YulLiteral",
																				"src": "5325:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5310:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5310:3:4"
																		},
																		"nativeSrc": "5310:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5310:18:4"
																	},
																	{
																		"hexValue": "6573756c7421",
																		"kind": "string",
																		"nativeSrc": "5330:8:4",
																		"nodeType": "YulLiteral",
																		"src": "5330:8:4",
																		"type": "",
																		"value": "esult!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5303:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5303:6:4"
																},
																"nativeSrc": "5303:36:4",
																"nodeType": "YulFunctionCall",
																"src": "5303:36:4"
															},
															"nativeSrc": "5303:36:4",
															"nodeType": "YulExpressionStatement",
															"src": "5303:36:4"
														},
														{
															"nativeSrc": "5348:27:4",
															"nodeType": "YulAssignment",
															"src": "5348:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5360:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "5360:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5371:3:4",
																		"nodeType": "YulLiteral",
																		"src": "5371:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5356:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5356:3:4"
																},
																"nativeSrc": "5356:19:4",
																"nodeType": "YulFunctionCall",
																"src": "5356:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5348:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "5348:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_13cbd6cd63292023c9c4f6c179a19b06f21ee11c3198ccc79c54de96059b6cda__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4979:402:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5130:9:4",
														"nodeType": "YulTypedName",
														"src": "5130:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5144:4:4",
														"nodeType": "YulTypedName",
														"src": "5144:4:4",
														"type": ""
													}
												],
												"src": "4979:402:4"
											},
											{
												"body": {
													"nativeSrc": "5434:77:4",
													"nodeType": "YulBlock",
													"src": "5434:77:4",
													"statements": [
														{
															"nativeSrc": "5444:16:4",
															"nodeType": "YulAssignment",
															"src": "5444:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5455:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "5455:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5458:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "5458:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5451:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5451:3:4"
																},
																"nativeSrc": "5451:9:4",
																"nodeType": "YulFunctionCall",
																"src": "5451:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5444:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5444:3:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5483:22:4",
																"nodeType": "YulBlock",
																"src": "5483:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5485:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "5485:16:4"
																			},
																			"nativeSrc": "5485:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5485:18:4"
																		},
																		"nativeSrc": "5485:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "5485:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5475:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "5475:1:4"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5478:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "5478:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5472:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "5472:2:4"
																},
																"nativeSrc": "5472:10:4",
																"nodeType": "YulFunctionCall",
																"src": "5472:10:4"
															},
															"nativeSrc": "5469:36:4",
															"nodeType": "YulIf",
															"src": "5469:36:4"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5386:125:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5417:1:4",
														"nodeType": "YulTypedName",
														"src": "5417:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5420:1:4",
														"nodeType": "YulTypedName",
														"src": "5420:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5426:3:4",
														"nodeType": "YulTypedName",
														"src": "5426:3:4",
														"type": ""
													}
												],
												"src": "5386:125:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_uint64__to_t_uint256_t_address_t_uint64__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), and(value2, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_6be4648f1cbdd4ad144a891ed8126b3fbd155bb5160130ead8b7dd53741d04fb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Last game is still running!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint64__to_t_uint256_t_uint256_t_uint64__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_2f3d24c2b0b779cda737103feb7342650c0519e7617aba5c0c9d5cae191dbedd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Bid amount should be greater tha\")\n        mstore(add(headStart, 96), \"n zero!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4cfa8905255b6a91c075f72e388cefbf94d53fe7f5658a1c78a1b88470cc018f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"Bid amount should be greater tha\")\n        mstore(add(headStart, 96), \"n last bid amount!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e0ac64d64e096a8e0fe140ce12c154a30c281323fa269566ccce5788e6f7253d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Game over wait for new game!\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint128(value) -> ret\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffff\n        let value_1 := and(value, _1)\n        if eq(value_1, _1) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint64__to_t_uint256_t_uint64__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffff))\n    }\n    function checked_add_t_uint64(x, y) -> sum\n    {\n        let _1 := 0xffffffffffffffff\n        sum := add(and(x, _1), and(y, _1))\n        if gt(sum, _1) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_13cbd6cd63292023c9c4f6c179a19b06f21ee11c3198ccc79c54de96059b6cda__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Last game is still waiting for r\")\n        mstore(add(headStart, 96), \"esult!\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100aa575f3560e01c80638da5cb5b116100635780638da5cb5b1461020c57806391f901571461023c578063d57bde791461025b578063e14891911461027e578063ecfc7ecc14610293578063f2fde38b1461029b576100b9565b806303f69354146100c15780634423c5f1146100fd57806344d9bc5f14610176578063715018a6146101b4578063722fed7e146101c85780638574c296146101f8576100b9565b366100b9576100b76102ba565b005b6100b76102ba565b3480156100cc575f80fd5b506003546100e0906001600160801b031681565b6040516001600160801b0390911681526020015b60405180910390f35b348015610108575f80fd5b5061014a61011736600461092b565b60066020525f9081526040902080546001909101546001600160a01b03811690600160a01b90046001600160401b031683565b604080519384526001600160a01b0390921660208401526001600160401b0316908201526060016100f4565b348015610181575f80fd5b5060035461019c90600160801b90046001600160401b031681565b6040516001600160401b0390911681526020016100f4565b3480156101bf575f80fd5b506100b76102f4565b3480156101d3575f80fd5b506005546101e890600160a01b900460ff1681565b60405190151581526020016100f4565b348015610203575f80fd5b506100b7610307565b348015610217575f80fd5b505f546001600160a01b03165b6040516001600160a01b0390911681526020016100f4565b348015610247575f80fd5b50600554610224906001600160a01b031681565b348015610266575f80fd5b5061027060045481565b6040519081526020016100f4565b348015610289575f80fd5b5061027060025481565b6100b761043e565b3480156102a6575f80fd5b506100b76102b5366004610942565b61072d565b5f80546040516001600160a01b03909116913480156108fc02929091818181858888f193505050501580156102f1573d5f803e3d5ffd5b50565b6102fc610767565b6103055f610793565b565b61030f610767565b60035442600160801b9091046001600160401b0316106103765760405162461bcd60e51b815260206004820152601b60248201527f4c6173742067616d65206973207374696c6c2072756e6e696e6721000000000060448201526064015b60405180910390fd5b6005805460ff60a01b1981169091556001600160a01b031615610436576005546040513031916001600160a01b03169082156108fc029083905f818181858888f193505050501580156103cb573d5f803e3d5ffd5b506005546003546004546040805191825260208201859052426001600160401b031682820152516001600160a01b03909316926001600160801b03909216917fe900abebb29da21b2ce54f9bf92ace3e1f761a0a9a918473570dd7166057bc1f9181900360600190a3505b6103056107e2565b610446610901565b5f34116104a55760405162461bcd60e51b815260206004820152602760248201527f42696420616d6f756e742073686f756c642062652067726561746572207468616044820152666e207a65726f2160c81b606482015260840161036d565b60045434116105115760405162461bcd60e51b815260206004820152603260248201527f42696420616d6f756e742073686f756c642062652067726561746572207468616044820152716e206c6173742062696420616d6f756e742160701b606482015260840161036d565b60035442600160801b9091046001600160401b0316116105735760405162461bcd60e51b815260206004820152601c60248201527f47616d65206f766572207761697420666f72206e65772067616d652100000000604482015260640161036d565b600380546001600160801b0316905f61058b83610983565b82546101009290920a6001600160801b038181021990931691831602179091556003805482165f90815260066020908152604080832034908190558454861684528184206001908101805467ffffffffffffffff60a01b1916600160a01b426001600160401b03169081029190911790915586548816865294839020018054336001600160a01b031990911681179091559454825191825292810193909352929450909216917f042ced85334596236356fb01034b15f35a1abbc3c7c51ba1b8d3ad152bfeda79910160405180910390a360035461067b90600160801b90046001600160401b03166102586109a8565b600380546001600160401b0392909216600160801b0267ffffffffffffffff60801b19909216919091179055346004819055600580546001600160a01b031916331790556002545f916064916106d0916109cf565b6106da91906109ec565b90506106ed5f546001600160a01b031690565b6001600160a01b03166108fc8290811502906040515f60405180830381858888f19350505050158015610722573d5f803e3d5ffd5b505061030560018055565b610735610767565b6001600160a01b03811661075e57604051631e4fbdf760e01b81525f600482015260240161036d565b6102f181610793565b5f546001600160a01b031633146103055760405163118cdaa760e01b815233600482015260240161036d565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60035442600160801b9091046001600160401b0316106108445760405162461bcd60e51b815260206004820152601b60248201527f4c6173742067616d65206973207374696c6c2072756e6e696e67210000000000604482015260640161036d565b600554600160a01b900460ff16156108ad5760405162461bcd60e51b815260206004820152602660248201527f4c6173742067616d65206973207374696c6c2077616974696e6720666f7220726044820152656573756c742160d01b606482015260840161036d565b6108b942610e10610a0b565b600380546001600160401b0392909216600160801b0267ffffffffffffffff60801b19909216919091179055600580546001600160a81b031916600160a01b1790555f600455565b60026001540361092457604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b5f6020828403121561093b575f80fd5b5035919050565b5f60208284031215610952575f80fd5b81356001600160a01b0381168114610968575f80fd5b9392505050565b634e487b7160e01b5f52601160045260245ffd5b5f6001600160801b0380831681810361099e5761099e61096f565b6001019392505050565b6001600160401b038181168382160190808211156109c8576109c861096f565b5092915050565b80820281158282048414176109e6576109e661096f565b92915050565b5f82610a0657634e487b7160e01b5f52601260045260245ffd5b500490565b808201808211156109e6576109e661096f56fea26469706673582212201bdc321e2fc4fdc2a2b95ce99dd370a0b25eab9d37baa73ebca1ceda6ca9127664736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xAA JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x91F90157 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xD57BDE79 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0xE1489191 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0xECFC7ECC EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x29B JUMPI PUSH2 0xB9 JUMP JUMPDEST DUP1 PUSH4 0x3F69354 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x4423C5F1 EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x44D9BC5F EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x722FED7E EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x8574C296 EQ PUSH2 0x1F8 JUMPI PUSH2 0xB9 JUMP JUMPDEST CALLDATASIZE PUSH2 0xB9 JUMPI PUSH2 0xB7 PUSH2 0x2BA JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB7 PUSH2 0x2BA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0xE0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x108 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14A PUSH2 0x117 CALLDATASIZE PUSH1 0x4 PUSH2 0x92B JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0xF4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x181 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x19C SWAP1 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB7 PUSH2 0x2F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x1E8 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x203 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB7 PUSH2 0x307 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x217 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x247 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x224 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x266 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x270 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x289 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x270 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xB7 PUSH2 0x43E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB7 PUSH2 0x2B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x942 JUMP JUMPDEST PUSH2 0x72D JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP3 SWAP1 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2F1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2FC PUSH2 0x767 JUMP JUMPDEST PUSH2 0x305 PUSH0 PUSH2 0x793 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x30F PUSH2 0x767 JUMP JUMPDEST PUSH1 0x3 SLOAD TIMESTAMP PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND LT PUSH2 0x376 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C6173742067616D65206973207374696C6C2072756E6E696E67210000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x436 JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD ADDRESS BALANCE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3CB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP6 SWAP1 MSTORE TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP3 DUP3 ADD MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH32 0xE900ABEBB29DA21B2CE54F9BF92ACE3E1F761A0A9A918473570DD7166057BC1F SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG3 POP JUMPDEST PUSH2 0x305 PUSH2 0x7E2 JUMP JUMPDEST PUSH2 0x446 PUSH2 0x901 JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x4A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42696420616D6F756E742073686F756C64206265206772656174657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x6E207A65726F21 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x36D JUMP JUMPDEST PUSH1 0x4 SLOAD CALLVALUE GT PUSH2 0x511 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42696420616D6F756E742073686F756C64206265206772656174657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x6E206C6173742062696420616D6F756E7421 PUSH1 0x70 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x36D JUMP JUMPDEST PUSH1 0x3 SLOAD TIMESTAMP PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT PUSH2 0x573 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x47616D65206F766572207761697420666F72206E65772067616D652100000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x36D JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 PUSH0 PUSH2 0x58B DUP4 PUSH2 0x983 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x100 SWAP3 SWAP1 SWAP3 EXP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 DUP2 MUL NOT SWAP1 SWAP4 AND SWAP2 DUP4 AND MUL OR SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP1 SLOAD DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLVALUE SWAP1 DUP2 SWAP1 SSTORE DUP5 SLOAD DUP7 AND DUP5 MSTORE DUP2 DUP5 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE DUP7 SLOAD DUP9 AND DUP7 MSTORE SWAP5 DUP4 SWAP1 KECCAK256 ADD DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE SWAP5 SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE SWAP3 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP3 SWAP5 POP SWAP1 SWAP3 AND SWAP2 PUSH32 0x42CED85334596236356FB01034B15F35A1ABBC3C7C51BA1B8D3AD152BFEDA79 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x3 SLOAD PUSH2 0x67B SWAP1 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x258 PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x80 SHL MUL PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE CALLVALUE PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH0 SWAP2 PUSH1 0x64 SWAP2 PUSH2 0x6D0 SWAP2 PUSH2 0x9CF JUMP JUMPDEST PUSH2 0x6DA SWAP2 SWAP1 PUSH2 0x9EC JUMP JUMPDEST SWAP1 POP PUSH2 0x6ED PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x722 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH2 0x305 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH2 0x735 PUSH2 0x767 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x75E JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x36D JUMP JUMPDEST PUSH2 0x2F1 DUP2 PUSH2 0x793 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x36D JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD TIMESTAMP PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND LT PUSH2 0x844 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C6173742067616D65206973207374696C6C2072756E6E696E67210000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x36D JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x8AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C6173742067616D65206973207374696C6C2077616974696E6720666F722072 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x6573756C7421 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x36D JUMP JUMPDEST PUSH2 0x8B9 TIMESTAMP PUSH2 0xE10 PUSH2 0xA0B JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x80 SHL MUL PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH0 PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x924 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x93B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x952 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x968 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP4 AND DUP2 DUP2 SUB PUSH2 0x99E JUMPI PUSH2 0x99E PUSH2 0x96F JUMP JUMPDEST PUSH1 0x1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x9C8 JUMPI PUSH2 0x9C8 PUSH2 0x96F JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x9E6 JUMPI PUSH2 0x9E6 PUSH2 0x96F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xA06 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x9E6 JUMPI PUSH2 0x9E6 PUSH2 0x96F JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL 0xDC ORIGIN 0x1E 0x2F 0xC4 REVERT 0xC2 LOG2 0xB9 TLOAD 0xE9 SWAP14 0xD3 PUSH17 0xA0B25EAB9D37BAA73EBCA1CEDA6CA91276 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "313:3314:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3523:22;:20;:22::i;:::-;313:3314;;3596:22;:20;:22::i;399:29::-;;;;;;;;;;-1:-1:-1;399:29:3;;;;-1:-1:-1;;;;;399:29:3;;;;;;-1:-1:-1;;;;;178:47:4;;;160:66;;148:2;133:18;399:29:3;;;;;;;;652:32;;;;;;;;;;-1:-1:-1;652:32:3;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;652:32:3;;;-1:-1:-1;;;652:32:3;;-1:-1:-1;;;;;652:32:3;;;;;;;622:25:4;;;-1:-1:-1;;;;;683:32:4;;;678:2;663:18;;656:60;-1:-1:-1;;;;;752:31:4;732:18;;;725:59;610:2;595:18;652:32:3;422:368:4;434:25:3;;;;;;;;;;-1:-1:-1;434:25:3;;;;-1:-1:-1;;;434:25:3;;-1:-1:-1;;;;;434:25:3;;;;;;-1:-1:-1;;;;;957:31:4;;;939:50;;927:2;912:18;434:25:3;795:200:4;2293:101:0;;;;;;;;;;;;;:::i;527:30:3:-;;;;;;;;;;-1:-1:-1;527:30:3;;;;-1:-1:-1;;;527:30:3;;;;;;;;;1165:14:4;;1158:22;1140:41;;1128:2;1113:18;527:30:3;1000:187:4;2595:721:3;;;;;;;;;;;;;:::i;1638:85:0:-;;;;;;;;;;-1:-1:-1;1684:7:0;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;;-1:-1:-1;;;;;1356:32:4;;;1338:51;;1326:2;1311:18;1638:85:0;1192:203:4;493:28:3;;;;;;;;;;-1:-1:-1;493:28:3;;;;-1:-1:-1;;;;;493:28:3;;;465:22;;;;;;;;;;;;;;;;;;;1546:25:4;;;1534:2;1519:18;465:22:3;1400:177:4;367:26:3;;;;;;;;;;;;;;;;1502:1028;;;:::i;2543:215:0:-;;;;;;;;;;-1:-1:-1;2543:215:0;;;;;:::i;:::-;;:::i;3387:93:3:-;1684:7:0;1710:6;;3437:36:3;;-1:-1:-1;;;;;1710:6:0;;;;3463:9:3;3437:36;;;;;3463:9;;3437:36;1684:7:0;3437:36:3;3463:9;1710:6:0;3437:36:3;;;;;;;;;;;;;;;;;;;;;3387:93::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2595:721:3:-;1531:13:0;:11;:13::i;:::-;2655:11:3::1;::::0;2669:15:::1;-1:-1:-1::0;;;2655:11:3;;::::1;-1:-1:-1::0;;;;;2655:11:3::1;:29;2647:69;;;::::0;-1:-1:-1;;;2647:69:3;;2075:2:4;2647:69:3::1;::::0;::::1;2057:21:4::0;2114:2;2094:18;;;2087:30;2153:29;2133:18;;;2126:57;2200:18;;2647:69:3::1;;;;;;;;;2726:10;:18:::0;;-1:-1:-1;;;;2726:18:3;::::1;::::0;;;-1:-1:-1;;;;;2811:13:3;:27;2807:453:::1;;3025:13;::::0;3017:39:::1;::::0;2980:9:::1;2972:18;::::0;-1:-1:-1;;;;;3025:13:3::1;::::0;3017:39;::::1;;;::::0;2972:18;;2906:11:::1;3017:39:::0;2906:11;3017:39;2972:18;3025:13;3017:39;::::1;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;3222:13:3::1;::::0;3101:10:::1;::::0;3129::::1;::::0;3075:174:::1;::::0;;2429:25:4;;;2485:2;2470:18;;2463:34;;;3188:15:3::1;-1:-1:-1::0;;;;;2533:31:4;2513:18;;;2506:59;3075:174:3;-1:-1:-1;;;;;3222:13:3;;::::1;::::0;-1:-1:-1;;;;;3101:10:3;;::::1;::::0;3075:174:::1;::::0;;;;2417:2:4;3075:174:3;;::::1;2840:420;2807:453;3298:11;:9;:11::i;1502:1028::-:0;2356:21:2;:19;:21::i;:::-;1582:1:3::1;1570:9;:13;1562:65;;;::::0;-1:-1:-1;;;1562:65:3;;2778:2:4;1562:65:3::1;::::0;::::1;2760:21:4::0;2817:2;2797:18;;;2790:30;2856:34;2836:18;;;2829:62;-1:-1:-1;;;2907:18:4;;;2900:37;2954:19;;1562:65:3::1;2576:403:4::0;1562:65:3::1;1670:10;;1658:9;:22;1637:119;;;::::0;-1:-1:-1;;;1637:119:3;;3186:2:4;1637:119:3::1;::::0;::::1;3168:21:4::0;3225:2;3205:18;;;3198:30;3264:34;3244:18;;;3237:62;-1:-1:-1;;;3315:18:4;;;3308:48;3373:19;;1637:119:3::1;2984:414:4::0;1637:119:3::1;1774:11;::::0;1788:15:::1;-1:-1:-1::0;;;1774:11:3;;::::1;-1:-1:-1::0;;;;;1774:11:3::1;:29;1766:70;;;::::0;-1:-1:-1;;;1766:70:3;;3605:2:4;1766:70:3::1;::::0;::::1;3587:21:4::0;3644:2;3624:18;;;3617:30;3683;3663:18;;;3656:58;3731:18;;1766:70:3::1;3403:352:4::0;1766:70:3::1;1900:10;:12:::0;;-1:-1:-1;;;;;1900:12:3::1;::::0;:10:::1;:12;::::0;::::1;:::i;:::-;::::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;;;1900:12:3;;::::1;;::::0;;::::1;::::0;;::::1;;;::::0;;;1927:10:::1;::::0;;;::::1;-1:-1:-1::0;1922:16:3;;;:4:::1;:16;::::0;;;;;;;1948:9:::1;1922:35:::0;;;;1972:10;;;::::1;1967:16:::0;;;;;-1:-1:-1;1967:21:3;;::::1;:47:::0;;-1:-1:-1;;;;1967:47:3::1;-1:-1:-1::0;;;1998:15:3::1;-1:-1:-1::0;;;;;1967:47:3::1;::::0;;::::1;::::0;;;::::1;::::0;;;2029:10;;;::::1;2024:16:::0;;;;;;:21:::1;:34:::0;;2048:10:::1;-1:-1:-1::0;;;;;;2024:34:3;;::::1;::::0;::::1;::::0;;;2096:10;;2074:126;;4295:25:4;;;4336:18;;;4329:59;;;;2048:10:3;;-1:-1:-1;2096:10:3;;::::1;::::0;2074:126:::1;::::0;4268:18:4;2074:126:3::1;;;;;;;2263:11;::::0;:17:::1;::::0;-1:-1:-1;;;2263:11:3;::::1;-1:-1:-1::0;;;;;2263:11:3::1;2277:3;2263:17;:::i;:::-;2249:11;:31:::0;;-1:-1:-1;;;;;2249:31:3;;;::::1;-1:-1:-1::0;;;2249:31:3::1;-1:-1:-1::0;;;;2249:31:3;;::::1;::::0;;;::::1;::::0;;2329:9:::1;2316:10;:22:::0;;;2348:13:::1;:26:::0;;-1:-1:-1;;;;;;2348:26:3::1;2364:10;2348:26;::::0;;2454:10:::1;::::0;-1:-1:-1;;2468:3:3::1;::::0;2442:22:::1;::::0;::::1;:::i;:::-;2441:30;;;;:::i;:::-;2418:53;;2489:7;1684::0::0;1710:6;-1:-1:-1;;;;;1710:6:0;;1638:85;2489:7:3::1;-1:-1:-1::0;;;;;2481:25:3::1;:42;2507:15;2481:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;1552:978;2398:20:2::0;1713:1;2924:21;;2744:208;2543:215:0;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;1338:51:4::0;1311:18;;2672:31:0::1;1192:203:4::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;1796:162::-:0;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:1;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:1;1901:40:0;;;1338:51:4;1311:18;;1901:40:0;1192:203:4;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;1083:376:3:-;1130:11;;1144:15;-1:-1:-1;;;1130:11:3;;;-1:-1:-1;;;;;1130:11:3;:29;1122:69;;;;-1:-1:-1;;;1122:69:3;;2075:2:4;1122:69:3;;;2057:21:4;2114:2;2094:18;;;2087:30;2153:29;2133:18;;;2126:57;2200:18;;1122:69:3;1873:351:4;1122:69:3;1210:10;;-1:-1:-1;;;1210:10:3;;;;1209:11;1201:62;;;;-1:-1:-1;;;1201:62:3;;5181:2:4;1201:62:3;;;5163:21:4;5220:2;5200:18;;;5193:30;5259:34;5239:18;;;5232:62;-1:-1:-1;;;5310:18:4;;;5303:36;5356:19;;1201:62:3;4979:402:4;1201:62:3;1295:22;:15;1313:4;1295:22;:::i;:::-;1274:11;:44;;-1:-1:-1;;;;;1274:44:3;;;;-1:-1:-1;;;1274:44:3;-1:-1:-1;;;;1274:44:3;;;;;;;;;1342:10;:17;;-1:-1:-1;;;;;;1402:26:3;-1:-1:-1;;;1402:26:3;;;-1:-1:-1;1438:10:3;:14;1083:376::o;2431:307:2:-;1755:1;2558:7;;:18;2554:86;;2599:30;;-1:-1:-1;;;2599:30:2;;;;;;;;;;;2554:86;1755:1;2714:7;:17;2431:307::o;237:180:4:-;296:6;349:2;337:9;328:7;324:23;320:32;317:52;;;365:1;362;355:12;317:52;-1:-1:-1;388:23:4;;237:180;-1:-1:-1;237:180:4:o;1582:286::-;1641:6;1694:2;1682:9;1673:7;1669:23;1665:32;1662:52;;;1710:1;1707;1700:12;1662:52;1736:23;;-1:-1:-1;;;;;1788:31:4;;1778:42;;1768:70;;1834:1;1831;1824:12;1768:70;1857:5;1582:286;-1:-1:-1;;;1582:286:4:o;3760:127::-;3821:10;3816:3;3812:20;3809:1;3802:31;3852:4;3849:1;3842:15;3876:4;3873:1;3866:15;3892:226;3931:3;-1:-1:-1;;;;;4028:2:4;4021:5;4017:14;4055:2;4046:7;4043:15;4040:41;;4061:18;;:::i;:::-;4110:1;4097:15;;3892:226;-1:-1:-1;;;3892:226:4:o;4399:180::-;-1:-1:-1;;;;;4504:10:4;;;4516;;;4500:27;;4539:11;;;4536:37;;;4553:18;;:::i;:::-;4536:37;4399:180;;;;:::o;4584:168::-;4657:9;;;4688;;4705:15;;;4699:22;;4685:37;4675:71;;4726:18;;:::i;:::-;4584:168;;;;:::o;4757:217::-;4797:1;4823;4813:132;;4867:10;4862:3;4858:20;4855:1;4848:31;4902:4;4899:1;4892:15;4930:4;4927:1;4920:15;4813:132;-1:-1:-1;4959:9:4;;4757:217::o;5386:125::-;5451:9;;;5472:10;;;5469:36;;;5485:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "528800",
								"executionCost": "177034",
								"totalCost": "705834"
							},
							"external": {
								"": "infinite",
								"bidCounter()": "2326",
								"bids(uint256)": "4707",
								"commission()": "2360",
								"declareResult()": "infinite",
								"gameEndTime()": "2398",
								"gameStatus()": "2415",
								"highestBid()": "2338",
								"highestBidder()": "2358",
								"owner()": "2318",
								"placeBid()": "infinite",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "28404"
							},
							"internal": {
								"fundsTransferToOwner()": "infinite",
								"startGame()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 313,
									"end": 3627,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 313,
									"end": 3627,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 313,
									"end": 3627,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 392,
									"end": 393,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 367,
									"end": 393,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 367,
									"end": 393,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 367,
									"end": 393,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 367,
									"end": 393,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 399,
									"end": 428,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 399,
									"end": 428,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 399,
									"end": 428,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "80"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 399,
									"end": 428,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 399,
									"end": 428,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 399,
									"end": 428,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 527,
									"end": 557,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 527,
									"end": 557,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 527,
									"end": 557,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 527,
									"end": 557,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 527,
									"end": 557,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 977,
									"end": 1039,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 977,
									"end": 1039,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 977,
									"end": 1039,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 977,
									"end": 1039,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 977,
									"end": 1039,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 977,
									"end": 1039,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 977,
									"end": 1039,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 977,
									"end": 1039,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 977,
									"end": 1039,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 977,
									"end": 1039,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 999,
									"end": 1009,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 999,
									"end": 1009,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 160,
									"end": 211,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 133,
									"end": 151,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 133,
									"end": 151,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1713,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1917,
									"end": 1938,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1917,
									"end": 1938,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1021,
									"end": 1032,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1021,
									"end": 1030,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1021,
									"end": 1032,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1021,
									"end": 1032,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1021,
									"end": 1032,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 313,
									"end": 3627,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 313,
									"end": 3627,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1083,
									"end": 1459,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1083,
									"end": 1459,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1130,
									"end": 1141,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1130,
									"end": 1141,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1144,
									"end": 1159,
									"name": "TIMESTAMP",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "80"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1130,
									"end": 1141,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1130,
									"end": 1141,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1130,
									"end": 1141,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1130,
									"end": 1141,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1130,
									"end": 1159,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 1122,
									"end": 1191,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 1122,
									"end": 1191,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1122,
									"end": 1191,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1122,
									"end": 1191,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1122,
									"end": 1191,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1122,
									"end": 1191,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 424,
									"end": 426,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1122,
									"end": 1191,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1122,
									"end": 1191,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1122,
									"end": 1191,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 406,
									"end": 427,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 463,
									"end": 465,
									"name": "PUSH",
									"source": 4,
									"value": "1B"
								},
								{
									"begin": 443,
									"end": 461,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 443,
									"end": 461,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 443,
									"end": 461,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 436,
									"end": 466,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 502,
									"end": 531,
									"name": "PUSH",
									"source": 4,
									"value": "4C6173742067616D65206973207374696C6C2072756E6E696E67210000000000"
								},
								{
									"begin": 482,
									"end": 500,
									"name": "PUSH",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 482,
									"end": 500,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 500,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 475,
									"end": 532,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 549,
									"end": 567,
									"name": "PUSH",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 549,
									"end": 567,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1122,
									"end": 1191,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 222,
									"end": 573,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1122,
									"end": 1191,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 1122,
									"end": 1191,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1210,
									"end": 1220,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 1210,
									"end": 1220,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1210,
									"end": 1220,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1210,
									"end": 1220,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 1210,
									"end": 1220,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 1210,
									"end": 1220,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1209,
									"end": 1220,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1201,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 1201,
									"end": 1263,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1201,
									"end": 1263,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1201,
									"end": 1263,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1201,
									"end": 1263,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1201,
									"end": 1263,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 780,
									"end": 782,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1201,
									"end": 1263,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1201,
									"end": 1263,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1201,
									"end": 1263,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 762,
									"end": 783,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 819,
									"end": 821,
									"name": "PUSH",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 799,
									"end": 817,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 799,
									"end": 817,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 799,
									"end": 817,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 792,
									"end": 822,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 858,
									"end": 892,
									"name": "PUSH",
									"source": 4,
									"value": "4C6173742067616D65206973207374696C6C2077616974696E6720666F722072"
								},
								{
									"begin": 838,
									"end": 856,
									"name": "PUSH",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 838,
									"end": 856,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 838,
									"end": 856,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 831,
									"end": 893,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "6573756C7421"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 909,
									"end": 927,
									"name": "PUSH",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 909,
									"end": 927,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 909,
									"end": 927,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 902,
									"end": 938,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 955,
									"end": 974,
									"name": "PUSH",
									"source": 4,
									"value": "84"
								},
								{
									"begin": 955,
									"end": 974,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1201,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 578,
									"end": 980,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1201,
									"end": 1263,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 1201,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1295,
									"end": 1317,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 1295,
									"end": 1310,
									"name": "TIMESTAMP",
									"source": 3
								},
								{
									"begin": 1313,
									"end": 1317,
									"name": "PUSH",
									"source": 3,
									"value": "E10"
								},
								{
									"begin": 1295,
									"end": 1317,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 1295,
									"end": 1317,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1295,
									"end": 1317,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 1295,
									"end": 1317,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1274,
									"end": 1285,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1274,
									"end": 1318,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1274,
									"end": 1318,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1274,
									"end": 1318,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1274,
									"end": 1318,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1274,
									"end": 1318,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1274,
									"end": 1318,
									"name": "AND",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "80"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1274,
									"end": 1318,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "80"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1274,
									"end": 1318,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1274,
									"end": 1318,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1274,
									"end": 1318,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1274,
									"end": 1318,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1274,
									"end": 1318,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1274,
									"end": 1318,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1274,
									"end": 1318,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1274,
									"end": 1318,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1274,
									"end": 1318,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1342,
									"end": 1352,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 1342,
									"end": 1359,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1342,
									"end": 1359,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1402,
									"end": 1428,
									"name": "AND",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1402,
									"end": 1428,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1402,
									"end": 1428,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1402,
									"end": 1428,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1438,
									"end": 1448,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1438,
									"end": 1452,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1083,
									"end": 1459,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 985,
									"end": 1207,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 985,
									"end": 1207,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1050,
									"end": 1059,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1050,
									"end": 1059,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1050,
									"end": 1059,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1071,
									"end": 1081,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1071,
									"end": 1081,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1071,
									"end": 1081,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1068,
									"end": 1201,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1068,
									"end": 1201,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 1068,
									"end": 1201,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1123,
									"end": 1133,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B71"
								},
								{
									"begin": 1118,
									"end": 1121,
									"name": "PUSH",
									"source": 4,
									"value": "E0"
								},
								{
									"begin": 1114,
									"end": 1134,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 1111,
									"end": 1112,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1104,
									"end": 1135,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1158,
									"end": 1162,
									"name": "PUSH",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1155,
									"end": 1156,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1148,
									"end": 1163,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1186,
									"end": 1190,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 1183,
									"end": 1184,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1176,
									"end": 1191,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1068,
									"end": 1201,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 1068,
									"end": 1201,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 985,
									"end": 1207,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 985,
									"end": 1207,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 985,
									"end": 1207,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 985,
									"end": 1207,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 985,
									"end": 1207,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 985,
									"end": 1207,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 985,
									"end": 1207,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 313,
									"end": 3627,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 313,
									"end": 3627,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 313,
									"end": 3627,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 313,
									"end": 3627,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 3627,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 313,
									"end": 3627,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 3627,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201bdc321e2fc4fdc2a2b95ce99dd370a0b25eab9d37baa73ebca1ceda6ca9127664736f6c63430008190033",
									".code": [
										{
											"begin": 313,
											"end": 3627,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "PUSH",
											"source": 3,
											"value": "91F90157"
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "PUSH",
											"source": 3,
											"value": "D57BDE79"
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "PUSH",
											"source": 3,
											"value": "E1489191"
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "PUSH",
											"source": 3,
											"value": "ECFC7ECC"
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "PUSH",
											"source": 3,
											"value": "3F69354"
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "PUSH",
											"source": 3,
											"value": "4423C5F1"
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "PUSH",
											"source": 3,
											"value": "44D9BC5F"
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "PUSH",
											"source": 3,
											"value": "722FED7E"
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "PUSH",
											"source": 3,
											"value": "8574C296"
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3523,
											"end": 3545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 3523,
											"end": 3543,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 3523,
											"end": 3545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3523,
											"end": 3545,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 3523,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 313,
											"end": 3627,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3596,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 3596,
											"end": 3618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 399,
											"end": 428,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 399,
											"end": 428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 399,
											"end": 428,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 399,
											"end": 428,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 399,
											"end": 428,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 399,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 399,
											"end": 428,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 399,
											"end": 428,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 428,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 399,
											"end": 428,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 399,
											"end": 428,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 399,
											"end": 428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 399,
											"end": 428,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 399,
											"end": 428,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 399,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 399,
											"end": 428,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 399,
											"end": 428,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 399,
											"end": 428,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 399,
											"end": 428,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 399,
											"end": 428,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 399,
											"end": 428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 399,
											"end": 428,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 399,
											"end": 428,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 225,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 178,
											"end": 225,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 178,
											"end": 225,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 160,
											"end": 226,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 160,
											"end": 226,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 399,
											"end": 428,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 399,
											"end": 428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 399,
											"end": 428,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 399,
											"end": 428,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 399,
											"end": 428,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 399,
											"end": 428,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 399,
											"end": 428,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 399,
											"end": 428,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 399,
											"end": 428,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 652,
											"end": 684,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 652,
											"end": 684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 652,
											"end": 684,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 652,
											"end": 684,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 652,
											"end": 684,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 652,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 652,
											"end": 684,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 652,
											"end": 684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 652,
											"end": 684,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 652,
											"end": 684,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 652,
											"end": 684,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 652,
											"end": 684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 652,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 652,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 652,
											"end": 684,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 652,
											"end": 684,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 652,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 652,
											"end": 684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 652,
											"end": 684,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 652,
											"end": 684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 652,
											"end": 684,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 652,
											"end": 684,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 652,
											"end": 684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 652,
											"end": 684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 652,
											"end": 684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 652,
											"end": 684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 652,
											"end": 684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 652,
											"end": 684,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 652,
											"end": 684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 652,
											"end": 684,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 652,
											"end": 684,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 652,
											"end": 684,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 652,
											"end": 684,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 652,
											"end": 684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 652,
											"end": 684,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 652,
											"end": 684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 652,
											"end": 684,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 652,
											"end": 684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 652,
											"end": 684,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 652,
											"end": 684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 652,
											"end": 684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 652,
											"end": 684,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 652,
											"end": 684,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 652,
											"end": 684,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 652,
											"end": 684,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 652,
											"end": 684,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 652,
											"end": 684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 652,
											"end": 684,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 652,
											"end": 684,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 652,
											"end": 684,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 622,
											"end": 647,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 622,
											"end": 647,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 622,
											"end": 647,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 683,
											"end": 715,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 683,
											"end": 715,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 683,
											"end": 715,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 678,
											"end": 680,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 663,
											"end": 681,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 663,
											"end": 681,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 656,
											"end": 716,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 752,
											"end": 783,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 732,
											"end": 750,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 732,
											"end": 750,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 732,
											"end": 750,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 725,
											"end": 784,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 610,
											"end": 612,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 652,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 422,
											"end": 790,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 434,
											"end": 459,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 434,
											"end": 459,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 434,
											"end": 459,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 434,
											"end": 459,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 434,
											"end": 459,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 434,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 434,
											"end": 459,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 434,
											"end": 459,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 434,
											"end": 459,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 434,
											"end": 459,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 434,
											"end": 459,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 434,
											"end": 459,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 434,
											"end": 459,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 434,
											"end": 459,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 434,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 434,
											"end": 459,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 434,
											"end": 459,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 434,
											"end": 459,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 434,
											"end": 459,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 434,
											"end": 459,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 434,
											"end": 459,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 434,
											"end": 459,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 434,
											"end": 459,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 434,
											"end": 459,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 434,
											"end": 459,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 957,
											"end": 988,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 957,
											"end": 988,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 957,
											"end": 988,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 939,
											"end": 989,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 939,
											"end": 989,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 927,
											"end": 929,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 912,
											"end": 930,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 434,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 795,
											"end": 995,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 527,
											"end": 557,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 527,
											"end": 557,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 527,
											"end": 557,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 527,
											"end": 557,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 527,
											"end": 557,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 527,
											"end": 557,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 527,
											"end": 557,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 527,
											"end": 557,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 527,
											"end": 557,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 527,
											"end": 557,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 527,
											"end": 557,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 527,
											"end": 557,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 527,
											"end": 557,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 527,
											"end": 557,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 527,
											"end": 557,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 527,
											"end": 557,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 527,
											"end": 557,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 527,
											"end": 557,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 527,
											"end": 557,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 527,
											"end": 557,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 527,
											"end": 557,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 527,
											"end": 557,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 527,
											"end": 557,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 527,
											"end": 557,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 527,
											"end": 557,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 527,
											"end": 557,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1165,
											"end": 1179,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1179,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1180,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1140,
											"end": 1181,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1140,
											"end": 1181,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1130,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1113,
											"end": 1131,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 527,
											"end": 557,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1000,
											"end": 1187,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 3316,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 2595,
											"end": 3316,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 3316,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 3316,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 3316,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 3316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2595,
											"end": 3316,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 3316,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 3316,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 3316,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 3316,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2595,
											"end": 3316,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 3316,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 3316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 2595,
											"end": 3316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2595,
											"end": 3316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1326,
											"end": 1328,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1311,
											"end": 1329,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1192,
											"end": 1395,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 493,
											"end": 521,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 493,
											"end": 521,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 493,
											"end": 521,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 493,
											"end": 521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 493,
											"end": 521,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 493,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 493,
											"end": 521,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 493,
											"end": 521,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 493,
											"end": 521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 493,
											"end": 521,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 493,
											"end": 521,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 493,
											"end": 521,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 493,
											"end": 521,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 493,
											"end": 521,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 493,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 493,
											"end": 521,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 493,
											"end": 521,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 493,
											"end": 521,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 493,
											"end": 521,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 465,
											"end": 487,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 465,
											"end": 487,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 465,
											"end": 487,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 465,
											"end": 487,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 465,
											"end": 487,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 465,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 465,
											"end": 487,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 465,
											"end": 487,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 465,
											"end": 487,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 465,
											"end": 487,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 465,
											"end": 487,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 465,
											"end": 487,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 465,
											"end": 487,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 465,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 465,
											"end": 487,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 465,
											"end": 487,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 465,
											"end": 487,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 465,
											"end": 487,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 465,
											"end": 487,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 465,
											"end": 487,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 465,
											"end": 487,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 487,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1546,
											"end": 1571,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1546,
											"end": 1571,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1546,
											"end": 1571,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1534,
											"end": 1536,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1519,
											"end": 1537,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 465,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1400,
											"end": 1577,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 367,
											"end": 393,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 367,
											"end": 393,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 367,
											"end": 393,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 367,
											"end": 393,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 367,
											"end": 393,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 367,
											"end": 393,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 367,
											"end": 393,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 367,
											"end": 393,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 393,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 367,
											"end": 393,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 367,
											"end": 393,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 367,
											"end": 393,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 367,
											"end": 393,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 367,
											"end": 393,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 367,
											"end": 393,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 367,
											"end": 393,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 367,
											"end": 393,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 367,
											"end": 393,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1502,
											"end": 2530,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1502,
											"end": 2530,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1502,
											"end": 2530,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1502,
											"end": 2530,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1502,
											"end": 2530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3480,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 3387,
											"end": 3480,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3437,
											"end": 3473,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3437,
											"end": 3473,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3463,
											"end": 3472,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3437,
											"end": 3473,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3437,
											"end": 3473,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3437,
											"end": 3473,
											"name": "PUSH",
											"source": 3,
											"value": "8FC"
										},
										{
											"begin": 3437,
											"end": 3473,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3437,
											"end": 3473,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3463,
											"end": 3472,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3463,
											"end": 3472,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3437,
											"end": 3473,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3437,
											"end": 3473,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3463,
											"end": 3472,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3437,
											"end": 3473,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 3437,
											"end": 3473,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 3437,
											"end": 3473,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3437,
											"end": 3473,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3437,
											"end": 3473,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3437,
											"end": 3473,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3437,
											"end": 3473,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3437,
											"end": 3473,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3437,
											"end": 3473,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3437,
											"end": 3473,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3437,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 3437,
											"end": 3473,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3437,
											"end": 3473,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3437,
											"end": 3473,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3437,
											"end": 3473,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3437,
											"end": 3473,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 3437,
											"end": 3473,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3437,
											"end": 3473,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3437,
											"end": 3473,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3437,
											"end": 3473,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 3437,
											"end": 3473,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3437,
											"end": 3473,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3387,
											"end": 3480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 3316,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2595,
											"end": 3316,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2655,
											"end": 2666,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2655,
											"end": 2666,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2669,
											"end": 2684,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2655,
											"end": 2666,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2655,
											"end": 2666,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2655,
											"end": 2666,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2655,
											"end": 2666,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2655,
											"end": 2684,
											"modifierDepth": 1,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2647,
											"end": 2716,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2647,
											"end": 2716,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2647,
											"end": 2716,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2647,
											"end": 2716,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2647,
											"end": 2716,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2647,
											"end": 2716,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2075,
											"end": 2077,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2647,
											"end": 2716,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2647,
											"end": 2716,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2647,
											"end": 2716,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2057,
											"end": 2078,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2114,
											"end": 2116,
											"name": "PUSH",
											"source": 4,
											"value": "1B"
										},
										{
											"begin": 2094,
											"end": 2112,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2094,
											"end": 2112,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2094,
											"end": 2112,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2087,
											"end": 2117,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2153,
											"end": 2182,
											"name": "PUSH",
											"source": 4,
											"value": "4C6173742067616D65206973207374696C6C2072756E6E696E67210000000000"
										},
										{
											"begin": 2133,
											"end": 2151,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2133,
											"end": 2151,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2133,
											"end": 2151,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2126,
											"end": 2183,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2218,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2200,
											"end": 2218,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2647,
											"end": 2716,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2647,
											"end": 2716,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2647,
											"end": 2716,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2647,
											"end": 2716,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2647,
											"end": 2716,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2647,
											"end": 2716,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2647,
											"end": 2716,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2647,
											"end": 2716,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2647,
											"end": 2716,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2647,
											"end": 2716,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2647,
											"end": 2716,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 2736,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2726,
											"end": 2744,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 2744,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2726,
											"end": 2744,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 2744,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 2744,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 2744,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 2744,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2811,
											"end": 2824,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2811,
											"end": 2838,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2807,
											"end": 3260,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2807,
											"end": 3260,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3025,
											"end": 3038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3025,
											"end": 3038,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3017,
											"end": 3056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3017,
											"end": 3056,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2980,
											"end": 2989,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 2972,
											"end": 2990,
											"modifierDepth": 1,
											"name": "BALANCE",
											"source": 3
										},
										{
											"begin": 2972,
											"end": 2990,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3025,
											"end": 3038,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3025,
											"end": 3038,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3017,
											"end": 3056,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3017,
											"end": 3056,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3017,
											"end": 3056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "8FC"
										},
										{
											"begin": 3017,
											"end": 3056,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3017,
											"end": 3056,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2972,
											"end": 2990,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2972,
											"end": 2990,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2906,
											"end": 2917,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3017,
											"end": 3056,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2906,
											"end": 2917,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3017,
											"end": 3056,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2972,
											"end": 2990,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3025,
											"end": 3038,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 3017,
											"end": 3056,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 3017,
											"end": 3056,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 3017,
											"end": 3056,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3017,
											"end": 3056,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3017,
											"end": 3056,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3017,
											"end": 3056,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3017,
											"end": 3056,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3017,
											"end": 3056,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3017,
											"end": 3056,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3017,
											"end": 3056,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3017,
											"end": 3056,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 3017,
											"end": 3056,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3017,
											"end": 3056,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3017,
											"end": 3056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3017,
											"end": 3056,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3017,
											"end": 3056,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 3017,
											"end": 3056,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3017,
											"end": 3056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3017,
											"end": 3056,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3017,
											"end": 3056,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 3017,
											"end": 3056,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3222,
											"end": 3235,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3222,
											"end": 3235,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3101,
											"end": 3111,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3101,
											"end": 3111,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3129,
											"end": 3139,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3129,
											"end": 3139,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3075,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3075,
											"end": 3249,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3075,
											"end": 3249,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2429,
											"end": 2454,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2429,
											"end": 2454,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2429,
											"end": 2454,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2485,
											"end": 2487,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2470,
											"end": 2488,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2470,
											"end": 2488,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2497,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2497,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2497,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3188,
											"end": 3203,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2533,
											"end": 2564,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2531,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2531,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2531,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2506,
											"end": 2565,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3249,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3222,
											"end": 3235,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3222,
											"end": 3235,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3222,
											"end": 3235,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3222,
											"end": 3235,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3101,
											"end": 3111,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3101,
											"end": 3111,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3101,
											"end": 3111,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3101,
											"end": 3111,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3075,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "E900ABEBB29DA21B2CE54F9BF92ACE3E1F761A0A9A918473570DD7166057BC1F"
										},
										{
											"begin": 3075,
											"end": 3249,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3075,
											"end": 3249,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3075,
											"end": 3249,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3075,
											"end": 3249,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2417,
											"end": 2419,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3075,
											"end": 3249,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3075,
											"end": 3249,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3075,
											"end": 3249,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 2840,
											"end": 3260,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2807,
											"end": 3260,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2807,
											"end": 3260,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3298,
											"end": 3309,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3298,
											"end": 3307,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 3298,
											"end": 3309,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1502,
											"end": 2530,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1502,
											"end": 2530,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2356,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2356,
											"end": 2377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1579,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1570,
											"end": 1583,
											"modifierDepth": 1,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1562,
											"end": 1627,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 1562,
											"end": 1627,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1562,
											"end": 1627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1562,
											"end": 1627,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1562,
											"end": 1627,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1562,
											"end": 1627,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2778,
											"end": 2780,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1562,
											"end": 1627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1562,
											"end": 1627,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1562,
											"end": 1627,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2760,
											"end": 2781,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2817,
											"end": 2819,
											"name": "PUSH",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2797,
											"end": 2815,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2797,
											"end": 2815,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2797,
											"end": 2815,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2790,
											"end": 2820,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2856,
											"end": 2890,
											"name": "PUSH",
											"source": 4,
											"value": "42696420616D6F756E742073686F756C64206265206772656174657220746861"
										},
										{
											"begin": 2836,
											"end": 2854,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2836,
											"end": 2854,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2836,
											"end": 2854,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2829,
											"end": 2891,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E207A65726F21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2907,
											"end": 2925,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2907,
											"end": 2925,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2907,
											"end": 2925,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2900,
											"end": 2937,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2954,
											"end": 2973,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2954,
											"end": 2973,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1627,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2576,
											"end": 2979,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1627,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 1562,
											"end": 1627,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1670,
											"end": 1680,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1670,
											"end": 1680,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1658,
											"end": 1667,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1658,
											"end": 1680,
											"modifierDepth": 1,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1756,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 1637,
											"end": 1756,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1637,
											"end": 1756,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1637,
											"end": 1756,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1756,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3186,
											"end": 3188,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1637,
											"end": 1756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1637,
											"end": 1756,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1756,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3168,
											"end": 3189,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3227,
											"name": "PUSH",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 3205,
											"end": 3223,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3205,
											"end": 3223,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3205,
											"end": 3223,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3198,
											"end": 3228,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3264,
											"end": 3298,
											"name": "PUSH",
											"source": 4,
											"value": "42696420616D6F756E742073686F756C64206265206772656174657220746861"
										},
										{
											"begin": 3244,
											"end": 3262,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3244,
											"end": 3262,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3262,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3237,
											"end": 3299,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E206C6173742062696420616D6F756E7421"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3315,
											"end": 3333,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3315,
											"end": 3333,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3333,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3308,
											"end": 3356,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3373,
											"end": 3392,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3373,
											"end": 3392,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1637,
											"end": 1756,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2984,
											"end": 3398,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1637,
											"end": 1756,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 1637,
											"end": 1756,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1774,
											"end": 1785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1774,
											"end": 1785,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1788,
											"end": 1803,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1774,
											"end": 1785,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1774,
											"end": 1785,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1774,
											"end": 1785,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1774,
											"end": 1785,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1774,
											"end": 1803,
											"modifierDepth": 1,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1836,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 1766,
											"end": 1836,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1766,
											"end": 1836,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1766,
											"end": 1836,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1836,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3605,
											"end": 3607,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1766,
											"end": 1836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1766,
											"end": 1836,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1836,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3587,
											"end": 3608,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3644,
											"end": 3646,
											"name": "PUSH",
											"source": 4,
											"value": "1C"
										},
										{
											"begin": 3624,
											"end": 3642,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3624,
											"end": 3642,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3624,
											"end": 3642,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3617,
											"end": 3647,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3683,
											"end": 3713,
											"name": "PUSH",
											"source": 4,
											"value": "47616D65206F766572207761697420666F72206E65772067616D652100000000"
										},
										{
											"begin": 3663,
											"end": 3681,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3663,
											"end": 3681,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3681,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3656,
											"end": 3714,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3731,
											"end": 3749,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3731,
											"end": 3749,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1766,
											"end": 1836,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 3403,
											"end": 3755,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1766,
											"end": 1836,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 1766,
											"end": 1836,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1900,
											"end": 1910,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1900,
											"end": 1912,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1900,
											"end": 1912,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 1912,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1900,
											"end": 1912,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1900,
											"end": 1910,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1900,
											"end": 1912,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1900,
											"end": 1912,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1900,
											"end": 1912,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 1900,
											"end": 1912,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1900,
											"end": 1912,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1900,
											"end": 1912,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1900,
											"end": 1912,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1900,
											"end": 1912,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1900,
											"end": 1912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1900,
											"end": 1912,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1900,
											"end": 1912,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1900,
											"end": 1912,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1900,
											"end": 1912,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 1912,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1900,
											"end": 1912,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1900,
											"end": 1912,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1900,
											"end": 1912,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1900,
											"end": 1912,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1900,
											"end": 1912,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1900,
											"end": 1912,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1900,
											"end": 1912,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1900,
											"end": 1912,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1900,
											"end": 1912,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1900,
											"end": 1912,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1900,
											"end": 1912,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1900,
											"end": 1912,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1900,
											"end": 1912,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1900,
											"end": 1912,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1927,
											"end": 1937,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1927,
											"end": 1937,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1927,
											"end": 1937,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1927,
											"end": 1937,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1927,
											"end": 1937,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1922,
											"end": 1938,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 1938,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 1938,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 1926,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1922,
											"end": 1938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1938,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 1938,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 1938,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 1938,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1922,
											"end": 1938,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 1938,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 1938,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1948,
											"end": 1957,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 1957,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 1957,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 1957,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 1957,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1972,
											"end": 1982,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1972,
											"end": 1982,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1972,
											"end": 1982,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1972,
											"end": 1982,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 1983,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 1983,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 1983,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 1983,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 1983,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 1967,
											"end": 1988,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 1988,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 1988,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 2014,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 2014,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1967,
											"end": 2014,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2013,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1967,
											"end": 2014,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 2014,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 2014,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 2014,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 2014,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 2014,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 2014,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 2014,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 2014,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 2014,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 2014,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2029,
											"end": 2039,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2029,
											"end": 2039,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2029,
											"end": 2039,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 2029,
											"end": 2039,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2024,
											"end": 2040,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2024,
											"end": 2040,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2024,
											"end": 2040,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 2024,
											"end": 2040,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2024,
											"end": 2040,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2024,
											"end": 2040,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2024,
											"end": 2045,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2024,
											"end": 2058,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2024,
											"end": 2058,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2058,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2024,
											"end": 2058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2024,
											"end": 2058,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2024,
											"end": 2058,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2024,
											"end": 2058,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2024,
											"end": 2058,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2024,
											"end": 2058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2024,
											"end": 2058,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2024,
											"end": 2058,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2096,
											"end": 2106,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 2096,
											"end": 2106,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2200,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2200,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4295,
											"end": 4320,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4295,
											"end": 4320,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4295,
											"end": 4320,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4336,
											"end": 4354,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4336,
											"end": 4354,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4336,
											"end": 4354,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4329,
											"end": 4388,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4329,
											"end": 4388,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4329,
											"end": 4388,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4329,
											"end": 4388,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2058,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2058,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2096,
											"end": 2106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2096,
											"end": 2106,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2096,
											"end": 2106,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2096,
											"end": 2106,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "42CED85334596236356FB01034B15F35A1ABBC3C7C51BA1B8D3AD152BFEDA79"
										},
										{
											"begin": 2074,
											"end": 2200,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4268,
											"end": 4286,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2200,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2200,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2200,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2200,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2200,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2200,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 2263,
											"end": 2274,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2263,
											"end": 2274,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2263,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2263,
											"end": 2274,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2263,
											"end": 2274,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2263,
											"end": 2274,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 2263,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2263,
											"end": 2280,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2263,
											"end": 2280,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2263,
											"end": 2280,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2249,
											"end": 2260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2249,
											"end": 2280,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2249,
											"end": 2280,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2249,
											"end": 2280,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2249,
											"end": 2280,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2249,
											"end": 2280,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2249,
											"end": 2280,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2249,
											"end": 2280,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2249,
											"end": 2280,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2249,
											"end": 2280,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2249,
											"end": 2280,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2249,
											"end": 2280,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2249,
											"end": 2280,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2249,
											"end": 2280,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2249,
											"end": 2280,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2249,
											"end": 2280,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2249,
											"end": 2280,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2329,
											"end": 2338,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2316,
											"end": 2326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2316,
											"end": 2338,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2316,
											"end": 2338,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2316,
											"end": 2338,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2361,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2348,
											"end": 2374,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2374,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2348,
											"end": 2374,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2364,
											"end": 2374,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2374,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2374,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2374,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2454,
											"end": 2464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2454,
											"end": 2464,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 2468,
											"end": 2471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2468,
											"end": 2471,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2464,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 2442,
											"end": 2464,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2464,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 2442,
											"end": 2464,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2464,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 2442,
											"end": 2464,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2441,
											"end": 2471,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 2441,
											"end": 2471,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2441,
											"end": 2471,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2441,
											"end": 2471,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2441,
											"end": 2471,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2441,
											"end": 2471,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 2441,
											"end": 2471,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2418,
											"end": 2471,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2418,
											"end": 2471,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2489,
											"end": 2496,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 2496,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 2489,
											"end": 2496,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2481,
											"end": 2506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "8FC"
										},
										{
											"begin": 2507,
											"end": 2522,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2523,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2523,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2523,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2523,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2523,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2481,
											"end": 2523,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2481,
											"end": 2523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2481,
											"end": 2523,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2523,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2523,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2523,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2523,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2523,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2523,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2523,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2523,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2523,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2523,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2523,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2523,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2523,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2523,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2523,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2523,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2523,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2481,
											"end": 2523,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2523,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2481,
											"end": 2523,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2523,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2523,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2481,
											"end": 2523,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2523,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2481,
											"end": 2523,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2523,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1552,
											"end": 2530,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2924,
											"end": 2945,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 2945,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2952,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1311,
											"end": 1329,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1311,
											"end": 1329,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1192,
											"end": 1395,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1311,
											"end": 1329,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1311,
											"end": 1329,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1192,
											"end": 1395,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 1459,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1083,
											"end": 1459,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1130,
											"end": 1141,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1130,
											"end": 1141,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1144,
											"end": 1159,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1130,
											"end": 1141,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1130,
											"end": 1141,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1130,
											"end": 1141,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1130,
											"end": 1141,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1130,
											"end": 1159,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1122,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 1122,
											"end": 1191,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1122,
											"end": 1191,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1122,
											"end": 1191,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1122,
											"end": 1191,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1122,
											"end": 1191,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2075,
											"end": 2077,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1122,
											"end": 1191,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1122,
											"end": 1191,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1122,
											"end": 1191,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2057,
											"end": 2078,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2114,
											"end": 2116,
											"name": "PUSH",
											"source": 4,
											"value": "1B"
										},
										{
											"begin": 2094,
											"end": 2112,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2094,
											"end": 2112,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2094,
											"end": 2112,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2087,
											"end": 2117,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2153,
											"end": 2182,
											"name": "PUSH",
											"source": 4,
											"value": "4C6173742067616D65206973207374696C6C2072756E6E696E67210000000000"
										},
										{
											"begin": 2133,
											"end": 2151,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2133,
											"end": 2151,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2133,
											"end": 2151,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2126,
											"end": 2183,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2218,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2200,
											"end": 2218,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1873,
											"end": 2224,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1191,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 1122,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1210,
											"end": 1220,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1210,
											"end": 1220,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1210,
											"end": 1220,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1210,
											"end": 1220,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1210,
											"end": 1220,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1210,
											"end": 1220,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1209,
											"end": 1220,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 1201,
											"end": 1263,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1263,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1263,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1201,
											"end": 1263,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1263,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5181,
											"end": 5183,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1263,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1201,
											"end": 1263,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1263,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5163,
											"end": 5184,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5220,
											"end": 5222,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 5200,
											"end": 5218,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5200,
											"end": 5218,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5200,
											"end": 5218,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5193,
											"end": 5223,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5259,
											"end": 5293,
											"name": "PUSH",
											"source": 4,
											"value": "4C6173742067616D65206973207374696C6C2077616974696E6720666F722072"
										},
										{
											"begin": 5239,
											"end": 5257,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 5239,
											"end": 5257,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5239,
											"end": 5257,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5232,
											"end": 5294,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6573756C7421"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5310,
											"end": 5328,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 5310,
											"end": 5328,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5310,
											"end": 5328,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5303,
											"end": 5339,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5356,
											"end": 5375,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 5356,
											"end": 5375,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 4979,
											"end": 5381,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1263,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 1201,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1295,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 1295,
											"end": 1310,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 1313,
											"end": 1317,
											"name": "PUSH",
											"source": 3,
											"value": "E10"
										},
										{
											"begin": 1295,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 1295,
											"end": 1317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1295,
											"end": 1317,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 1295,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1274,
											"end": 1285,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1274,
											"end": 1318,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1274,
											"end": 1318,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1274,
											"end": 1318,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1274,
											"end": 1318,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1274,
											"end": 1318,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1274,
											"end": 1318,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1274,
											"end": 1318,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1274,
											"end": 1318,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1274,
											"end": 1318,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1274,
											"end": 1318,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1274,
											"end": 1318,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1274,
											"end": 1318,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1274,
											"end": 1318,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1274,
											"end": 1318,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1274,
											"end": 1318,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1274,
											"end": 1318,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1342,
											"end": 1352,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1342,
											"end": 1359,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1342,
											"end": 1359,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1402,
											"end": 1428,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1402,
											"end": 1428,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1402,
											"end": 1428,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1402,
											"end": 1428,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1448,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1438,
											"end": 1452,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1083,
											"end": 1459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2431,
											"end": 2738,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2431,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1755,
											"end": 1756,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2558,
											"end": 2565,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2558,
											"end": 2565,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2576,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3EE5AEB5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1755,
											"end": 1756,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2714,
											"end": 2721,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2714,
											"end": 2731,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 237,
											"end": 417,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 237,
											"end": 417,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 296,
											"end": 302,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 349,
											"end": 351,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 337,
											"end": 346,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 328,
											"end": 335,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 324,
											"end": 347,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 320,
											"end": 352,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 317,
											"end": 369,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 317,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 317,
											"end": 369,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 365,
											"end": 366,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 363,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 355,
											"end": 367,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 317,
											"end": 369,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 317,
											"end": 369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 388,
											"end": 411,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 388,
											"end": 411,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 237,
											"end": 417,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 237,
											"end": 417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1582,
											"end": 1868,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 1582,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1641,
											"end": 1647,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1694,
											"end": 1696,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1682,
											"end": 1691,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1673,
											"end": 1680,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1692,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1697,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1714,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 1662,
											"end": 1714,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1711,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1707,
											"end": 1708,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1712,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1714,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 1662,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1759,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1759,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1788,
											"end": 1819,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1788,
											"end": 1819,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1820,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1820,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1768,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1768,
											"end": 1838,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1834,
											"end": 1835,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1832,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1836,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1768,
											"end": 1838,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1768,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1862,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1582,
											"end": 1868,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1582,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3760,
											"end": 3887,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 3760,
											"end": 3887,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3821,
											"end": 3831,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 3816,
											"end": 3819,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3812,
											"end": 3832,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3809,
											"end": 3810,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3802,
											"end": 3833,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3852,
											"end": 3856,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 3849,
											"end": 3850,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3842,
											"end": 3857,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3876,
											"end": 3880,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3873,
											"end": 3874,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3866,
											"end": 3881,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3892,
											"end": 4118,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 3892,
											"end": 4118,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3931,
											"end": 3934,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4028,
											"end": 4030,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4021,
											"end": 4026,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4017,
											"end": 4031,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4055,
											"end": 4057,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4046,
											"end": 4053,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4058,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4040,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 4040,
											"end": 4081,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 4061,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 4061,
											"end": 4079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4079,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 4061,
											"end": 4079,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4110,
											"end": 4111,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4097,
											"end": 4112,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4097,
											"end": 4112,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3892,
											"end": 4118,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3892,
											"end": 4118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4399,
											"end": 4579,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 4399,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4504,
											"end": 4514,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4504,
											"end": 4514,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4504,
											"end": 4514,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4516,
											"end": 4526,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4516,
											"end": 4526,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4516,
											"end": 4526,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4500,
											"end": 4527,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4500,
											"end": 4527,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4539,
											"end": 4550,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4539,
											"end": 4550,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4539,
											"end": 4550,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4536,
											"end": 4573,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4536,
											"end": 4573,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 4536,
											"end": 4573,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4553,
											"end": 4571,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 4553,
											"end": 4571,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 4553,
											"end": 4571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4553,
											"end": 4571,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 4553,
											"end": 4571,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4536,
											"end": 4573,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4399,
											"end": 4579,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4399,
											"end": 4579,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4399,
											"end": 4579,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4399,
											"end": 4579,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4399,
											"end": 4579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4584,
											"end": 4752,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 4584,
											"end": 4752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4657,
											"end": 4666,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4657,
											"end": 4666,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4657,
											"end": 4666,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4688,
											"end": 4697,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4688,
											"end": 4697,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4705,
											"end": 4720,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4705,
											"end": 4720,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4705,
											"end": 4720,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4699,
											"end": 4721,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4699,
											"end": 4721,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4685,
											"end": 4722,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 4675,
											"end": 4746,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 4675,
											"end": 4746,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4726,
											"end": 4744,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 4726,
											"end": 4744,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 4726,
											"end": 4744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4726,
											"end": 4744,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 4726,
											"end": 4744,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4584,
											"end": 4752,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4584,
											"end": 4752,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4584,
											"end": 4752,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4584,
											"end": 4752,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4584,
											"end": 4752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4757,
											"end": 4974,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 4757,
											"end": 4974,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4797,
											"end": 4798,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4823,
											"end": 4824,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4813,
											"end": 4945,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 4813,
											"end": 4945,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4877,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 4862,
											"end": 4865,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 4858,
											"end": 4878,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 4855,
											"end": 4856,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4848,
											"end": 4879,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4902,
											"end": 4906,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 4899,
											"end": 4900,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4892,
											"end": 4907,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4930,
											"end": 4934,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4927,
											"end": 4928,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4920,
											"end": 4935,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4813,
											"end": 4945,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 4813,
											"end": 4945,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4959,
											"end": 4968,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4959,
											"end": 4968,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4757,
											"end": 4974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5386,
											"end": 5511,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 5386,
											"end": 5511,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5451,
											"end": 5460,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5451,
											"end": 5460,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5451,
											"end": 5460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5472,
											"end": 5482,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5472,
											"end": 5482,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5472,
											"end": 5482,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5469,
											"end": 5505,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5469,
											"end": 5505,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 5469,
											"end": 5505,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5485,
											"end": 5503,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 5485,
											"end": 5503,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 5485,
											"end": 5503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"contracts/BiddingWar.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"bidCounter()": "03f69354",
							"bids(uint256)": "4423c5f1",
							"commission()": "e1489191",
							"declareResult()": "8574c296",
							"gameEndTime()": "44d9bc5f",
							"gameStatus()": "722fed7e",
							"highestBid()": "d57bde79",
							"highestBidder()": "91f90157",
							"owner()": "8da5cb5b",
							"placeBid()": "ecfc7ecc",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint128\",\"name\":\"bid\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"when\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"BidEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint128\",\"name\":\"bid\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"highestBid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"winAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"when\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"WinEvent\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"bidCounter\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"when\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"commission\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"declareResult\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gameEndTime\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gameStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"highestBid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"highestBidder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"placeBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"declareResult()\":{\"notice\":\"declare result and restart the game\"},\"placeBid()\":{\"notice\":\"place the bid\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BiddingWar.sol\":\"BiddingWar\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]},\"contracts/BiddingWar.sol\":{\"keccak256\":\"0xd6cd0f78fe8edbd20499bb75d2cf1e3943cc4614d4d5ed4a9a0020135ad95cff\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://10922a57c138a2518a6411cd71294e839116f522c060218f12a776bf36b9e798\",\"dweb:/ipfs/QmWKkgEMSM5Pks4ncWwcjLWz9gwQU2QRkT11ChmWapeW8i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/BiddingWar.sol:BiddingWar",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 188,
								"contract": "contracts/BiddingWar.sol:BiddingWar",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 257,
								"contract": "contracts/BiddingWar.sol:BiddingWar",
								"label": "commission",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 260,
								"contract": "contracts/BiddingWar.sol:BiddingWar",
								"label": "bidCounter",
								"offset": 0,
								"slot": "3",
								"type": "t_uint128"
							},
							{
								"astId": 262,
								"contract": "contracts/BiddingWar.sol:BiddingWar",
								"label": "gameEndTime",
								"offset": 16,
								"slot": "3",
								"type": "t_uint64"
							},
							{
								"astId": 264,
								"contract": "contracts/BiddingWar.sol:BiddingWar",
								"label": "highestBid",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 266,
								"contract": "contracts/BiddingWar.sol:BiddingWar",
								"label": "highestBidder",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 269,
								"contract": "contracts/BiddingWar.sol:BiddingWar",
								"label": "gameStatus",
								"offset": 20,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 281,
								"contract": "contracts/BiddingWar.sol:BiddingWar",
								"label": "bids",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_struct(Bid)276_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_uint256,t_struct(Bid)276_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct BiddingWar.Bid)",
								"numberOfBytes": "32",
								"value": "t_struct(Bid)276_storage"
							},
							"t_struct(Bid)276_storage": {
								"encoding": "inplace",
								"label": "struct BiddingWar.Bid",
								"members": [
									{
										"astId": 271,
										"contract": "contracts/BiddingWar.sol:BiddingWar",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 273,
										"contract": "contracts/BiddingWar.sol:BiddingWar",
										"label": "user",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 275,
										"contract": "contracts/BiddingWar.sol:BiddingWar",
										"label": "when",
										"offset": 20,
										"slot": "1",
										"type": "t_uint64"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint128": {
								"encoding": "inplace",
								"label": "uint128",
								"numberOfBytes": "16"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"declareResult()": {
								"notice": "declare result and restart the game"
							},
							"placeBid()": {
								"notice": "place the bid"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 178,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 177,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 177,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								177
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 159,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							177
						]
					},
					"id": 178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 177,
							"linearizedBaseContracts": [
								177
							],
							"name": "Context",
							"nameLocation": "642:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "718:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 155,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 154,
												"id": 157,
												"nodeType": "Return",
												"src": "728:17:1"
											}
										]
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "709:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:1"
									},
									"scope": 177,
									"src": "656:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "825:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 164,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 163,
												"id": 166,
												"nodeType": "Return",
												"src": "835:15:1"
											}
										]
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "809:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:1"
									},
									"scope": 177,
									"src": "758:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "935:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 172,
												"id": 174,
												"nodeType": "Return",
												"src": "945:8:1"
											}
										]
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:1"
									},
									"scope": 177,
									"src": "863:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 178,
							"src": "624:338:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							246
						]
					},
					"id": 247,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 179,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 180,
								"nodeType": "StructuredDocumentation",
								"src": "135:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 246,
							"linearizedBaseContracts": [
								246
							],
							"name": "ReentrancyGuard",
							"nameLocation": "904:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 183,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "1699:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 246,
									"src": "1674:40:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 181,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1674:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 182,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1713:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 186,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "1745:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 246,
									"src": "1720:36:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 184,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1720:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 185,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1755:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 188,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1779:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 246,
									"src": "1763:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 187,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1763:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1793:52:2",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 191,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "1856:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1884:2:2"
									},
									"src": "1850:37:2"
								},
								{
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "1907:38:2",
										"statements": [
											{
												"expression": {
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 194,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 188,
														"src": "1917:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 195,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "1927:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1917:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 197,
												"nodeType": "ExpressionStatement",
												"src": "1917:21:2"
											}
										]
									},
									"id": 199,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1904:2:2"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1907:0:2"
									},
									"scope": 246,
									"src": "1893:52:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "2346:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 202,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "2356:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2356:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 204,
												"nodeType": "ExpressionStatement",
												"src": "2356:21:2"
											},
											{
												"id": 205,
												"nodeType": "PlaceholderStatement",
												"src": "2387:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 206,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "2398:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 208,
												"nodeType": "ExpressionStatement",
												"src": "2398:20:2"
											}
										]
									},
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "1951:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 210,
									"name": "nonReentrant",
									"nameLocation": "2331:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2343:2:2"
									},
									"src": "2322:103:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 225,
										"nodeType": "Block",
										"src": "2470:268:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 213,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 188,
														"src": "2558:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 214,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "2569:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2558:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 220,
												"nodeType": "IfStatement",
												"src": "2554:86:2",
												"trueBody": {
													"id": 219,
													"nodeType": "Block",
													"src": "2578:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 216,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 191,
																	"src": "2599:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2599:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 218,
															"nodeType": "RevertStatement",
															"src": "2592:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 221,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 188,
														"src": "2714:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 222,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "2724:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2714:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "2714:17:2"
											}
										]
									},
									"id": 226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2440:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2459:2:2"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:2"
									},
									"scope": 246,
									"src": "2431:307:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 233,
										"nodeType": "Block",
										"src": "2782:170:2",
										"statements": [
											{
												"expression": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 229,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 188,
														"src": "2924:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 230,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "2934:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2924:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "2924:21:2"
											}
										]
									},
									"id": 234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2753:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2771:2:2"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2782:0:2"
									},
									"scope": 246,
									"src": "2744:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 244,
										"nodeType": "Block",
										"src": "3195:42:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 240,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 188,
														"src": "3212:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 241,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "3223:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3212:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 239,
												"id": 243,
												"nodeType": "Return",
												"src": "3205:25:2"
											}
										]
									},
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "2958:168:2",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3140:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3163:2:2"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "3189:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 237,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3189:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3188:6:2"
									},
									"scope": 246,
									"src": "3131:106:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 247,
							"src": "886:2353:2",
							"usedErrors": [
								191
							],
							"usedEvents": []
						}
					],
					"src": "109:3131:2"
				},
				"id": 2
			},
			"contracts/BiddingWar.sol": {
				"ast": {
					"absolutePath": "contracts/BiddingWar.sol",
					"exportedSymbols": {
						"BiddingWar": [
							552
						],
						"Context": [
							177
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							246
						]
					},
					"id": 553,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 248,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "39:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 249,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 553,
							"sourceUnit": 148,
							"src": "123:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"id": 250,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 553,
							"sourceUnit": 247,
							"src": "176:59:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 251,
										"name": "Ownable",
										"nameLocations": [
											"336:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "336:7:3"
									},
									"id": 252,
									"nodeType": "InheritanceSpecifier",
									"src": "336:7:3"
								},
								{
									"baseName": {
										"id": 253,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"345:15:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 246,
										"src": "345:15:3"
									},
									"id": 254,
									"nodeType": "InheritanceSpecifier",
									"src": "345:15:3"
								}
							],
							"canonicalName": "BiddingWar",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 552,
							"linearizedBaseContracts": [
								552,
								246,
								147,
								177
							],
							"name": "BiddingWar",
							"nameLocation": "322:10:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "e1489191",
									"id": 257,
									"mutability": "mutable",
									"name": "commission",
									"nameLocation": "379:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 552,
									"src": "367:26:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 255,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "367:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 256,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "392:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "03f69354",
									"id": 260,
									"mutability": "mutable",
									"name": "bidCounter",
									"nameLocation": "414:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 552,
									"src": "399:29:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint128",
										"typeString": "uint128"
									},
									"typeName": {
										"id": 258,
										"name": "uint128",
										"nodeType": "ElementaryTypeName",
										"src": "399:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint128",
											"typeString": "uint128"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 259,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "427:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "44d9bc5f",
									"id": 262,
									"mutability": "mutable",
									"name": "gameEndTime",
									"nameLocation": "448:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 552,
									"src": "434:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 261,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "434:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d57bde79",
									"id": 264,
									"mutability": "mutable",
									"name": "highestBid",
									"nameLocation": "477:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 552,
									"src": "465:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 263,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "465:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "91f90157",
									"id": 266,
									"mutability": "mutable",
									"name": "highestBidder",
									"nameLocation": "508:13:3",
									"nodeType": "VariableDeclaration",
									"scope": 552,
									"src": "493:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 265,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "493:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "722fed7e",
									"id": 269,
									"mutability": "mutable",
									"name": "gameStatus",
									"nameLocation": "539:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 552,
									"src": "527:30:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 267,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "527:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 268,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "552:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "BiddingWar.Bid",
									"id": 276,
									"members": [
										{
											"constant": false,
											"id": 271,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "590:6:3",
											"nodeType": "VariableDeclaration",
											"scope": 276,
											"src": "585:11:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 270,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "585:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 273,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "614:4:3",
											"nodeType": "VariableDeclaration",
											"scope": 276,
											"src": "606:12:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 272,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "606:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 275,
											"mutability": "mutable",
											"name": "when",
											"nameLocation": "635:4:3",
											"nodeType": "VariableDeclaration",
											"scope": 276,
											"src": "628:11:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 274,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "628:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bid",
									"nameLocation": "571:3:3",
									"nodeType": "StructDefinition",
									"scope": 552,
									"src": "564:82:3",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4423c5f1",
									"id": 281,
									"mutability": "mutable",
									"name": "bids",
									"nameLocation": "680:4:3",
									"nodeType": "VariableDeclaration",
									"scope": 552,
									"src": "652:32:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bid_$276_storage_$",
										"typeString": "mapping(uint256 => struct BiddingWar.Bid)"
									},
									"typeName": {
										"id": 280,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 277,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "660:4:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "652:20:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bid_$276_storage_$",
											"typeString": "mapping(uint256 => struct BiddingWar.Bid)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 279,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 278,
												"name": "Bid",
												"nameLocations": [
													"668:3:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 276,
												"src": "668:3:3"
											},
											"referencedDeclaration": 276,
											"src": "668:3:3",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Bid_$276_storage_ptr",
												"typeString": "struct BiddingWar.Bid"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "042ced85334596236356fb01034b15f35a1abbc3c7c51ba1b8d3ad152bfeda79",
									"id": 291,
									"name": "BidEvent",
									"nameLocation": "697:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"indexed": true,
												"mutability": "mutable",
												"name": "bid",
												"nameLocation": "731:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "715:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 282,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "749:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "744:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "744:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"indexed": false,
												"mutability": "mutable",
												"name": "when",
												"nameLocation": "772:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "765:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 286,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "765:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "802:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "786:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "786:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "705:107:3"
									},
									"src": "691:122:3"
								},
								{
									"anonymous": false,
									"eventSelector": "e900abebb29da21b2ce54f9bf92ace3e1f761a0a9a918473570dd7166057bc1f",
									"id": 303,
									"name": "WinEvent",
									"nameLocation": "825:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"indexed": true,
												"mutability": "mutable",
												"name": "bid",
												"nameLocation": "859:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "843:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 292,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "843:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"indexed": false,
												"mutability": "mutable",
												"name": "highestBid",
												"nameLocation": "877:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "872:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "872:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"indexed": false,
												"mutability": "mutable",
												"name": "winAmount",
												"nameLocation": "902:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "897:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "897:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"indexed": false,
												"mutability": "mutable",
												"name": "when",
												"nameLocation": "928:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "921:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 298,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "921:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"indexed": true,
												"mutability": "mutable",
												"name": "winner",
												"nameLocation": "958:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "942:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "942:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "833:137:3"
									},
									"src": "819:152:3"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "1011:28:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "startGame",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 358,
														"src": "1021:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1021:11:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "1021:11:3"
											}
										]
									},
									"id": 314,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 306,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "999:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1003:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "999:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 308,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 305,
												"name": "Ownable",
												"nameLocations": [
													"991:7:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "991:7:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "991:19:3"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "988:2:3"
									},
									"returnParameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1011:0:3"
									},
									"scope": 552,
									"src": "977:62:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 357,
										"nodeType": "Block",
										"src": "1112:347:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 319,
																"name": "gameEndTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 262,
																"src": "1130:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 320,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1144:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1150:9:3",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1144:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1130:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c6173742067616d65206973207374696c6c2072756e6e696e6721",
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1161:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6be4648f1cbdd4ad144a891ed8126b3fbd155bb5160130ead8b7dd53741d04fb",
																"typeString": "literal_string \"Last game is still running!\""
															},
															"value": "Last game is still running!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6be4648f1cbdd4ad144a891ed8126b3fbd155bb5160130ead8b7dd53741d04fb",
																"typeString": "literal_string \"Last game is still running!\""
															}
														],
														"id": 318,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1122:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1122:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 325,
												"nodeType": "ExpressionStatement",
												"src": "1122:69:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1209:11:3",
															"subExpression": {
																"id": 327,
																"name": "gameStatus",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 269,
																"src": "1210:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c6173742067616d65206973207374696c6c2077616974696e6720666f7220726573756c7421",
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1222:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_13cbd6cd63292023c9c4f6c179a19b06f21ee11c3198ccc79c54de96059b6cda",
																"typeString": "literal_string \"Last game is still waiting for result!\""
															},
															"value": "Last game is still waiting for result!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_13cbd6cd63292023c9c4f6c179a19b06f21ee11c3198ccc79c54de96059b6cda",
																"typeString": "literal_string \"Last game is still waiting for result!\""
															}
														],
														"id": 326,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1201:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1201:62:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 331,
												"nodeType": "ExpressionStatement",
												"src": "1201:62:3"
											},
											{
												"expression": {
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 332,
														"name": "gameEndTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 262,
														"src": "1274:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 335,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1295:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1301:9:3",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "1295:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "33363030",
																	"id": 337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1313:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3600_by_1",
																		"typeString": "int_const 3600"
																	},
																	"value": "3600"
																},
																"src": "1295:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1288:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 333,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "1288:6:3",
																"typeDescriptions": {}
															}
														},
														"id": 339,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1288:30:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "1274:44:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 341,
												"nodeType": "ExpressionStatement",
												"src": "1274:44:3"
											},
											{
												"expression": {
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 342,
														"name": "gameStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "1342:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 343,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1355:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1342:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 345,
												"nodeType": "ExpressionStatement",
												"src": "1342:17:3"
											},
											{
												"expression": {
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 346,
														"name": "highestBidder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "1402:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 349,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1426:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1418:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 347,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1418:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 350,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1418:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1402:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 352,
												"nodeType": "ExpressionStatement",
												"src": "1402:26:3"
											},
											{
												"expression": {
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 353,
														"name": "highestBid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "1438:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 354,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1451:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1438:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 356,
												"nodeType": "ExpressionStatement",
												"src": "1438:14:3"
											}
										]
									},
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "1045:33:3",
										"text": " start the game"
									},
									"id": 358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "startGame",
									"nameLocation": "1092:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1101:2:3"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1112:0:3"
									},
									"scope": 552,
									"src": "1083:376:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "1552:978:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 365,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1570:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1574:5:3",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1570:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 367,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1582:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1570:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42696420616d6f756e742073686f756c642062652067726561746572207468616e207a65726f21",
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1585:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2f3d24c2b0b779cda737103feb7342650c0519e7617aba5c0c9d5cae191dbedd",
																"typeString": "literal_string \"Bid amount should be greater than zero!\""
															},
															"value": "Bid amount should be greater than zero!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2f3d24c2b0b779cda737103feb7342650c0519e7617aba5c0c9d5cae191dbedd",
																"typeString": "literal_string \"Bid amount should be greater than zero!\""
															}
														],
														"id": 364,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1562:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1562:65:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 371,
												"nodeType": "ExpressionStatement",
												"src": "1562:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 373,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1658:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 374,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1662:5:3",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1658:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 375,
																"name": "highestBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 264,
																"src": "1670:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1658:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42696420616d6f756e742073686f756c642062652067726561746572207468616e206c6173742062696420616d6f756e7421",
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1694:52:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4cfa8905255b6a91c075f72e388cefbf94d53fe7f5658a1c78a1b88470cc018f",
																"typeString": "literal_string \"Bid amount should be greater than last bid amount!\""
															},
															"value": "Bid amount should be greater than last bid amount!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4cfa8905255b6a91c075f72e388cefbf94d53fe7f5658a1c78a1b88470cc018f",
																"typeString": "literal_string \"Bid amount should be greater than last bid amount!\""
															}
														],
														"id": 372,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1637:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1637:119:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "1637:119:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 381,
																"name": "gameEndTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 262,
																"src": "1774:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"expression": {
																	"id": 382,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1788:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1794:9:3",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1788:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1774:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "47616d65206f766572207761697420666f72206e65772067616d6521",
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1805:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e0ac64d64e096a8e0fe140ce12c154a30c281323fa269566ccce5788e6f7253d",
																"typeString": "literal_string \"Game over wait for new game!\""
															},
															"value": "Game over wait for new game!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e0ac64d64e096a8e0fe140ce12c154a30c281323fa269566ccce5788e6f7253d",
																"typeString": "literal_string \"Game over wait for new game!\""
															}
														],
														"id": 380,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1766:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1766:70:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 387,
												"nodeType": "ExpressionStatement",
												"src": "1766:70:3"
											},
											{
												"expression": {
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "1900:12:3",
													"subExpression": {
														"id": 388,
														"name": "bidCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 260,
														"src": "1900:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 390,
												"nodeType": "ExpressionStatement",
												"src": "1900:12:3"
											},
											{
												"expression": {
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 391,
																"name": "bids",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 281,
																"src": "1922:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bid_$276_storage_$",
																	"typeString": "mapping(uint256 => struct BiddingWar.Bid storage ref)"
																}
															},
															"id": 393,
															"indexExpression": {
																"id": 392,
																"name": "bidCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 260,
																"src": "1927:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1922:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bid_$276_storage",
																"typeString": "struct BiddingWar.Bid storage ref"
															}
														},
														"id": 394,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1939:6:3",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 271,
														"src": "1922:23:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 395,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1948:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 396,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1952:5:3",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "1948:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1922:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 398,
												"nodeType": "ExpressionStatement",
												"src": "1922:35:3"
											},
											{
												"expression": {
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 399,
																"name": "bids",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 281,
																"src": "1967:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bid_$276_storage_$",
																	"typeString": "mapping(uint256 => struct BiddingWar.Bid storage ref)"
																}
															},
															"id": 401,
															"indexExpression": {
																"id": 400,
																"name": "bidCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 260,
																"src": "1972:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1967:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bid_$276_storage",
																"typeString": "struct BiddingWar.Bid storage ref"
															}
														},
														"id": 402,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1984:4:3",
														"memberName": "when",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 275,
														"src": "1967:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 405,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1998:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2004:9:3",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1998:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1991:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 403,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "1991:6:3",
																"typeDescriptions": {}
															}
														},
														"id": 407,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1991:23:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "1967:47:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "1967:47:3"
											},
											{
												"expression": {
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 410,
																"name": "bids",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 281,
																"src": "2024:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bid_$276_storage_$",
																	"typeString": "mapping(uint256 => struct BiddingWar.Bid storage ref)"
																}
															},
															"id": 412,
															"indexExpression": {
																"id": 411,
																"name": "bidCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 260,
																"src": "2029:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2024:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bid_$276_storage",
																"typeString": "struct BiddingWar.Bid storage ref"
															}
														},
														"id": 413,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2041:4:3",
														"memberName": "user",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 273,
														"src": "2024:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 414,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2048:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 415,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2052:6:3",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2048:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2024:34:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 417,
												"nodeType": "ExpressionStatement",
												"src": "2024:34:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 419,
															"name": "bidCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "2096:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														{
															"expression": {
																"id": 420,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2120:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2124:5:3",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "2120:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 424,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2150:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2156:9:3",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2150:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2143:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint64_$",
																	"typeString": "type(uint64)"
																},
																"typeName": {
																	"id": 422,
																	"name": "uint64",
																	"nodeType": "ElementaryTypeName",
																	"src": "2143:6:3",
																	"typeDescriptions": {}
																}
															},
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2143:23:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"expression": {
																"id": 427,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2180:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2184:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2180:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 418,
														"name": "BidEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "2074:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint128_$_t_uint256_$_t_uint64_$_t_address_$returns$__$",
															"typeString": "function (uint128,uint256,uint64,address)"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2074:126:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 430,
												"nodeType": "EmitStatement",
												"src": "2069:131:3"
											},
											{
												"expression": {
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 431,
														"name": "gameEndTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 262,
														"src": "2249:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 432,
															"name": "gameEndTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "2263:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "363030",
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2277:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_600_by_1",
																"typeString": "int_const 600"
															},
															"value": "600"
														},
														"src": "2263:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "2249:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 436,
												"nodeType": "ExpressionStatement",
												"src": "2249:31:3"
											},
											{
												"expression": {
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 437,
														"name": "highestBid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "2316:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 438,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2329:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2333:5:3",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "2329:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2316:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "2316:22:3"
											},
											{
												"expression": {
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 442,
														"name": "highestBidder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "2348:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 443,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2364:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 444,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2368:6:3",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2364:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2348:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "2348:26:3"
											},
											{
												"assignments": [
													448
												],
												"declarations": [
													{
														"constant": false,
														"id": 448,
														"mutability": "mutable",
														"name": "commissionValue",
														"nameLocation": "2423:15:3",
														"nodeType": "VariableDeclaration",
														"scope": 466,
														"src": "2418:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 447,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2418:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 456,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 449,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2442:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2446:5:3",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "2442:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 451,
																	"name": "commission",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 257,
																	"src": "2454:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2442:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 453,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2441:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 454,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2468:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "2441:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2418:53:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 463,
															"name": "commissionValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "2507:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 459,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "2489:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2489:7:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2481:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 457,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2481:8:3",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2481:16:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 462,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2498:8:3",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2481:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2481:42:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 465,
												"nodeType": "ExpressionStatement",
												"src": "2481:42:3"
											}
										]
									},
									"documentation": {
										"id": 359,
										"nodeType": "StructuredDocumentation",
										"src": "1465:32:3",
										"text": " place the bid"
									},
									"functionSelector": "ecfc7ecc",
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 362,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 361,
												"name": "nonReentrant",
												"nameLocations": [
													"1539:12:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 210,
												"src": "1539:12:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1539:12:3"
										}
									],
									"name": "placeBid",
									"nameLocation": "1511:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1519:2:3"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1552:0:3"
									},
									"scope": 552,
									"src": "1502:1028:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 521,
										"nodeType": "Block",
										"src": "2637:679:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 474,
																"name": "gameEndTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 262,
																"src": "2655:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 475,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2669:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2675:9:3",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2669:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2655:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c6173742067616d65206973207374696c6c2072756e6e696e6721",
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2686:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6be4648f1cbdd4ad144a891ed8126b3fbd155bb5160130ead8b7dd53741d04fb",
																"typeString": "literal_string \"Last game is still running!\""
															},
															"value": "Last game is still running!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6be4648f1cbdd4ad144a891ed8126b3fbd155bb5160130ead8b7dd53741d04fb",
																"typeString": "literal_string \"Last game is still running!\""
															}
														],
														"id": 473,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2647:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2647:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 480,
												"nodeType": "ExpressionStatement",
												"src": "2647:69:3"
											},
											{
												"expression": {
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 481,
														"name": "gameStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "2726:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 482,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2739:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2726:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 484,
												"nodeType": "ExpressionStatement",
												"src": "2726:18:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 485,
														"name": "highestBidder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "2811:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 488,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2836:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2828:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 486,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2828:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2828:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2811:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 517,
												"nodeType": "IfStatement",
												"src": "2807:453:3",
												"trueBody": {
													"id": 516,
													"nodeType": "Block",
													"src": "2840:420:3",
													"statements": [
														{
															"assignments": [
																492
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 492,
																	"mutability": "mutable",
																	"name": "winAmt",
																	"nameLocation": "2911:6:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 516,
																	"src": "2906:11:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 491,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "2906:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 494,
															"initialValue": {
																"hexValue": "30",
																"id": 493,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2920:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2906:15:3"
														},
														{
															"AST": {
																"nativeSrc": "2944:60:3",
																"nodeType": "YulBlock",
																"src": "2944:60:3",
																"statements": [
																	{
																		"nativeSrc": "2962:28:3",
																		"nodeType": "YulAssignment",
																		"src": "2962:28:3",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "address",
																						"nativeSrc": "2980:7:3",
																						"nodeType": "YulIdentifier",
																						"src": "2980:7:3"
																					},
																					"nativeSrc": "2980:9:3",
																					"nodeType": "YulFunctionCall",
																					"src": "2980:9:3"
																				}
																			],
																			"functionName": {
																				"name": "balance",
																				"nativeSrc": "2972:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2972:7:3"
																			},
																			"nativeSrc": "2972:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2972:18:3"
																		},
																		"variableNames": [
																			{
																				"name": "winAmt",
																				"nativeSrc": "2962:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2962:6:3"
																			}
																		]
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 492,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2962:6:3",
																	"valueSize": 1
																}
															],
															"id": 495,
															"nodeType": "InlineAssembly",
															"src": "2935:69:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 501,
																		"name": "winAmt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 492,
																		"src": "3049:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 498,
																				"name": "highestBidder",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 266,
																				"src": "3025:13:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 497,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3017:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 496,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3017:8:3",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3017:22:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3040:8:3",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "3017:31:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3017:39:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 503,
															"nodeType": "ExpressionStatement",
															"src": "3017:39:3"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 505,
																		"name": "bidCounter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "3101:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	{
																		"id": 506,
																		"name": "highestBid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 264,
																		"src": "3129:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 507,
																		"name": "winAmt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 492,
																		"src": "3157:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 510,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "3188:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 511,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3194:9:3",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "3188:15:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 509,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3181:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint64_$",
																				"typeString": "type(uint64)"
																			},
																			"typeName": {
																				"id": 508,
																				"name": "uint64",
																				"nodeType": "ElementaryTypeName",
																				"src": "3181:6:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3181:23:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	},
																	{
																		"id": 513,
																		"name": "highestBidder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 266,
																		"src": "3222:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 504,
																	"name": "WinEvent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 303,
																	"src": "3075:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint64_$_t_address_$returns$__$",
																		"typeString": "function (uint128,uint256,uint256,uint64,address)"
																	}
																},
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3075:174:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 515,
															"nodeType": "EmitStatement",
															"src": "3070:179:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 518,
														"name": "startGame",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 358,
														"src": "3298:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3298:11:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 520,
												"nodeType": "ExpressionStatement",
												"src": "3298:11:3"
											}
										]
									},
									"documentation": {
										"id": 468,
										"nodeType": "StructuredDocumentation",
										"src": "2536:54:3",
										"text": " declare result and restart the game"
									},
									"functionSelector": "8574c296",
									"id": 522,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 471,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 470,
												"name": "onlyOwner",
												"nameLocations": [
													"2627:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2627:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2627:9:3"
										}
									],
									"name": "declareResult",
									"nameLocation": "2604:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2617:2:3"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2637:0:3"
									},
									"scope": 552,
									"src": "2595:721:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 536,
										"nodeType": "Block",
										"src": "3427:53:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 532,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3463:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3467:5:3",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "3463:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 528,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "3445:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3445:7:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3437:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 526,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3437:8:3",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3437:16:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 531,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3454:8:3",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "3437:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3437:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "3437:36:3"
											}
										]
									},
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "3322:60:3",
										"text": " common function to transfer fund to owner"
									},
									"id": 537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fundsTransferToOwner",
									"nameLocation": "3396:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3416:2:3"
									},
									"returnParameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3427:0:3"
									},
									"scope": 552,
									"src": "3387:93:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "3513:39:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 540,
														"name": "fundsTransferToOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 537,
														"src": "3523:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3523:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "3523:22:3"
											}
										]
									},
									"id": 544,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3493:2:3"
									},
									"returnParameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3513:0:3"
									},
									"scope": 552,
									"src": "3486:66:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 550,
										"nodeType": "Block",
										"src": "3586:39:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 547,
														"name": "fundsTransferToOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 537,
														"src": "3596:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3596:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 549,
												"nodeType": "ExpressionStatement",
												"src": "3596:22:3"
											}
										]
									},
									"id": 551,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3566:2:3"
									},
									"returnParameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3586:0:3"
									},
									"scope": 552,
									"src": "3558:67:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 553,
							"src": "313:3314:3",
							"usedErrors": [
								13,
								18,
								191
							],
							"usedEvents": [
								24,
								291,
								303
							]
						}
					],
					"src": "39:3589:3"
				},
				"id": 3
			}
		}
	}
}